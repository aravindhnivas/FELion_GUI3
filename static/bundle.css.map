{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\VirtualList.svelte",
    "..\\Dialog.svelte",
    "..\\Field.svelte",
    "..\\Input.svelte",
    "..\\Message.svelte",
    "..\\Notice.svelte",
    "..\\Notices.svelte",
    "..\\Notification.svelte",
    "..\\NotificationNotice.svelte",
    "..\\Snackbar.svelte",
    "..\\Switch.svelte",
    "..\\Tab.svelte",
    "..\\Tabs.svelte",
    "..\\Toast.svelte",
    "..\\Home.svelte",
    "..\\Masspec.svelte",
    "..\\Misc.svelte",
    "..\\Normline.svelte",
    "..\\Powerfile.svelte",
    "..\\Settings.svelte",
    "..\\THz.svelte",
    "..\\Timescan.svelte",
    "..\\FrequencyTable.svelte",
    "..\\FelixPlotWidgets.svelte",
    "..\\Editor.svelte",
    "..\\FileBrowser.svelte",
    "..\\Footer.svelte",
    "..\\Layout.svelte",
    "..\\Modal.svelte",
    "..\\Navbar.svelte",
    "..\\QuickView.svelte",
    "..\\ReportLayout.svelte",
    "..\\Table.svelte",
    "..\\Terminal.svelte",
    "..\\Hamburger1.svelte",
    "..\\Simplewave.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { onMount, tick } from 'svelte';\n\n\t// props\n\texport let items;\n\texport let height = '100%';\n\texport let itemHeight = undefined;\n\n\tlet foo;\n\n\t// read-only, but visible to consumers via bind:start\n\texport let start = 0;\n\texport let end = 0;\n\n\t// local state\n\tlet height_map = [];\n\tlet rows;\n\tlet viewport;\n\tlet contents;\n\tlet viewport_height = 0;\n\tlet visible;\n\tlet mounted;\n\n\tlet top = 0;\n\tlet bottom = 0;\n\tlet average_height;\n\n\t$: visible = items.slice(start, end).map((data, i) => {\n\t\treturn { index: i + start, data };\n\t});\n\n\t// whenever `items` changes, invalidate the current heightmap\n\t$: if (mounted) refresh(items, viewport_height, itemHeight);\n\n\tasync function refresh(items, viewport_height, itemHeight) {\n\t\tconst { scrollTop } = viewport;\n\n\t\tawait tick(); // wait until the DOM is up to date\n\n\t\tlet content_height = top - scrollTop;\n\t\tlet i = start;\n\n\t\twhile (content_height < viewport_height && i < items.length) {\n\t\t\tlet row = rows[i - start];\n\n\t\t\tif (!row) {\n\t\t\t\tend = i + 1;\n\t\t\t\tawait tick(); // render the newly visible row\n\t\t\t\trow = rows[i - start];\n\t\t\t}\n\n\t\t\tconst row_height = height_map[i] = itemHeight || row.offsetHeight;\n\t\t\tcontent_height += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tend = i;\n\n\t\tconst remaining = items.length - end;\n\t\taverage_height = (top + content_height) / end;\n\n\t\tbottom = remaining * average_height;\n\t\theight_map.length = items.length;\n\n\t}\n\n\tasync function handle_scroll() {\n\t\tconst { scrollTop } = viewport;\n\n\t\tconst old_start = start;\n\n\t\tfor (let v = 0; v < rows.length; v += 1) {\n\t\t\theight_map[start + v] = itemHeight || rows[v].offsetHeight;\n\t\t}\n\n\t\tlet i = 0;\n\t\tlet y = 0;\n\n\t\twhile (i < items.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\tif (y + row_height > scrollTop) {\n\t\t\t\tstart = i;\n\t\t\t\ttop = y;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\twhile (i < items.length) {\n\t\t\ty += height_map[i] || average_height;\n\t\t\ti += 1;\n\n\t\t\tif (y > scrollTop + viewport_height) break;\n\t\t}\n\n\t\tend = i;\n\n\t\tconst remaining = items.length - end;\n\t\taverage_height = y / end;\n\n\t\twhile (i < items.length) height_map[i++] = average_height;\n\t\tbottom = remaining * average_height;\n\n\t\t// prevent jumping if we scrolled up into unknown territory\n\t\tif (start < old_start) {\n\t\t\tawait tick();\n\n\t\t\tlet expected_height = 0;\n\t\t\tlet actual_height = 0;\n\n\t\t\tfor (let i = start; i < old_start; i +=1) {\n\t\t\t\tif (rows[i - start]) {\n\t\t\t\t\texpected_height += height_map[i];\n\t\t\t\t\tactual_height += itemHeight || rows[i - start].offsetHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst d = actual_height - expected_height;\n\t\t\tviewport.scrollTo(0, scrollTop + d);\n\t\t}\n\n\t\t// TODO if we overestimated the space these\n\t\t// rows would occupy we may need to add some\n\t\t// more. maybe we can just call handle_scroll again?\n\t}\n\n\t// trigger initial refresh\n\tonMount(() => {\n\t\trows = contents.getElementsByTagName('svelte-virtual-list-row');\n\t\tmounted = true;\n\t});\n</script>\n\n<style>\n\tsvelte-virtual-list-viewport {\n\t\tposition: relative;\n\t\toverflow-y: auto;\n\t\t-webkit-overflow-scrolling:touch;\n\t\tdisplay: block;\n\t}\n\n\tsvelte-virtual-list-contents, svelte-virtual-list-row {\n\t\tdisplay: block;\n\t}\n\n\tsvelte-virtual-list-row {\n\t\toverflow: hidden;\n\t}\n</style>\n\n<svelte-virtual-list-viewport\n\tbind:this={viewport}\n\tbind:offsetHeight={viewport_height}\n\ton:scroll={handle_scroll}\n\tstyle=\"height: {height};\"\n>\n\t<svelte-virtual-list-contents\n\t\tbind:this={contents}\n\t\tstyle=\"padding-top: {top}px; padding-bottom: {bottom}px;\"\n\t>\n\t\t{#each visible as row (row.index)}\n\t\t\t<svelte-virtual-list-row>\n\t\t\t\t<slot item={row.data}>Missing template</slot>\n\t\t\t</svelte-virtual-list-row>\n\t\t{/each}\n\t</svelte-virtual-list-contents>\n</svelte-virtual-list-viewport>\n",
    "<script>\n  import { createEventDispatcher, onDestroy, onMount, tick } from 'svelte'\n  import Icon from '../Icon.svelte'\n  import { chooseAnimation, isEnterKey, isEscKey } from '../../utils'\n  \n  /** Show a header on the dialog with this text\n   * @svelte-prop {String} [message]\n   * */\n  export let title = ''\n\n  /** Text or html message for this dialog\n   * @svelte-prop {String} message\n   * */\n  export let message\n\n  /** Text to show on the confirmation button\n   * @svelte-prop {String} [confirmText=OK]\n   * */\n  export let confirmText = 'OK'\n\n  /** Text to show on the cancel  button\n   * @svelte-prop {String} [cancelText=Cancel]\n   * */\n  export let cancelText = 'Cancel'\n\n  /** Focus on confirm or cancel button when dialog opens\n   * @svelte-prop {String} [focusOn=confirm]\n   * @values <code>confirm</code>, <code>cancel</code>\n   * */\n  export let focusOn = 'confirm'\n\n  /** Show this icon on left-side of dialog. It will use the color from <code>type</code>\n   * @svelte-prop {String} [icon]\n   * */\n  export let icon = ''\n\n  /** Fontawesome icon pack to use. By default the <code>Icon</code> component uses <code>fas</code>\n   * @svelte-prop {String} [iconPack]\n   * @values <code>fas</code>, <code>fab</code>, etc...\n   * */\n  export let iconPack = ''\n\n  /** Show an input field\n   * @svelte-prop {Boolean} [hasInput=false]\n   * */\n  export let hasInput = false\n  \n  export let prompt = null\n\n  /** Show the cancel button. True for <code>confirm()</code>\n   * @svelte-prop {Boolean} [showCancel=false]\n   * */\n  export let showCancel = false\n\n  /** Dialog's size\n   * @svelte-prop {String} [size]\n   * @values $$sizes$$\n   * */\n  export let size = ''\n\n  /** Type (color) to use on confirm button and icon\n   * @svelte-prop {String} [type=is-primary]\n   * @values $$colors$$\n   * */\n  export let type = 'is-primary'\n\n  export let active = true\n\n  /** Animation to use when showing dialog\n   * @svelte-prop {String|Function} [animation=scale]\n   * @values Any transition name that ships with Svelte, or a custom function\n   * */\n  export let animation = 'scale'\n\n  /** Props to pass to animation function\n   * @svelte-prop {Object} [animProps={ start: 1.2 }]\n   * */\n  export let animProps = { start: 1.2 }\n\n  /** Props (attributes) to use to on prompt input element\n   * @svelte-prop {Object} [inputProps]\n   * */\n  export let inputProps = {}\n\n  // export let showClose = true\n  let resolve\n  export let promise = new Promise((fulfil) => (resolve = fulfil))\n  \n  // TODO: programmatic subcomponents\n  export let subComponent = null\n  export let appendToBody = true\n\n  let modal\n  let cancelButton\n  let confirmButton\n  let input\n  let validationMessage = ''\n\n  const dispatch = createEventDispatcher()\n\n  $: _animation = chooseAnimation(animation)\n  $: {\n    if (modal && active && appendToBody) {\n      modal.parentNode.removeChild(modal)\n      document.body.appendChild(modal)\n    }\n  }\n  $: newInputProps = { required: true, ...inputProps }\n\n  onMount(async () => {\n    await tick()\n\n    if (hasInput) {\n      input.focus()\n    } else if (focusOn === 'cancel' && showCancel) {\n      cancelButton.focus()\n    } else {\n      confirmButton.focus()\n    }\n  })\n\n\n  function cancel() {\n    resolve(hasInput ? null : false)\n    close()\n  }\n\n  function close() {\n    resolve(hasInput ? null : false)\n    active = false\n    dispatch('destroyed')\n  }\n\n  async function confirm() {\n    if (input && !input.checkValidity()) {\n      validationMessage = input.validationMessage\n\n      await tick()\n      input.select()\n\n      return\n    }\n\n    validationMessage = ''\n\n    resolve(hasInput ? prompt: true)\n    close()\n  }\n\n  function keydown(e) {\n    if (active && isEscKey(e)) {\n      close()\n    }\n  }\n</script>\n\n<style lang=\"scss\">@keyframes spinAround {\n  from {\n    transform: rotate(0deg); }\n  to {\n    transform: rotate(359deg); } }\n\n.dialog .modal-card {\n  max-width: 460px;\n  width: auto; }\n  .dialog .modal-card .modal-card-head {\n    font-size: 1.25rem;\n    font-weight: 600; }\n  .dialog .modal-card .modal-card-body .field {\n    margin-top: 16px; }\n  .dialog .modal-card .modal-card-body.is-titleless {\n    border-top-left-radius: 6px;\n    border-top-right-radius: 6px; }\n  .dialog .modal-card .modal-card-foot {\n    justify-content: flex-end; }\n    .dialog .modal-card .modal-card-foot .button {\n      display: inline;\n      min-width: 5em;\n      font-weight: 600; }\n  @media screen and (min-width: 769px), print {\n    .dialog .modal-card {\n      min-width: 320px; } }\n\n.dialog.is-small .modal-card,\n.dialog.is-small .input,\n.dialog.is-small .button {\n  border-radius: 2px;\n  font-size: 0.75rem; }\n\n.dialog.is-medium .modal-card,\n.dialog.is-medium .input,\n.dialog.is-medium .button {\n  font-size: 1.25rem; }\n\n.dialog.is-large .modal-card,\n.dialog.is-large .input,\n.dialog.is-large .button {\n  font-size: 1.5rem; }\n\n/*# sourceMappingURL=Dialog.svelte.css.map */</style>\n\n<svelte:window on:keydown={keydown}></svelte:window>\n<svelte:options accessors/>\n\n{#if active}\n  <div class=\"modal dialog {size} is-active\" bind:this={modal}>\n    <div class=\"modal-background\" on:click={close}></div>\n    <div class=\"modal-card\" transition:_animation={animProps}>\n      {#if title}\n        <header class=\"modal-card-head\">\n          <p class=\"modal-card-title\">{title}</p>\n          <!-- NOTE: don't think we need this... -->\n          <!-- {#if showClose}\n            <button class=\"delete\" aria-label=\"close\" on:click={close}></button>\n          {/if} -->\n        </header>\n      {/if}\n      <section class=\"modal-card-body\" class:is-titleless={!title} class:is-flex={icon}>\n        <div class=\"media\">\n          {#if icon}\n            <div class=\"media-left\">\n              <Icon pack={iconPack} {icon} {type} size=\"is-large\"></Icon>\n            </div>\n          {/if}\n          <div class=\"media-content\">\n            <p>{@html message}</p>\n\n            {#if hasInput}\n              <div class=\"field\">\n                <div class=\"control\">\n                  <input\n                      bind:value={prompt}\n                      class=\"input\"\n                      bind:this={input}\n                      {...newInputProps}\n                      on:keyup={e => isEnterKey(e) && confirm()}>\n                  <p class=\"help is-danger\">{validationMessage}</p>\n                </div>\n              </div>\n            {/if}\n          </div>\n        </div>\n      </section>\n\n      <footer class=\"modal-card-foot\">\n        {#if showCancel}\n          <button\n              class=\"button\"\n              bind:this={cancelButton}\n              on:click={cancel}>\n              {cancelText}\n          </button>\n        {/if}\n        <button\n            class=\"button {type}\"\n            bind:this={confirmButton}\n            on:click={confirm}>\n            {confirmText}\n        </button>\n      </footer>\n    </div>\n  </div>\n{/if}",
    "<script>\n  import { onMount, setContext } from 'svelte'\n  import { omit } from '../utils'\n\n  /** Type (color) of the field and help message. Also adds a matching icon.\n   * @svelte-prop {String} [type]\n   * @values $$colors$$\n   * */\n  export let type = ''\n\n  /** Label for input\n   * @svelte-prop {String} [label]\n   * */\n  export let label = null\n\n  /** Same as native <code>for</code> on label\n   * @svelte-prop {String} [labelFor]\n   * */\n  export let labelFor = ''\n\n  /** Message to show beneath input\n   * @svelte-prop {String} [message]\n   * */\n  export let message = ''\n\n  /** Direct child components/elements of Field will be grouped horizontally\n   * @svelte-prop {Boolean} grouped=false\n   * */\n  export let grouped = false\n\n  /** Allow grouped controls to cover multiple lines\n   * @svelte-prop {Boolean} groupMultiline=false\n   * */\n  export let groupMultiline = false\n\n  /** Alter the alignment of the field\n   * @svelte-prop {String} [position]\n   * @values is-centered, is-right\n   * */\n  export let position = ''\n\n  /** Automatically attach child controls together\n   * @svelte-prop {Boolean} addons=true\n   * */\n  export let addons = true\n\n  export let expanded = false\n\n  setContext('type', () => type)\n\n  let el\n  let labelEl\n  let messageEl\n  let fieldType = ''\n  let hasIcons = false\n  let iconType = ''\n  let mounted = false\n  let newPosition = ''\n\n  // Determine the icon type\n  $: {\n    if (['is-danger', 'is-success'].includes(type)) {\n      iconType = type\n    }\n  }\n\n  $: {\n    if (grouped) fieldType = 'is-grouped'\n    else if (mounted) {\n      const childNodes = Array.prototype.filter.call(el.children, c => !([labelEl, messageEl].includes(c)))\n      if (childNodes.length > 1 && addons) {\n        fieldType = 'has-addons'\n      }\n    }\n  }\n\n  // Update has-addons-* or is-grouped-* classes based on position prop\n  $: {\n    if (position) {\n      const pos = position.split('-')\n      if (pos.length >= 1) {\n        const prefix = grouped ? 'is-grouped-' : 'has-addons-'\n        newPosition = prefix + pos[1]\n      }\n    }\n  }\n\n  $: props = { ...omit($$props, 'addons', 'class', 'expanded', 'grouped', 'label', 'labelFor', 'position', 'type') }\n\n  onMount(() => {\n    mounted = true\n  })\n</script>\n\n<style lang=\"scss\">.field.is-grouped .field {\n  flex-shrink: 0; }\n  .field.is-grouped .field:not(:last-child) {\n    margin-right: 0.75rem; }\n  .field.is-grouped .field.is-expanded {\n    flex-grow: 1;\n    flex-shrink: 1; }\n\n/*# sourceMappingURL=Field.svelte.css.map */</style>\n\n<div {...props} class=\"field {type} {fieldType} {newPosition} {$$props.class || ''}\" class:is-expanded={expanded} class:is-grouped-multiline={groupMultiline} bind:this={el}>\n  {#if label}\n    <label for={labelFor} class=\"label\" bind:this={labelEl}>{label}</label>\n  {/if}\n  <slot statusType={type} />\n  {#if message}\n    <p class=\"help {type}\" bind:this={messageEl}>{message}</p>\n  {/if}\n</div>\n",
    "<script>\n  import { createEventDispatcher, onMount, getContext, tick } from 'svelte'\n  import { omit } from '../utils'\n  import Icon from './Icon.svelte'\n\n  /** Binding value\n   * @svelte-prop {String|Number} [value]\n   * */\n  export let value = ''\n\n  /** Input type, or <code>textarea</code>\n   * @svelte-prop {String} [type=text]\n   * @values Any native type, <code>textarea</code>\n   * */\n  export let type = 'text'\n\n  /** Size of input\n   * @svelte-prop {String} [size]\n   * @values $$sizes$$\n   * */\n  export let size = ''\n\n  /** Makes input full-width when inside a grouped or addon field\n   * @svelte-prop {boolean} expanded=false\n   * */\n  export let expanded = false\n\n  /** Show the password reveal toggle button\n   * @svelte-prop {boolean} passwordReveal=false\n   * */\n  export let passwordReveal = false\n\n  /** Set input maxlength and show a counter\n   * @svelte-prop {Number} [maxlength]\n   * */\n  export let maxlength = null\n\n  /** Show the character counter when <code>maxlength<code> is set\n   * @svelte-prop {boolean} [hasCounter=true]\n   * */\n  export let hasCounter = true\n\n  /** Show loading indicator\n   * @svelte-prop {boolean} [loading=false]\n   * */\n  export let loading = false\n\n  /** Show this icon on left side of input\n   * @svelte-prop {String} [icon]\n   * */\n  export let icon = ''\n\n  /** Fontawesome icon pack to use. By default the <code>Icon</code> component uses <code>fas</code>\n   * @svelte-prop {String} [iconPack]\n   * @values <code>fas</code>, <code>fab</code>, etc...\n   * */\n  export let iconPack = ''\n\n  /** Input is disabled\n   * @svelte-prop {boolean} [disabled=false]\n   * */\n  export let disabled = false\n\n  let input\n  let isFocused\n  let isPasswordVisible = false\n  let newType = 'text'\n  let statusType = ''\n  let statusTypeIcon = ''\n  let valueLength = null\n\n  const dispatch = createEventDispatcher();\n\n  const getType = getContext('type')\n  if (getType) statusType = getType() || ''\n\n  $: props = {\n    ...omit($$props, 'class', 'value', 'type', 'size', 'passwordReveal', 'hasCounter', 'loading', 'disabled'),\n  }\n  $: hasIconLeft = !!icon\n  $: hasIconRight = passwordReveal || loading || statusType\n  $: passwordVisibleIcon = isPasswordVisible ? 'eye-slash' : 'eye'\n  $: {\n    switch (statusType) {\n      case 'is-success':\n        statusTypeIcon = 'check'\n        break\n      case 'is-danger':\n        statusTypeIcon = 'exclamation-circle'\n        break\n      case 'is-info':\n        statusTypeIcon = 'info-circle'\n        break\n      case 'is-warning':\n        statusTypeIcon = 'exclamation-triangle'\n        break\n    }\n  }\n  $: {\n    if (typeof value === 'string') {\n      valueLength = value.length\n    } else if (typeof value === 'number') {\n      valueLength = value.toString().length\n    } else {\n      valueLength = 0\n    }\n  }\n\n  onMount(() => {\n    newType = type\n  })\n\n  async function togglePasswordVisibility() {\n    isPasswordVisible = !isPasswordVisible\n    newType = isPasswordVisible ? 'text' : 'password'\n    await tick()\n    input.focus()\n  }\n\n  const onInput = e => {\n    value = e.target.value\n    $$props.value = value\n\n    dispatch('input', e)\n  }\n  const onFocus = () => (isFocused = true)\n  const onBlur = () => (isFocused = false)\n</script>\n\n<style>\n  .control .help.counter {\n    float: right;\n    margin-left: 0.5em;\n  }\n</style>\n\n<div class=\"control\" class:has-icons-left={hasIconLeft} class:has-icons-right={hasIconRight} class:is-loading={loading} class:is-expanded={expanded}>\n\n  {#if type !== 'textarea'}\n    <input\n      {...props}\n      type={newType}\n      {value}\n      class=\"input {statusType} {size} {$$props.class || ''}\"\n      bind:this={input}\n      on:input={onInput}\n      on:focus={onFocus}\n      on:blur={onBlur}\n      on:change\n      {disabled} />\n  {:else}\n    <textarea\n      {...props}\n      {value}\n      class=\"textarea {statusType}\n      {size}\"\n      bind:this={input}\n      on:input={onInput}\n      on:focus={onFocus}\n      on:blur={onBlur}\n      on:change\n      {disabled} />\n  {/if}\n\n  {#if icon}\n    <Icon\n      pack={iconPack}\n      isLeft={true}\n      {icon} />\n  {/if}\n\n  {#if !loading && (passwordReveal || statusType)}\n    <!-- pack={iconPack}\n    size={iconSize} -->\n    <Icon\n      pack=\"fas\"\n      isRight={true}\n      isClickable={passwordReveal}\n      icon={passwordReveal ? passwordVisibleIcon : statusTypeIcon}\n      type={!passwordReveal ? statusType : 'is-primary'}\n      on:click={togglePasswordVisibility} />\n  {/if}\n\n  {#if maxlength && hasCounter && type !== 'number'}\n    <small class=\"help counter\" class:is-invisible={!isFocused}>{valueLength} / {maxlength}</small>\n  {/if}\n</div>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n  import { fade } from 'svelte/transition'\n  import Icon from './Icon.svelte'\n\n  export let type = ''\n  export let active = true\n  export let title = ''\n  export let showClose = true\n  export let autoClose = false\n  export let duration = 5000\n  export let size = ''\n  export let iconSize = ''\n  export let ariaCloseLabel = 'delete'\n\n  let icon\n\n  const dispatch = createEventDispatcher()\n\n  if (autoClose) {\n    setTimeout(() => {\n      close = true\n    }, duration)\n  }\n\n  $: newIconSize = iconSize || size || 'is-large'\n\n  $: {\n    switch (type) {\n      case 'is-info':\n        icon = 'info-circle'\n        break\n      case 'is-success':\n        icon = 'check-circle'\n        break\n      case 'is-warning':\n        icon = 'exclamation-triangle'\n        break\n      case 'is-danger':\n        icon = 'exclamation-circle'\n        break\n      default:\n        icon = null\n    }\n  }\n\n  function close() {\n    active = false\n    dispatch('close', active)\n  }\n</script>\n\n<style>\n  .message-header {\n    justify-content: space-between;\n  }\n\n  .message .media {\n    padding-top: 0;\n    border: 0;\n  }\n</style>\n\n{#if active}\n  <article class=\"message {type} {size}\" transition:fade|local>\n    {#if title || showClose}\n      <div class=\"message-header\">\n        {#if title}\n          <p>{title}</p>\n        {/if}\n        {#if showClose}\n          <button class=\"delete\" aria-label=\"ariaCloseLabel\" on:click={close} />\n        {/if}\n      </div>\n    {/if}\n    <section class=\"message-body\">\n      <div class=\"media\">\n        {#if icon}\n          <div class=\"media-left\">\n            <Icon {icon} size={newIconSize} />\n          </div>\n        {/if}\n        <div class=\"media-content\">\n          <slot />\n        </div>\n      </div>\n    </section>\n  </article>\n{/if}\n",
    "<script context=\"module\">\n  const allowedProps = ['active', 'position', 'duration'];\n\n  export function filterProps(props) {\n    const newProps = {}\n\n    Object.keys(props).forEach(key => {\n      if (allowedProps.includes(key)) newProps[key] = props[key]\n    })\n\n    return newProps\n  }\n</script>\n\n<script>\n  import { createEventDispatcher, onDestroy, onMount, tick } from 'svelte'\n  import { fly, fade } from 'svelte/transition'\n  import Notices, { notices } from './Notices.svelte'\n\n  const dispatch = createEventDispatcher()\n\n  export let active = true\n  export let position = 'is-top'\n  export let duration = 2000\n  export let transitionOut = true\n\n  let el\n  let parent\n  let timer\n\n  $: transitionY = ~position.indexOf('is-top') ? -200 : 200\n\n  export function close() {\n    active = false\n  }\n\n  function remove() {\n    clearTimeout(timer)\n\n    // Just making sure\n    active = false\n\n    dispatch('destroyed')\n  }\n\n  async function setupContainers() {\n    await tick\n\n    if (!notices.top) {\n      notices.top = new Notices({\n        target: document.body,\n        props: {\n          position: 'top'\n        },\n      });\n    }\n\n    if (!notices.bottom) {\n      notices.bottom = new Notices({\n        target: document.body,\n        props: {\n          position: 'bottom',\n        },\n      });\n    }\n  }\n\n  function chooseParent() {\n    parent = notices.top\n    if (position && position.indexOf('is-bottom') === 0) parent = notices.bottom\n\n    parent.insert(el)\n  }\n\n  onMount(async () => {\n    await setupContainers()\n    chooseParent()\n\n    timer = setTimeout(() => {\n      close()\n    }, duration)\n  })\n</script>\n\n<style lang=\"scss\">.notice {\n  display: inline-flex;\n  pointer-events: auto; }\n  .notice.is-top, .notice.is-bottom {\n    align-self: center; }\n  .notice.is-top-left, .notice.is-bottom-left {\n    align-self: flex-start; }\n  .notice.is-top-right, .notice.is-bottom-right {\n    align-self: flex-end; }\n\n/*# sourceMappingURL=Notice.svelte.css.map */</style>\n\n{#if active}\n  <div\n    class=\"notice {position}\"\n    aria-hidden={!active}\n    in:fly={{ y: transitionY }}\n    out:fade={{ duration: transitionOut ? 400 : 0 }}\n    on:outroend={remove}\n    bind:this={el}>\n\n    <slot />\n  </div>\n{/if}\n",
    "<script context=\"module\">\n  export const notices = {}\n</script>\n\n<script>\n  export let position = 'top'\n\n  let container\n  let positionClass\n  $: positionClass = position === 'top' ? 'is-top' : 'is-bottom'\n\n  export function insert(el) {\n    container.insertAdjacentElement('afterbegin', el)\n  }\n</script>\n\n<style lang=\"scss\">.notices {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  padding: 3em;\n  z-index: 1000;\n  pointer-events: none;\n  display: flex; }\n  .notices.is-top {\n    flex-direction: column; }\n  .notices.is-bottom {\n    flex-direction: column-reverse; }\n  .notices :global([class*='has-background-'] .text) {\n    color: transparent !important;\n    filter: invert(1) brightness(2.5) grayscale(1) contrast(9);\n    background: inherit;\n    background-clip: text !important;\n    -webkit-background-clip: text !important; }\n\n/*# sourceMappingURL=Notices.svelte.css.map */</style>\n\n<div class=\"notices {positionClass}\" bind:this={container} />\n",
    "<script>\n  import { createEventDispatcher, onDestroy, onMount } from 'svelte'\n  import { fly, fade } from 'svelte/transition'\n  import Icon from '../Icon.svelte'\n  import Notice, { filterProps } from '../Notice.svelte'\n  import { typeToIcon } from '../../utils'\n\n  /** Type (color)\n   * @svelte-prop {String} [type]\n   * @values $$colors$$\n   * */\n  export let type = ''\n\n  /** Whether the notification is visible or not\n   * @svelte-prop {boolean} active=true\n   * */\n  export let active = true\n\n  /** Display an X button that closes the notification\n   * @svelte-prop {boolean} showClose=true\n   * */\n  export let showClose = true\n\n  /** Automatically close the notification after <code>duration</code>. Doesn't apply when opening programmatically\n   * @svelte-prop {boolean} autoClose=false\n   * */\n  export let autoClose = false\n\n  /** Duration notification will remain on screen\n   * @svelte-prop {Number} [duration=2000]\n   * */\n  export let duration = 2000\n\n  /** Show icon on left-side of the notification. If set to <code>true</code>, icon will be determined from <code>type</code> property.\n   * @svelte-prop {String|Boolean} [icon]\n   * */\n  export let icon = ''\n\n  /** Fontawesome icon pack to use. By default the <code>Icon</code> component uses <code>fas</code>\n   * @svelte-prop {String} [iconPack]\n   * @values <code>fas</code>, <code>fab</code>, etc...\n   * */\n  export let iconPack = ''\n\n  /** Label for the close button, to be read by accessibility screenreaders\n   * @svelte-prop {String} [ariaCloseLabel]\n   * */\n  export let ariaCloseLabel = ''\n\n  /** Text for notification, when used programmatically\n   * @svelte-prop {String} message\n   * */\n\n  /** Where the notification will show on the screen when used programmatically\n   * @svelte-prop {String} [position=is-top-right]\n   * @values <code>is-top</code>, <code>is-bottom</code>, <code>is-top-left</code>, <code>is-top-right</code>, <code>is-bottom-left</code>, <code>is-bottom-right</code>\n   * */\n\n  const dispatch = createEventDispatcher()\n\n  let newIcon = ''\n  let timer\n\n  $: {\n    if (icon === true) {\n      newIcon = typeToIcon(type)\n    } else {\n      newIcon = icon\n    }\n  }\n\n  $: {\n    if (active && autoClose) {\n      timer = setTimeout(() => {\n        if (active) close()\n      }, duration)\n    }\n  }\n\n  function close() {\n    active = false\n    if (timer) clearTimeout(timer)\n    dispatch('close', active)\n  }\n</script>\n\n<style lang=\"scss\">.message .media {\n  padding-top: 0;\n  border: 0; }\n\n/*# sourceMappingURL=Notification.svelte.css.map */</style>\n\n{#if active}\n  <article class=\"notification {type}\" transition:fade|local>\n    {#if showClose}\n      <button class=\"delete\" aria-label={ariaCloseLabel} on:click={close} />\n    {/if}\n    <div class=\"media\">\n      {#if icon}\n        <div class=\"media-left\">\n          <Icon pack={iconPack} icon={newIcon} size=\"is-large\" />\n        </div>\n      {/if}\n      <div class=\"media-content\">\n        <slot />\n      </div>\n    </div>\n  </article>\n{/if}\n",
    "<script>\n  import { createEventDispatcher, onDestroy, onMount } from 'svelte'\n  import { fly, fade } from 'svelte/transition'\n  import Notice, { filterProps } from '../Notice.svelte'\n  import Notification from './Notification.svelte'\n\n  export let message\n  export let duration = 2000\n  export let position = 'is-top-right'\n\n  $: props = { ...filterProps($$props), duration, position }\n  $: notificationProps = { ...removeNonNoficationProps($$props) }\n\n  function removeNonNoficationProps(props) {\n    const newProps = {}\n\n    const blacklist = ['duration', 'message', 'position']\n\n    Object.keys(props).forEach(key => {\n      if (!blacklist.includes(key)) newProps[key] = props[key]\n    })\n\n    return newProps\n  }\n</script>\n\n<style>\n:global(.notification) {\n  margin: 0.5em 0;\n}\n</style>\n\n<Notice {...props} transitionOut={true}>\n  <Notification {...notificationProps}>\n    {@html message}\n  </Notification>\n</Notice>\n",
    "<script>\n  import { createEventDispatcher, onDestroy, onMount } from 'svelte'\n  import { fly, fade } from 'svelte/transition'\n  import Notice, { filterProps } from '../Notice.svelte'\n\n  /** Text or html message for snackbar\n   * @svelte-prop {String} message\n   * */\n  export let message\n\n  /** Duration snackbar will remain on screen\n   * @svelte-prop {Number} [duration=3500]\n   * */\n  export let duration = 3500\n\n  /** Where the snackbar will show on the screen\n   * @svelte-prop {String} [position=is-bottom-right]\n   * @values <code>is-top</code>, <code>is-bottom</code>, <code>is-top-left</code>, <code>is-top-right</code>, <code>is-bottom-left</code>, <code>is-bottom-right</code>\n   * */\n  export let position = 'is-bottom-right'\n\n  /** Type (color)\n   * @svelte-prop {String} [type=is-dark]\n   * @values $$colors$$\n   * */\n  export let type = 'is-primary'\n\n  /** Background type (any of the Bulma <code>has-background-</code> classes will work)\n   * @svelte-prop {String} [background]\n   * @values <code>has-background-*</code>\n   * */\n  export let background = ''\n\n  export let actionText = 'OK'\n\n  export let onAction = () => {}\n\n  let notice\n\n  function action() {\n    Promise.resolve(onAction())\n      .then(() => notice.close())\n  }\n\n  onMount(() => {\n    if (typeof onAction !== 'function') throw new Error(`onAction ${onAction} is not a function`)\n  })\n\n  // $: newBackground = background\n  $: newType = type && type.replace(/^is-(.*)/, 'has-text-$1')\n  $: props = { ...filterProps($$props), position, duration }\n</script>\n\n<style lang=\"scss\">.snackbar {\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-around;\n  border-radius: 4px;\n  margin: 0.5em 0;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.12), 0 0 6px rgba(0, 0, 0, 0.04);\n  /* super subtle... */\n  pointer-events: auto;\n  min-height: 3em; }\n  .snackbar .text {\n    margin: .5em 1em; }\n  .snackbar .action {\n    margin-left: auto;\n    padding: 0.5em;\n    padding-left: 0; }\n    .snackbar .action .button {\n      font-weight: 600;\n      text-transform: uppercase;\n      background: transparent;\n      border: transparent;\n      position: relative; }\n      .snackbar .action .button:hover::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background: rgba(0, 0, 0, 0.1); }\n\n/*# sourceMappingURL=Snackbar.svelte.css.map */</style>\n\n<Notice {...props} bind:this={notice} transitionOut={true}>\n  <div class=\"snackbar {background}\" class:has-background-dark={!background} role=\"alert\">\n    <div class=\"text\"> <!-- NOTE: this extra div is for dynamic text styling with background-clip -->\n      {@html message}\n    </div>\n\n    {#if actionText}\n      <div class=\"action\" on:click={action}>\n        <button class=\"button {newType}\">{ actionText }</button>\n      </div>\n    {/if}\n  </div>\n</Notice>\n",
    "\n<script>\n  /** Binding for whether the switch to \"on\" or not\n   * @svelte-prop {Any} [checked=false]\n   * */\n  export let checked = false\n\n  /** Type (color of control)\n   * @svelte-prop {String} [type] - Type (color of control)\n   * @values $$colors$$\n   * */\n  export let type = 'is-primary'\n\n  /** Size of switch\n   * @svelte-prop {String} [size]\n   * @values $$sizes$$\n   * */\n  export let size = ''\n\n  /** Whether switch is disabled or not\n   * @svelte-prop {Boolean} [disabled=false]\n   * */\n  export let disabled = false\n\n  let label\n  let input\n\n  $: newBackground = type && type.replace(/^is-(.*)/, 'has-background-$1') || ''\n\n  $: {\n    if (input) {\n      if (disabled) {\n        label.setAttribute('disabled', 'disabled')\n        input.setAttribute('disabled', 'disabled')\n      } else {\n        label.removeAttribute('disabled')\n        input.removeAttribute('disabled')\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\">@keyframes spinAround {\n  from {\n    transform: rotate(0deg); }\n  to {\n    transform: rotate(359deg); } }\n\n.switch {\n  position: relative;\n  cursor: pointer;\n  user-select: none;\n  display: inline-flex; }\n  :global(.switch[disabled]) {\n    opacity: .5;\n    cursor: not-allowed; }\n  .switch input {\n    position: absolute;\n    opacity: 0;\n    left: 0;\n    z-index: -1; }\n    .switch input + .check {\n      display: flex;\n      align-items: center;\n      flex-shrink: 0;\n      width: 2.75em;\n      height: 1.575em;\n      padding: .2em;\n      border-radius: 1em;\n      transition: background .15s ease-out; }\n      .switch input + .check::before {\n        content: \"\";\n        display: block;\n        border-radius: 1em;\n        width: 1.175em;\n        height: 1.175em;\n        background: #f5f5f5;\n        box-shadow: 0 3px 1px 0 rgba(0, 0, 0, 0.05), 0 2px 2px 0 rgba(0, 0, 0, 0.1), 0 3px 3px 0 rgba(0, 0, 0, 0.05);\n        transition: transform .15s ease-out,width .15s ease-out;\n        will-change: transform; }\n    .switch input:not(:checked) + .check {\n      background-color: #b5b5b5 !important; }\n    .switch input:checked + .check {\n      background-color: unset; }\n      .switch input:checked + .check::before {\n        transform: translate3d(100%, 0, 0); }\n  .switch .control-label {\n    padding-left: .5em; }\n  .switch.is-small {\n    border-radius: 2px;\n    font-size: 0.75rem; }\n  .switch.is-medium {\n    font-size: 1.25rem; }\n  .switch.is-large {\n    font-size: 1.5rem; }\n\n/*# sourceMappingURL=Switch.svelte.css.map */</style>\n\n<label ref=\"label\" class=\"switch {size}\" bind:this={label}>\n  <input type=\"checkbox\" bind:checked bind:this={input} on:input on:click />\n\n  <div class=\"check {newBackground}\"></div>\n\n  <span class=\"control-label\">\n    <slot/>\n  </span>\n</label>",
    "<script>\n  import { beforeUpdate, setContext, getContext, tick, onMount } from 'svelte'\n  import Icon from '../Icon.svelte'\n\n  /** Label for tab\n   * @svelte-prop {String} label\n   * */\n  export let label\n\n  /** Show this icon on left-side of the tab\n   * @svelte-prop {String} [icon]\n   * */\n  export let icon = ''\n\n  /** Fontawesome icon pack to use. By default the <code>Icon</code> component uses <code>fas</code>\n   * @svelte-prop {String} [iconPack]\n   * @values <code>fas</code>, <code>fab</code>, etc...\n   * */\n  export let iconPack = ''\n\n  let active = false\n\n  let el\n  let index\n  let starting = false\n  let direction = ''\n  let isIn = false\n\n  const tabConfig = getContext('tabs')\n\n  export async function changeTab({ from, to }) {\n    if (from === to) return\n\n    // console.log({ index, from, to }, to === index)\n    if (from === index) {\n      // Transition out\n      direction = index < to ? 'left' : 'right'\n    } else if (to === index) {\n      // Transition in; start at direction when rendered, then remove it\n      // console.log('TRANSITION', { index, to, active })\n      active = true\n      direction = index > from ? 'right' : 'left'\n      // await tick()\n      // direction = ''\n    } else direction = ''\n  }\n\n  function updateIndex() {\n    if (!el) return\n    index = Array.prototype.indexOf.call(el.parentNode.children, el)\n  }\n\n  async function transitionend(event) {\n    // console.log({ index, active, activeTab: tabConfig.activeTab })\n    // console.log(event.target)\n    active = index === tabConfig.activeTab\n    await tick()\n    direction = ''\n  }\n\n  tabConfig.tabs.subscribe(tabs => {\n    updateIndex()\n  })\n\n  onMount(() => {\n    updateIndex()\n\n    tabConfig.tabs.update(tabs => [\n      ...tabs,\n      {\n        index,\n        label,\n        icon,\n        iconPack,\n        activate: () => (active = true),\n        deactivate: () => (active = false),\n        changeTab,\n      },\n    ])\n  })\n\n  beforeUpdate(async () => {\n    if (index === tabConfig.activeTab && direction) {\n      await tick()\n      setTimeout(() => {\n        direction = ''\n      })\n    }\n  })\n</script>\n\n<style lang=\"scss\">.tab {\n  display: none;\n  flex: 1 0 100%; }\n  .tab.is-active {\n    display: inline-block; }\n\n/*# sourceMappingURL=Tab.svelte.css.map */</style>\n\n<div\n  class=\"tab {direction}\"\n  class:is-active={active}\n  bind:this={el}\n  aria-hidden={!active}\n  on:transitionend={transitionend}>\n  <slot {label} {iconPack} {icon} />\n</div>\n",
    "<script>\n  import { setContext, getContext, onMount, onDestroy, createEventDispatcher } from 'svelte'\n  import { get, writable } from 'svelte/store'\n  import Icon from '../Icon.svelte'\n\n  const dispatch = createEventDispatcher()\n\n  /** Index of the active tab (zero-based)\n   * @svelte-prop {Number} [value=0]\n   * */\n  export let value = 0\n\n  /** Size of tabs\n   * @svelte-prop {String} [size]\n   * @values $$sizes$$\n   * */\n  export let size = ''\n\n  /** Position of tabs list, horizontally. By default they're positioned to the left\n   * @svelte-prop {String} [position]\n   * @values is-centered, is-right\n   * */\n  export let position = ''\n\n  /** Style of tabs\n   * @svelte-prop {String} [style]\n   * @values is-boxed, is-toggle, is-toggle-rounded, is-fullwidth\n   * */\n  export let style = ''\n\n  export let expanded = false\n\n  let activeTab = 0\n  $: changeTab(value)\n\n  const tabs = writable([])\n\n  const tabConfig = {\n    activeTab,\n    tabs,\n  }\n\n  setContext('tabs', tabConfig)\n\n  // This only runs as tabs are added/removed\n  const unsubscribe = tabs.subscribe(ts => {\n    if (ts.length > 0 && ts.length > value - 1) {\n      ts.forEach(t => t.deactivate())\n      if (ts[value]) ts[value].activate()\n    }\n  })\n\n  function changeTab(tabNumber) {\n    const ts = get(tabs)\n    // NOTE: change this back to using changeTab instead of activate/deactivate once transitions/animations are working\n    if (ts[activeTab]) ts[activeTab].deactivate()\n    if (ts[tabNumber]) ts[tabNumber].activate()\n    // ts.forEach(t => t.changeTab({ from: activeTab, to: tabNumber }))\n    activeTab = tabConfig.activeTab = tabNumber\n    dispatch('activeTabChanged', tabNumber)\n  }\n\n  onMount(() => {\n    changeTab(activeTab)\n  })\n\n  onDestroy(() => {\n    unsubscribe()\n  })\n</script>\n\n<style lang=\"scss\">.tabs-wrapper.is-fullwidth {\n  /* TODO */ }\n\n.tabs-wrapper .tab-content {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  overflow-x: hidden; }\n\n/*# sourceMappingURL=Tabs.svelte.css.map */</style>\n\n<div class=\"tabs-wrapper\" class:is-fullwidth={expanded}>\n  <nav class=\"tabs {size} {position} {style}\">\n    <ul>\n      {#each $tabs as tab, index}\n        <li class:is-active={index === activeTab}>\n          <a href on:click|preventDefault={() => changeTab(index)}>\n            {#if tab.icon}\n              <Icon pack={tab.iconPack} icon={tab.icon} />\n            {/if}\n\n            <span>{tab.label}</span>\n          </a>\n        </li>\n      {/each}\n    </ul>\n  </nav>\n  <section class=\"tab-content\">\n    <slot />\n  </section>\n</div>\n",
    "<script>\n  import { createEventDispatcher, onDestroy, onMount } from 'svelte'\n  import { fly, fade } from 'svelte/transition'\n  import Notice, { filterProps } from '../Notice.svelte'\n\n  /** Text or html message for toast\n   * @svelte-prop {String} message\n   * */\n  export let message\n\n  /** Duration toast will remain on screen\n   * @name duration\n   * @kind member\n   * @svelte-prop {Number} [duration=2000]\n   * */\n\n  /** Where the toast will show on the screen\n   * @name position\n   * @kind member\n   * @svelte-prop {String} [position=is-top]\n   * @values <code>is-top</code>, <code>is-bottom</code>, <code>is-top-left</code>, <code>is-top-right</code>, <code>is-bottom-left</code>, <code>is-bottom-right</code>\n   * */\n\n  /** Type (color)\n   * @svelte-prop {String} [type=is-dark]\n   * @values $$colors$$\n   * */\n  export let type = 'is-dark'\n\n  /** Background type (any of the Bulma <code>has-background-</code> classes will work)\n   * @svelte-prop {String} [background]\n   * @values <code>has-background-*</code>\n   * */\n  export let background = ''\n\n  $: newBackground = background || type.replace(/^is-(.*)/, 'has-background-$1')\n</script>\n\n<style lang=\"scss\">.toast {\n  text-align: center;\n  padding: 0.75em 1.5em;\n  border-radius: 2em;\n  margin: 0.5em 0;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.12), 0 0 6px rgba(0, 0, 0, 0.04);\n  /* super subtle... */\n  pointer-events: auto; }\n\n/*# sourceMappingURL=Toast.svelte.css.map */</style>\n\n<Notice {...filterProps($$props)}>\n  <div class=\"toast {type} {newBackground}\" role=\"alert\">\n    <div class=\"text\"> <!-- NOTE: this extra div is for dynamic text styling with background-clip -->\n      {@html message}\n    </div>\n  </div>\n</Notice>\n",
    "\r\n<script>\r\n  import Simplewave from \"../components/starterpage_animations/Simplewave.svelte\";\r\n  import {windowLoaded} from \"../js/functions\"\r\n</script>\r\n\r\n<style>\r\n\r\n  #Home {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n</style>\r\n\r\n<section class=\"section animated fadeIn\" id=\"Home\">\r\n\r\n    {#if $windowLoaded}\r\n    \r\n      {#await window.sleep(500) then value}\r\n        <Simplewave />\r\n      {/await}\r\n    {/if}\r\n\r\n</section>",
    "<script>\r\n\r\n    //  Importing\r\n    import Layout from \"../components/Layout.svelte\"\r\n    import CustomIconSwitch from \"../components/CustomIconSwitch.svelte\"\r\n    import CustomSelect from \"../components/CustomSelect.svelte\"\r\n    import CustomSwitch from \"../components/CustomSwitch.svelte\"\r\n\r\n    import ReportLayout from \"../components/ReportLayout.svelte\"\r\n    import Textfield from '@smui/textfield'\r\n    import {plot} from \"../js/functions.js\"\r\n    import {Icon} from '@smui/icon-button'\r\n\r\n    /////////////////////////////////////////////////////////////////////////\r\n\r\n    // Initialisation\r\n    const filetype = \"mass\", id = \"Masspec\"\r\n    let fileChecked = [];\r\n    let currentLocation = localStorage[`${filetype}_location`] || \"\"\r\n    $: massfiles = fileChecked.map(file=>path.resolve(currentLocation, file))\r\n    \r\n    // $: if(currentLocation !== \"\") {OPOcalibFiles = fs.readdirSync(OPOLocation).filter(file=> file.endsWith(\".calibOPO\"))}\r\n\r\n    let openShell = false, graphPlotted = false\r\n\r\n    // Find peaks\r\n    let toggleRow1 = false\r\n\r\n    let selected_file = \"\", peak_prominance = 3, peak_width = 2, peak_height = 40;\r\n    const style = \"width:7em; height:3.5em; margin-right:0.5em\"\r\n\r\n    // NIST \r\n    let toggleRow2 = false, nist_molecule = localStorage[\"nist_molecule\"] || \"\", nist_formula = localStorage[\"nist_formula\"] || \"\"\r\n    const style2 = \"width:12em; height:3em; margin-right:0.5em\"\r\n\r\n    $: nist_molecule_name = `Name=${nist_molecule}`\r\n    $: nist_molecule_formula = `Formula=${nist_formula}`\r\n    let nist_url = localStorage[\"nist_url\"] || \"https://webbook.nist.gov/cgi/cbook.cgi?Name=&Units=SI&Mask=200#Mass-Spec\"\r\n\r\n    const set_nist_url = (format=\"\") => {\r\n        let fmt;\r\n        format == \"by_name\" ? fmt = nist_molecule_name : fmt = nist_molecule_formula\r\n        nist_url = `https://webbook.nist.gov/cgi/cbook.cgi?${fmt}&Units=SI&Mask=200#Mass-Spec`\r\n        localStorage[\"nist_url\"] = nist_url\r\n        localStorage[\"nist_formula\"] =  nist_formula\r\n        localStorage[\"nist_molecule\"] = nist_molecule\r\n    }\r\n\r\n    // Linear log\r\n    let logScale = true;\r\n\r\n    // Functions\r\n    function plotData({e=null, filetype=\"mass\"}={}){\r\n\r\n        if (fileChecked.length === 0) {return window.createToast(\"No files selected\", \"danger\")}\r\n        if (filetype === \"find_peaks\") {if (selected_file === \"\") return window.createToast(\"No files selected\", \"danger\")}\r\n\r\n        let pyfileInfo = {\r\n            mass: {pyfile:\"mass.py\" , args:[...massfiles, \"run\"]},\r\n            general: {pyfile:\"mass.py\" , args:[...massfiles, \"plot\"]},\r\n            find_peaks: {pyfile:\"find_peaks_masspec.py\" , args:[path.resolve(currentLocation, selected_file), peak_prominance, peak_width, peak_height]},\r\n\r\n        }\r\n        \r\n        let {pyfile, args} = pyfileInfo[filetype]\r\n\r\n        if (filetype == \"general\") {\r\n\r\n            console.log(\"Sending general arguments: \", args)\r\n            let py = spawn(\r\n\r\n                localStorage[\"pythonpath\"], [path.join(localStorage[\"pythonscript\"], pyfile), args], \r\n                { detached: true, stdio: 'pipe', shell: openShell }\r\n            )\r\n\r\n            py.on(\"close\", ()=>{ console.log(\"Closed\") })\r\n            py.stderr.on(\"data\", (err)=>{ console.log(`Error Occured: ${err.toString()}`); preModal.modalContent = err.toString(); preModal.open = true })\r\n            py.stdout.on(\"data\", (data)=>{ console.log(`Output from python: ${data.toString()}`)  })\r\n            py.unref()\r\n            \r\n            py.ref()\r\n            return window.createToast(\"Process Started\")\r\n        }\r\n\r\n        let target = e.target\r\n        target.classList.toggle(\"is-loading\")\r\n\r\n        if (filetype == \"mass\") {graphPlotted = false}\r\n        \r\n        let py;\r\n\r\n        try {py = spawn( localStorage[\"pythonpath\"], [path.resolve(localStorage[\"pythonscript\"], pyfile), args] )}\r\n        catch (err) {\r\n            preModal.modalContent = \"Error accessing python. Set python location properly in Settings\"\r\n            preModal.open = true\r\n            target.classList.toggle(\"is-loading\")\r\n            return\r\n        }\r\n        \r\n        window.createToast(\"Process Started\")\r\n        py.stdout.on(\"data\", data => {\r\n            console.log(\"Ouput from python\")\r\n            let dataReceived = data.toString(\"utf8\")\r\n            console.log(dataReceived)\r\n        });\r\n\r\n        let error_occured_py = false\r\n\r\n        py.stderr.on(\"data\", err => {\r\n            preModal.modalContent = err\r\n            preModal.open = true\r\n            error_occured_py = true;\r\n        });\r\n\r\n        py.on(\"close\", () => {\r\n            if (!error_occured_py) {\r\n\r\n                try {\r\n                    let dataFromPython = fs.readFileSync(path.join(localStorage[\"pythonscript\"], \"data.json\"))\r\n                    dataFromPython = JSON.parse(dataFromPython.toString(\"utf-8\"))\r\n                    console.log(dataFromPython)\r\n                    if (filetype==\"mass\") {\r\n                        plot(\"Mass spectrum\", \"Mass [u]\", \"Counts\", dataFromPython, \"mplot\", \"mass\")\r\n                    } else if (filetype ==\"find_peaks\") {\r\n\r\n                        Plotly.relayout(\"mplot\", { yaxis: { title: \"Counts\", type: \"\" } })\r\n                        Plotly.relayout(\"mplot\", { annotations: [] })\r\n                        Plotly.relayout(\"mplot\", { annotations: dataFromPython[\"annotations\"] })\r\n                        Plotly.relayout(\"mplot\", { yaxis: { title: \"Counts\", type: \"log\" } })\r\n\r\n                    }\r\n\r\n                    window.createToast(\"Graph plotted\", \"success\")\r\n                    graphPlotted = true\r\n\r\n                } catch (err) { preModal.modalContent = err; preModal.open = true }\r\n\r\n            }\r\n            console.log(\"Process closed\")\r\n            target.classList.toggle(\"is-loading\")\r\n        })\r\n    }\r\n\r\n    // Linearlog check\r\n\r\n    const linearlogCheck = () => {\r\n        let layout = { yaxis: { title: \"Counts\", type: logScale ? \"log\" : null } }\r\n        if(graphPlotted) Plotly.relayout(\"mplot\", layout)\r\n    };\r\n    \r\n    let includePlotsInReport = [{id:\"mplot\", include:true, label:\"Mass Spectrum\"}]\r\n\r\n    let preModal = {};\r\n</script>\r\n\r\n<style>\r\n    .masspec_buttonContainer {min-height: 5em;}\r\n    .button {margin-right: 0.5em;}\r\n    .buttonRow {margin-bottom: 1em!important; align-items: center;}\r\n    * :global(.mdc-select__native-control option) {color: black}\r\n    .active {display: flex!important;}\r\n    .hide {display: none;}\r\n</style>\r\n\r\n<Layout bind:preModal {filetype} {id} bind:currentLocation bind:fileChecked >\r\n    <div class=\"masspec_buttonContainer\" slot=\"buttonContainer\">\r\n\r\n        <div class=\"content align buttonRow\">\r\n            <button class=\"button is-link\" on:click=\"{(e)=>plotData({e:e})}\">Masspec Plot</button>\r\n            <button class=\"button is-link\" on:click=\"{()=>{toggleRow1 = !toggleRow1}}\">Find Peaks</button>\r\n            <button class=\"button is-link\" on:click=\"{()=>{toggleRow2 = !toggleRow2}}\">NIST Webbook</button>\r\n            <button class=\"button is-link\" on:click=\"{(e)=>plotData({e:e, filetype:\"general\"})}\">Open in Matplotlib</button>\r\n            <CustomIconSwitch style=\"padding:0;\" bind:toggler={openShell} icons={[\"settings_ethernet\", \"code\"]}/>\r\n            <CustomSwitch style=\"margin: 0 1em;\" on:change={linearlogCheck} bind:selected={logScale} label=\"Log\"/>\r\n        </div>\r\n\r\n        <div class=\"animated fadeIn hide buttonRow\" class:active={toggleRow1} >\r\n        \r\n            <CustomSelect style=\"width:12em; height:3.5em; margin-right:0.5em\" bind:picked={selected_file} label=\"Filename\" options={[\"\", ...fileChecked]}/>\r\n            <Textfield type=\"number\" {style} on:change=\"{(e)=>plotData({e:e, filetype:\"find_peaks\"})}\" bind:value={peak_prominance} label=\"Prominance\" />\r\n            <Textfield type=\"number\" {style} on:change=\"{(e)=>plotData({e:e, filetype:\"find_peaks\"})}\" bind:value={peak_width} label=\"Width\" />\r\n            <Textfield type=\"number\" {style} on:change=\"{(e)=>plotData({e:e, filetype:\"find_peaks\"})}\" bind:value={peak_height} label=\"Height\" />\r\n            <button class=\"button is-link\" on:click=\"{(e)=>plotData({e:e, filetype:\"find_peaks\"})}\">Get Peaks</button>\r\n            <button class=\"button is-danger\" on:click=\"{()=>window.Plotly.relayout(\"mplot\", { annotations: [] })}\">Clear</button>\r\n        </div>\r\n\r\n        <div class=\"animated fadeIn hide buttonRow\" class:active={toggleRow2}>\r\n            <Textfield {style2} on:change=\"{()=>set_nist_url(\"by_name\")}\" bind:value={nist_molecule} label=\"Molecule Name\" />\r\n            <Textfield {style2} on:change={set_nist_url} bind:value={nist_formula} label=\"Molecule Formula\" />\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div style=\"margin-right: 1em;\" slot=\"plotContainer\">\r\n\r\n        <div id=\"mplot\"></div>\r\n        <!-- <div class=\"animated fadeIn hide\" class:active={graphPlotted} style=\"flex-direction:column \"><ReportLayout bind:currentLocation id=\"masspecreport\", plotID={[\"mplot\"]}/></div> -->\r\n        {#if graphPlotted}\r\n            <div class=\"animated fadeIn\" style=\"flex-direction:column \">\r\n                <ReportLayout bind:currentLocation={currentLocation} id={`${filetype}_report`} {includePlotsInReport} />\r\n            </div>\r\n\r\n        {/if}\r\n        <div class=\"hide animated fadeIn\" class:active={toggleRow2} style=\"margin-top: 1em; display:none; flex-direction:column;\">\r\n            <div style=\"margin:1em;\">\r\n                <Icon on:click=\"{()=>window.nist_webview.goToIndex(0)}\" class=\"material-icons hvr-glow\">home</Icon>\r\n\r\n                <Icon on:click=\"{()=>window.nist_webview.reload()}\" class=\"material-icons hvr-glow\">refresh</Icon>\r\n                <Icon on:click=\"{()=>{if(window.nist_webview.canGoBack()) {window.nist_webview.goBack()}}}\" class=\"material-icons hvr-glow\">arrow_left</Icon>\r\n                <Icon on:click=\"{()=>{if(window.nist_webview.canGoForward()) {window.nist_webview.goForward()}}}\" class=\"material-icons hvr-glow\">arrow_right</Icon>\r\n            </div>\r\n            <div class=\"\">\r\n                <webview src={nist_url} id=\"nist_webview\" style=\"height: 50vh; padding-bottom:3em;\"></webview>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</Layout>",
    "\r\n<script>\r\n\r\n    import Textfield from '@smui/textfield';\r\n    import CustomSwitch from '../components/CustomSwitch.svelte';\r\n    import Terminal from '../components/Terminal.svelte';\r\n    import Tab, {Label} from '@smui/tab';\r\n\r\n    import TabBar from '@smui/tab-bar';\r\n\r\n\r\n    // Fundamental constants\r\n    \r\n    $: c = 299792458 // m/s\r\n    $: plank_constant = 6.62607004e-34 // Js\r\n    $: boltzman_constant = 1.380649e-23 // J/K\r\n    \r\n    $: electron_charge = 1.602176565e-19 // C or eV = J\r\n\r\n    $: hz = 1e12.toExponential(4);\r\n    $: eV = (plank_constant/electron_charge) * hz;\r\n    $: kelvin = (plank_constant/boltzman_constant) * hz;\r\n\r\n    $: cm_1 = hz/(c*1e2);\r\n    $: um = (c/hz)*1e+6;\r\n\r\n    $: ghz = hz*1e-9\r\n    $: nm = (c/hz)*1e+9\r\n    $: J = plank_constant * hz\r\n    $: edit_constants = false\r\n\r\n    $: edit_numberDensity_constants = false\r\n\r\n    // Number density\r\n\r\n    $: pq1_before = 1e-8\r\n    $: pq1_after = 1e-5\r\n    $: temperature = 5\r\n    \r\n    $: calibration_factor = 205.54\r\n    $: rt = 300\r\n    $: ndensity_temp = calibration_factor/(boltzman_constant*1e4*rt**0.5) * ((pq1_after - pq1_before) / temperature**0.5)\r\n    \r\n\r\n    $: ndensity = ndensity_temp.toExponential(4)\r\n    let active = \"Unit Conversion\"\r\n\r\n    const navItems = [\"Unit Conversion\", \"Terminal\"]\r\n</script>\r\n\r\n<style>\r\n    .box { background-color: #6a50ad8a; overflow-y: auto; height: calc(100vh - 12em);}\r\n\r\n    * :global(.mdc-text-field--disabled .mdc-text-field__input) {color: #dbdbdb;}\r\n    * :global(.mdc-text-field--disabled .mdc-floating-label) {color: #dbdbdb;}\r\n\r\n    .unit_converter_column {margin-right: 1em; height: calc(70vh - 4em);}\r\n    .contentBox {\r\n\r\n        max-height: 70vh;\r\n        overflow: auto;\r\n        padding-bottom: 1em;\r\n        padding: 1em;\r\n        height: calc(100vh - 12em);\r\n    }\r\n\r\n\r\n    .unit_conversion_contents {max-height: 75%; overflow: auto;}\r\n\r\n    .misc-nav {\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        margin: 0.5em 0;\r\n        overflow: hidden;\r\n\r\n        height: 4em;\r\n    }\r\n\r\n    #Misc {padding: 0 2em; height: 75vh;}\r\n\r\n    @media(max-width: 768px) {\r\n        #unit_conversion_table {\r\n            max-height: 65vh;\r\n        }\r\n    }\r\n    \r\n\r\n</style>\r\n\r\n\r\n<section class=\"animated fadeIn section\" id=\"Misc\" style=\"display:none\">\r\n\r\n    <div class=\"misc-nav box animated fadeInDown\" id=\"navbar\" >\r\n        <TabBar tabs={navItems} let:tab bind:active>\r\n            <Tab {tab}> <Label>{tab}</Label> </Tab>\r\n        </TabBar>\r\n    </div>\r\n\r\n    {#if active==\"Unit Conversion\"}\r\n        <div class=\"columns is-multiline contentBox\" id=\"unit_conversion_table\">\r\n\r\n            <div class=\"column box is-4 unit_converter_column\">\r\n\r\n                <div class=\"title\">Energy Conversion</div>\r\n\r\n                <hr>\r\n\r\n                <div class=\"unit_conversion_contents\">\r\n\r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\"  bind:value={hz} label=\"Hz\" />\r\n                \r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\" bind:value={ghz} on:change=\"{()=>hz=(ghz)*1e+9}\" label=\"GHz\" />\r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\" bind:value={um} on:change=\"{()=>hz=(c/um)*1e6}\" label=\"Micron\" />\r\n                \r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\" bind:value={cm_1} on:change=\"{()=>hz=cm_1*c*1e2}\" label=\"cm-1\" />\r\n                \r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\" bind:value={kelvin} on:change=\"{()=>hz=(boltzman_constant/plank_constant)*kelvin}\" label=\"Kelvin\" />\r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\" bind:value={eV} on:change=\"{()=>hz=(electron_charge/plank_constant)*eV}\" label=\"eV\" />\r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\" bind:value={J} on:change=\"{()=>hz=(J/plank_constant)}\" label=\"Joule\" />\r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\" bind:value={nm} on:change=\"{()=>hz=(c/nm)*1e9}\" label=\"nm\" />\r\n\r\n                    <hr>\r\n\r\n                    <div class=\"subtitle is-pulled-left\">Fundamental constants</div>\r\n                    <CustomSwitch style=\"margin: 0 1em;\" bind:selected={edit_constants} label=\"Edit\"/>\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" disabled={!edit_constants} bind:value={c} label=\"Speed of light in vaccum\" />\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" disabled={!edit_constants} bind:value={boltzman_constant} label=\"Boltzman constant\" />\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" disabled={!edit_constants} bind:value={plank_constant} label=\"Plank's constant\" />\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" disabled={!edit_constants} bind:value={electron_charge} label=\"Electric charge\" />\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"column box is-4 unit_converter_column\">\r\n            \r\n                <div class=\"title\">Number Density</div>\r\n                <hr>\r\n\r\n                <div class=\"unit_conversion_contents\">\r\n\r\n                    <div class=\"subtitle\">Main Chamber Press.</div>\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" bind:value={pq1_before} label=\"Before letting in gas\" />\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" bind:value={pq1_after} label=\"After letting in gas\" />\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" bind:value={temperature} label=\"Temperature\" />\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" disabled={true} bind:value={ndensity} label=\"Number density\" />\r\n                    <hr>\r\n                    <CustomSwitch style=\"margin: 0 1em;\" bind:selected={edit_numberDensity_constants} label=\"Edit\"/>\r\n\r\n\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" disabled={!edit_numberDensity_constants} bind:value={calibration_factor} label=\"Calibration Factor\" />\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" disabled={!edit_numberDensity_constants} bind:value={rt} label=\"Chamber Temperature (RT)\" />\r\n\r\n                </div>\r\n            \r\n            </div>\r\n\r\n        </div>\r\n    {:else}\r\n        <Terminal />\r\n    {/if}\r\n    \r\n</section>",
    "\r\n<script>\r\n\r\n    // IMPORTING Modules\r\n    import {opoMode, normMethodDatas, Ngauss_sigma, felixopoLocation, felixPlotAnnotations, expfittedLines, expfittedLinesCollectedData, fittedTraceCount, graphDiv} from './normline/functions/svelteWritables';\r\n    \r\n    import Layout from \"../components/Layout.svelte\"\r\n    \r\n    import { fade } from 'svelte/transition'\r\n    import CustomRadio from '../components/CustomRadio.svelte';\r\n    import ReportLayout from '../components/ReportLayout.svelte';\r\n    import {onMount, tick} from \"svelte\"\r\n\r\n    import AddFilesToPlot from './normline/modals/AddFilesToPlot.svelte';\r\n    import FrequencyTable from './normline/components/FrequencyTable.svelte';\r\n\r\n    import InitFunctionRow from './normline/widgets/preprocessing/InitFunctionRow.svelte';\r\n    \r\n    import OPORow from './normline/widgets/preprocessing/OPORow.svelte';\r\n    import TheoryRow from './normline/widgets/preprocessing/TheoryRow.svelte';\r\n    import GetFileInfoTable from './normline/widgets/preprocessing/GetFileInfoTable.svelte';\r\n    import WriteFunctionContents from './normline/widgets/postprocessing/WriteFunctionContents.svelte';\r\n    import ExecuteFunctionContents from './normline/widgets/postprocessing/ExecuteFunctionContents.svelte';\r\n    import {init_tour_normline} from './normline/initTour';\r\n\r\n    \r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n    const filetype=\"felix\", id=\"Normline\"\r\n\r\n    let fileChecked=[], toggleBrowser = false;\r\n    \r\n    let currentLocation = localStorage[`${filetype}_location`] || \"\"\r\n    $: felixfiles = fileChecked.map(file=>path.resolve(currentLocation, file))\r\n\r\n    $: console.log(`${filetype} currentlocation: \\n${currentLocation}`)\r\n    \r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n    // Theory file\r\n    let show_theoryplot = false\r\n    let theoryLocation = localStorage[\"theoryLocation\"] || currentLocation\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    let openShell = false;\r\n    $: console.log(\"Open Shell: \", filetype, openShell)\r\n\r\n    let felix_normMethod = \"Relative\";\r\n\r\n    let graphPlotted = false, overwrite_expfit = false, writeFile = false\r\n    $: console.log(\"Trace length: \", $fittedTraceCount)\r\n\r\n    let OPOfilesChecked = []\r\n    $: plottedFiles = $opoMode ? OPOfilesChecked.map(file=>file.split(\".\")[0]) || [] : fileChecked.map(file=>file.split(\".\")[0]) || []\r\n\r\n    $: output_namelists = [\"averaged\", ...plottedFiles, ...addedfiles.map(file=>path.basename(file)).map(file=>file.split(\".\")[0])]\r\n    let writeFileName = \"\"\r\n    let keepTable = true;\r\n\r\n    //////// OPO Plot ///////////\r\n    window.getID = () => Math.random().toString(32).substring(2)\r\n\r\n    const replot = () => {\r\n\r\n        if (graphPlotted) {\r\n\r\n            let {data, layout} = $normMethodDatas[normMethod]\r\n            Plotly.react(\"avgplot\",data, layout, { editable: true })\r\n            $expfittedLines = $felixPlotAnnotations = $expfittedLinesCollectedData = [], $fittedTraceCount = 0\r\n        \r\n        }\r\n    }\r\n\r\n    \r\n    // OPO\r\n    let OPOLocation = localStorage[\"opoLocation\"] || currentLocation\r\n    let opofiles = []\r\n\r\n    \r\n    $: normMethod = $opoMode ? \"Log\" : felix_normMethod\r\n    $: $felixopoLocation = $opoMode ? OPOLocation : currentLocation\r\n    \r\n\r\n    $: $opoMode ? window.createToast(\"OPO MODE\", \"warning\") : window.createToast(\"FELIX MODE\")\r\n    $: $Ngauss_sigma = $opoMode ? 2 : 5\r\n    let addFileModal=false, addedFileCol=\"0, 1\", addedFile={}, addedFileScale=1, addedfiles = [], extrafileAdded=0\r\n    \r\n    $: console.log(`Extrafile added: ${extrafileAdded}`)\r\n   \r\n    function removeExtraFile() {\r\n        for(let i=0; i<extrafileAdded; i++) {\r\n\r\n            try {\r\n\r\n                Plotly.deleteTraces($graphDiv, [-1])\r\n                extrafileAdded = 0, addedfiles = []\r\n\r\n            }\r\n            catch (err) {console.log(\"The plot is empty\")}\r\n        }\r\n        // window.createToast(\"Files removed\", \"warning\")\r\n    }\r\n\r\n\r\n    let fullfiles = []\r\n    \r\n    $: $opoMode ? fullfiles = [...opofiles, ...addedfiles, path.resolve(currentLocation, \"averaged.felix\")] : fullfiles = [...felixfiles, ...addedfiles, path.resolve(currentLocation, \"averaged.felix\")]\r\n\r\n    const init_tour = async () => {\r\n        if (!toggleBrowser) {toggleBrowser = true; await sleep(600)} // Filebrowser toggling and its animation time to appear\r\n        await tick() // For all the reactive components to render\r\n        init_tour_normline({filetype})\r\n\r\n    }\r\n\r\n\r\n    const includePlotsInReport = [\r\n\r\n        {id: \"bplot\", include:true, label:\"Baseline\"}, {id:\"saPlot\", include:false, label:\"SA-Pow\"}, \r\n        {id:\"avgplot\", include:false, label:\"Normalised Spectrum\"}, {id:\"exp-theory-plot\", include:false, label:\"Exp-Theory plot\"}, \r\n        {id:\"opoplot\", include:false, label:\"OPO: Baseline\"}, {id:\"opoSA\", include:false, label:\"OPO: SA-pow\"}, \r\n        {id:\"opoRelPlot\", include:false, label:\"OPO: Normalised Spectrum\"}\r\n\r\n    ]\r\n\r\n    const includeTablesInReports = [\r\n        {id:\"felixTable\", include:true, label:\"Freq. table\"}, {id:\"felix_filedetails_table\", include:false, label:\"File info table\"}\r\n    ]\r\n    $: console.log(theoryLocation, calcfiles, felixPlotCheckboxes)\r\n\r\n    $: datlocation = path.resolve($felixopoLocation, \"../EXPORT\")\r\n    \r\n\r\n\r\n    $: datfiles = fs.existsSync(datlocation) ? fs.readdirSync(datlocation).filter(f=>f.endsWith(\".dat\")).map(f=>f={name:f, id:getID()}) : [{name:\"\", id:getID()}]\r\n    \r\n    \r\n    $: calcfiles = fs.existsSync(theoryLocation) ? fs.readdirSync(theoryLocation).map(f=>f={name:f, id:getID()}) : [{name:\"\", id:getID()}]\r\n\r\n    $: felixPlotCheckboxes = [\r\n            {label:\"DAT file\", options:datfiles, selected:[], style:\"width:100%;\", id:getID()},\r\n            {label:\"Fundamentals\", options:calcfiles, selected:[], style:\"width:25%; margin-left:1em;\", id:getID()},\r\n\r\n\r\n            {label:\"Overtones\", options:calcfiles, selected:[], style:\"width:25%; margin-left:1em;\", id:getID()},\r\n            {label:\"Combinations\", options:calcfiles, selected:[], style:\"width:25%; margin-left:1em;\", id:getID()},\r\n        ]\r\n    \r\n    let preModal = {};\r\n\r\n    $: console.log(`$opoMode: ${$opoMode}`)\r\n\r\n    onMount(()=>{  console.log(\"Normline mounted\") })\r\n\r\n    $: console.log(`graphDiv: ${$graphDiv}`)\r\n</script>\r\n\r\n\r\n<style>\r\n    .hide {display: none;}\r\n    .felixPlot > div {margin-bottom: 1em;}\r\n    .plotSlot > div { width: calc(100% - 1em); margin-top: 1em; }\r\n\r\n</style>\r\n\r\n<!-- Modals -->\r\n\r\n<AddFilesToPlot {fileChecked} bind:extrafileAdded bind:active={addFileModal} bind:addedFileCol bind:addedFileScale bind:addedfiles bind:addedFile bind:preModal />\r\n\r\n<!-- Layout -->\r\n\r\n<Layout bind:preModal {filetype} {id} bind:currentLocation bind:fileChecked bind:toggleBrowser on:tour={init_tour}>\r\n    <div class=\"buttonSlot\" slot=\"buttonContainer\">\r\n\r\n        <InitFunctionRow {removeExtraFile} {felixPlotCheckboxes} {opofiles} {felixfiles} {normMethod} {theoryLocation} bind:preModal bind:graphPlotted bind:show_theoryplot/>\r\n        <OPORow {removeExtraFile} bind:OPOLocation bind:OPOfilesChecked bind:opofiles bind:preModal bind:graphPlotted />\r\n        <TheoryRow bind:theoryLocation bind:show_theoryplot bind:preModal {normMethod} {currentLocation}/>\r\n\r\n        <div style=\"display:flex;\">\r\n        \r\n            <CustomRadio on:change={replot} bind:selected={felix_normMethod} options={[\"Log\", \"Relative\", \"IntensityPerPhoton\"]}/>\r\n        </div>\r\n    \r\n    </div>\r\n    \r\n    <div class=\"plotSlot\" slot=\"plotContainer\">\r\n\r\n        <!-- Get file info functions -->\r\n        <GetFileInfoTable {felixfiles} {normMethod} />\r\n        \r\n        <!-- Plots container -->\r\n        <div class=\"felixPlot\">\r\n            <div class=\"animated fadeIn\" class:hide={!show_theoryplot} id=\"exp-theory-plot\"></div>\r\n            <div id=\"bplot\"></div>\r\n            <div id=\"saPlot\"></div>\r\n            <div id=\"avgplot\"></div>\r\n            <div class=\"animated fadeIn\" class:hide={!$opoMode} id=\"opoplot\"></div>\r\n            <div class=\"animated fadeIn\" class:hide={!$opoMode} id=\"opoSA\"></div>\r\n            <div class=\"animated fadeIn\" class:hide={!$opoMode} id=\"opoRelPlot\"></div>\r\n        </div>\r\n    \r\n        {#if graphPlotted}\r\n            <div transition:fade>\r\n                <!-- Write function buttons -->\r\n                <WriteFunctionContents on:addfile=\"{()=>{addFileModal=true}}\" on:removefile={removeExtraFile} {output_namelists} bind:writeFileName bind:writeFile bind:overwrite_expfit />\r\n\r\n                <!-- Execute function buttons -->\r\n                <ExecuteFunctionContents {addedFileScale} {addedFileCol} {normMethod} {writeFileName} {writeFile} {overwrite_expfit} {fullfiles} bind:preModal />\r\n\r\n                <!-- Frequency table list -->\r\n                <FrequencyTable bind:keepTable/>\r\n\r\n                <!-- Report -->\r\n                <ReportLayout bind:currentLocation={currentLocation} id={`${filetype}_report`} {includePlotsInReport} {includeTablesInReports} />\r\n            </div>\r\n        \r\n        {/if}\r\n    </div>\r\n\r\n</Layout>",
    "<script>\r\n    \r\n    // Importing modules\r\n    import Textfield from '@smui/textfield'\r\n    import HelperText from '@smui/textfield/helper-text/index';\r\n    import Fab, {Label} from '@smui/fab';\r\n    import Checkbox from '@smui/checkbox';\r\n    import FormField from '@smui/form-field';\r\n    import {browse} from \"../components/Layout.svelte\";\r\n    import CustomDialog from \"../components/CustomDialog.svelte\";\r\n    import PreModal from \"../components/PreModal.svelte\";\r\n    //////////////////////////////////////////////////////////////////////////////////\r\n\r\n    const writePowfile = () => {\r\n\r\n        let contents = `${initContent}\\n${powerfileContent}`\r\n\r\n        fs.writeFile(powfile, contents , function(err) {\r\n\r\n            if(err) { return window.createToast(\"Power file couldn't be saved.\", \"danger\") }\r\n            window.createToast(\"Power file saved\", \"success\")\r\n        })\r\n    }\r\n    \r\n    async function savefile() {\r\n\r\n        if (location.length == 0) { return openFolder({save:true}) }\r\n\r\n        const overwrite = await fs.existsSync(powfile)\r\n        overwrite ? overwrite_dialog.open() : writePowfile()\r\n    }\r\n\r\n    function openFolder({save=false}={}) {\r\n        browse({dir:true}).then(result=>{\r\n\r\n            if (!result.canceled) {\r\n                location = localStorage[\"powerfile_location\"] = result.filePaths[0]\r\n                window.createToast(\"Location updated\", \"success\")\r\n\r\n                if (save) savefile()\r\n            }\r\n        }).catch(err=>{preModal.modalContent = err; preModal.open=true})\r\n    }\r\n\r\n    let powerfileContent = '', felixHz = 10, felixShots = 16, convert = null;\r\n\r\n    let location = localStorage[\"powerfile_location\"] || \"\";\r\n    let overwrite_dialog;\r\n\r\n    let today = new Date();\r\n    const dd = String(today.getDate()).padStart(2, '0')\r\n    const mm = String(today.getMonth() + 1).padStart(2, '0')\r\n    \r\n    const yy = today.getFullYear().toString().substr(2)\r\n    let filename = `${dd}_${mm}_${yy}-#`;\r\n\r\n    $: powfile = path.resolve(location, `${filename}.pow`)\r\n    $: conversion = \"_no_\"\r\n    $: convert ? conversion = \"_\" : conversion = \"_no_\"\r\n    $: initContent = `#POWER file\\n` +\r\n        `# ${felixHz} Hz FELIX\\n` +\r\n        `#SHOTS=${felixShots}\\n` +\r\n        `#INTERP=linear\\n` +\r\n        `#    IN${conversion}UM (if one deletes the no the firs number will be in \\mu m\\n` +\r\n        `# wavelength/cm-1      energy/pulse/mJ\\n`\r\n\r\n    \r\n    const handleOverwrite = (e) => {\r\n        let action = e.detail.action\r\n        if (action === \"Cancel\" || action === \"close\") window.createToast(\"Powerfile saving cancelled\", \"warning\")\r\n        if (action === \"Yes\") writePowfile()\r\n    }\r\n\r\n    let preModal = {};\r\n</script>\r\n\r\n\r\n<style>\r\n   \r\n    .section {height: 70vh;}\r\n    .container { height: 100%; margin-bottom: 3em; }\r\n    @media only screen and (max-height: 800px) {.section {overflow-y: auto;}}\r\n\r\n</style>\r\n\r\n\r\n<PreModal bind:preModal />\r\n<CustomDialog id=\"powerfile-overwrite\" bind:dialog={overwrite_dialog} on:response={handleOverwrite}\r\n    title={\"Overwrite?\"} content={`${filename} already exists. Do you want to overwrite it?`}/>\r\n\r\n<section class=\"section\" id=\"Powerfile\" style=\"display:none\">\r\n    <div class=\"container\" id=\"powfileContainer\">\r\n\r\n        <div style=\"margin-bottom:2em;\">\r\n            <Textfield  style=\"width:90%\" bind:value={location} label=\"Current Location\" />\r\n            <Fab class=\"is-pulled-right\" on:click={openFolder} extended><Label>Browse</Label></Fab>\r\n        </div>\r\n\r\n        <div style=\"margin-bottom:2em;\">\r\n            <Textfield style=\"width:20%\" bind:value={filename} label=\"Filename\" />\r\n            <Textfield style=\"width:20%\" bind:value={felixShots} label=\"FELIX Shots\" on:change={()=>{console.log(felixShots)}}/>\r\n            <Textfield style=\"width:20%\" bind:value={felixHz} label=\"FELIX Hz\" />\r\n            <FormField>\r\n                <Checkbox bind:checked={convert} indeterminate={convert === null} />\r\n                <span slot=\"label\">Convert to &micro;m</span>\r\n            </FormField>\r\n        </div>\r\n\r\n        <Textfield textarea bind:value={powerfileContent} label=\"Powerfile contents\" \r\n            input$aria-controls=\"powercontent_help\" input$aria-describedby=\"powercontent_help\"/>\r\n        <HelperText id=\"powercontent_help\">Enter powerfile measured for {filename}.felix file (wavenumber power-in mJ)</HelperText>\r\n        <Fab style=\"margin:2em 0;\" on:click={savefile} extended><Label>Save</Label></Fab>\r\n    \r\n    </div>\r\n\r\n</section>",
    "<script>\r\n\r\n    // Importing modules\r\n    import {pythonpath, pythonscript, pyVersion, github, backupName} from \"./settings/svelteWritables\";\r\n    import Textfield from '@smui/textfield';\r\n    import {onMount} from \"svelte\";\r\n\r\n    import CustomDialog from \"../components/CustomDialog.svelte\"\r\n    import CustomSelect from '../components/CustomSelect.svelte';\r\n    import PreModal from \"../components/PreModal.svelte\";\r\n    import {download} from \"./settings/donwloadUpdate\";\r\n\r\n    import {InstallUpdate} from \"./settings/installUpdate\";\r\n    \r\n    import {updateCheck} from \"./settings/updateCheck\";\r\n\r\n    import {resetPyConfig, updatePyConfig} from \"./settings/checkPython\";\r\n\r\n    import {backupRestore} from \"./settings/backupAndRestore\";\r\n    import {tick} from \"svelte\";\r\n\r\n///////////////////////////////////////////////////////\r\n\r\n    const backup = (event) => {\r\n        backupRestore({event, method:\"backup\"})\r\n            .then(()=>console.log(\"Backup Completed\"))\r\n            .catch((err)=>{preModal.modalContent = err; preModal.open = true})\r\n    }\r\n\r\n    const restore = (event) => {\r\n        backupRestore({event, method:\"restore\"})\r\n        .then(()=>console.log(\"Restore Completed\"))\r\n        .catch((err)=>{preModal.modalContent = err; preModal.open = true})\r\n    }\r\n\r\n    let selected = \"Configuration\"\r\n    \r\n    const navigate = (e) => {selected = e.target.innerHTML}\r\n\r\n    let pythonpathCheck;\r\n\r\n    onMount(()=>{\r\n    \r\n    setTimeout(async ()=>{\r\n\r\n        await tick()\r\n        checkPython()\r\n\r\n            .then(res=>{ $pyVersion = res; console.log(\"Python path is valid\")})\r\n            .catch(()=>pythonpathCheck.open() )}\r\n        , 1000)\r\n\r\n        updateCheck({info:false})\r\n        \r\n        setInterval(()=>{updateCheck({info:false})}, 1*1000*60*15)\r\n    })\r\n\r\n    const handlepythonPathCheck = () => { console.log(\"Python path checking done\") }\r\n    \r\n    const update = async () => {\r\n\r\n        try {\r\n\r\n            const updateFolder = path.resolve(__dirname, \"..\", \"update\")\r\n            let target = document.getElementById(\"updateBtn\")\r\n            \r\n            target.classList.toggle(\"is-loading\")\r\n\r\n            if (!fs.existsSync(updateFolder)) {fs.mkdirSync(updateFolder)}\r\n            \r\n            await download(updateFolder)\r\n            \r\n            InstallUpdate(target, updateFolder)\r\n        } catch (err) {preModal.modalContent = err.stack; preModal.open = true}\r\n        \r\n    }\r\n\r\n    let preModal = {};\r\n\r\n</script>\r\n\r\n\r\n<style lang=\"scss\">section {\n  margin: 0;\n  padding: 0; }\n\n.side-panel, .main-panel {\n  height: calc(100vh - 7em); }\n\n.box {\n  background-color: #6a50ad8a; }\n\n.main-panel {\n  margin: 0 5em; }\n\n.left .title {\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  padding: 0.5em;\n  font-size: larger;\n  cursor: pointer;\n  margin-bottom: 1em;\n  border-radius: 20px; }\n\n.clicked {\n  border-left: 2px solid #fafafa;\n  border: solid 1px; }\n\n.right > div {\n  display: none; }\n\n.active {\n  display: block !important; }\n\n.right .title {\n  letter-spacing: 0.1em;\n  text-transform: uppercase; }\n\n* :global(option) {\n  color: black; }\n\n.container {\n  padding: 2em;\n  display: grid; }\n\n.container .left {\n  place-content: center; }\n\n/*# sourceMappingURL=Settings.svelte.css.map */</style>\r\n\r\n<PreModal bind:preModal />\r\n\r\n<CustomDialog id=\"pythonpath_Check\" bind:dialog={pythonpathCheck} on:response={handlepythonPathCheck} title={\"Python path is not valid\"} content={\"Change it in Settings --> Configuration\"} label1=\"Okay\" label2=\"Cancel\" />\r\n\r\n<section class=\"section animated fadeIn\" id=\"Settings\" style=\"display:none\">\r\n\r\n    <div class=\"columns\">\r\n        <div class=\"column side-panel is-2-widescreen is-3-desktop is-4-tablet box adjust-right\">\r\n            <div class=\"container left\">\r\n                <div class=\"title nav hvr-glow\" class:clicked={selected===\"Configuration\"} on:click={navigate}>Configuration</div>\r\n                <div class=\"title nav hvr-glow\" class:clicked={selected===\"Update\"} on:click={navigate}>Update</div>\r\n                <div class=\"title nav hvr-glow\" class:clicked={selected===\"About\"} on:click={navigate}>About</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"column main-panel box\">\r\n            <div class=\"container right\">\r\n\r\n                <!-- Configuration -->\r\n                <div class=\"content animated fadeIn\" class:active={selected===\"Configuration\"}>\r\n                    <h1 class=\"title\">Configuration</h1>\r\n                    <div class=\"subtitle\">{$pyVersion}</div>\r\n                    <Textfield style=\"margin-bottom:1em;\" bind:value={$pythonpath} label=\"Python path\" />\r\n                    <Textfield style=\"margin-bottom:1em;\" bind:value={$pythonscript} label=\"Python script path\" />\r\n                    <button class=\"button is-link\" on:click={resetPyConfig}>Reset</button>\r\n                    <button class=\"button is-link\" on:click={updatePyConfig}>Save</button>\r\n                </div>\r\n\r\n                <!-- Update -->\r\n                <div class=\"content animated fadeIn\" class:active={selected===\"Update\"}>\r\n                    <h1 class=\"title\">Update</h1>\r\n\r\n                    <div class=\"subtitle\">Current Version {window.currentVersion}</div>\r\n                    <div class=\"content\">\r\n                        <Textfield style=\"width:7em; margin-right:2em;\" bind:value={$github.username} label=\"Github username\" />\r\n                        <Textfield style=\"width:7em; margin-right:2em;\" bind:value={$github.repo} label=\"Github Repo\" />\r\n                        <CustomSelect bind:picked={$github.branch} label=\"Github branch\" options={[\"master\", \"developer\"]}/>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n                        <button class=\"button is-link\" id=\"updateCheckBtn\" on:click=\"{updateCheck}\">Check update</button>\r\n                        <button class=\"button is-link\" id=\"updateBtn\" on:click={update}>Update</button>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"content\">\r\n                        <Textfield style=\"width:30%; margin-right:2em;\" bind:value={$backupName} label=\"Github username\" />\r\n                        <button class=\"button is-link\" on:click={backup}>Backup</button>\r\n                        <button class=\"button is-link\" on:click={restore}>Restore</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n\r\n                <!-- About -->\r\n                <div class=\"content animated fadeIn\" class:active={selected===\"About\"}>\r\n                    <h1 class=\"title\">About</h1>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n</section>",
    "<script>\r\n\r\n    //  Importing\r\n    import Layout from \"../components/Layout.svelte\"\r\n    import CustomIconSwitch from \"../components/CustomIconSwitch.svelte\"\r\n    import CustomSelect from \"../components/CustomSelect.svelte\"\r\n    import CustomSwitch from \"../components/CustomSwitch.svelte\"\r\n\r\n    import ReportLayout from \"../components/ReportLayout.svelte\"\r\n    import Textfield from '@smui/textfield'\r\n    import {plot} from \"../js/functions.js\"\r\n\r\n    /////////////////////////////////////////////////////////////////////////\r\n\r\n    // Initialisation\r\n\r\n    const filetype = \"thz\", id = \"THz\"\r\n    let fileChecked = [];\r\n    let currentLocation = localStorage[`${filetype}_location`] || \"\"\r\n    $: thzfiles = fileChecked.map(file=>path.resolve(currentLocation, file))\r\n    let openShell = false, graphPlotted = false\r\n    let delta = 10, gamma = 0\r\n\r\n    let B0=0, D0=0, H0=0, temp=300, totalJ=20\r\n\r\n    // Depletion Row\r\n    let toggleRow = false\r\n    const style = \"width:7em; height:3.5em; margin-right:0.5em\"\r\n    const btnClass = \"button is-link animated\"\r\n\r\n    const plotStyle = [\"\", \"lines\", \"markers\", \"lines+markers\"]\r\n\r\n    let plotStyleSelected = plotStyle[3], plotFill = true;\r\n\r\n    let binData = false;\r\n\r\n    const changePlotStyle = () => { Plotly.restyle(\"thzPlot\", {mode:plotStyleSelected, fill: plotFill ? \"tozeroy\" : \"\"})}\r\n    function plotData({e=null, filetype=\"thz\", tkplot=\"run\", justPlot=false }={}){\r\n\r\n        if (fileChecked.length === 0 && filetype === \"thz\") {return window.createToast(\"No files selected\", \"danger\")}\r\n\r\n        let pyfileInfo = {\r\n            thz: {pyfile:\"thz_scan.py\" , args:[...thzfiles, binData, delta, tkplot, gamma, justPlot]},\r\n            boltzman: {pyfile:\"boltzman.py\" , args:[currentLocation, B0, D0, H0, temp, totalJ, tkplot]},\r\n        }\r\n        let {pyfile, args} = pyfileInfo[filetype]\r\n        if (tkplot == \"plot\") {filetype = \"general\"}\r\n\r\n        if (filetype == \"general\") {\r\n\r\n            console.log(\"Sending general arguments: \", args)\r\n            let py = spawn(\r\n                localStorage[\"pythonpath\"], [path.join(localStorage[\"pythonscript\"], pyfile), args], \r\n                { detached: true, stdio: 'pipe', shell: openShell }\r\n            )\r\n            py.on(\"close\", ()=>{ console.log(\"Closed\") })\r\n\r\n            py.stderr.on(\"data\", (err)=>{ console.log(`Error Occured: ${err.toString()}`); preModal.modalContent = err.toString(); preModal.open = true })\r\n            py.stdout.on(\"data\", (data)=>{ console.log(`Output from python: ${data.toString()}`)  })\r\n            py.unref()\r\n            py.ref()\r\n\r\n            return window.createToast(\"Process Started\")\r\n        }\r\n\r\n        let target = e.target\r\n        target.classList.toggle(\"is-loading\")\r\n        if (filetype == \"scan\") {graphPlotted = false}\r\n        \r\n        let py;\r\n        try {py = spawn( localStorage[\"pythonpath\"], [path.resolve(localStorage[\"pythonscript\"], pyfile), args] )}\r\n\r\n        catch (err) {\r\n            preModal.modalContent = \"Error accessing python. Set python location properly in Settings\"\r\n            preModal.open = true\r\n            target.classList.toggle(\"is-loading\")\r\n            return\r\n        }\r\n        \r\n        window.createToast(\"Process Started\")\r\n        py.stdout.on(\"data\", data => {\r\n            console.log(\"Ouput from python\")\r\n            let dataReceived = data.toString(\"utf8\")\r\n            console.log(dataReceived)\r\n        });\r\n\r\n        let error_occured_py = false\r\n\r\n        py.stderr.on(\"data\", err => {\r\n            preModal.modalContent = err\r\n            preModal.open = true\r\n            error_occured_py = true;\r\n            target.style.backgroundColor=\"#ff3860\"\r\n            target.classList.add(\"shake\")\r\n        });\r\n\r\n        py.on(\"close\", () => {\r\n\r\n            if (!error_occured_py) {\r\n\r\n                try {\r\n                    let dataFromPython = fs.readFileSync(path.join(localStorage[\"pythonscript\"], \"data.json\"))\r\n                    dataFromPython = JSON.parse(dataFromPython.toString(\"utf-8\"))\r\n                    console.log(dataFromPython)\r\n\r\n                    if (filetype==\"thz\") {\r\n\r\n                       plot(`THz Scan: Depletion (%)`, \"Frequency (GHz)\", \"Depletion (%)\", dataFromPython[\"thz\"], \"thzPlot\")\r\n                       plot(`THz Scan`, \"Frequency (GHz)\", \"Counts\", dataFromPython[\"resOnOff_Counts\"], \"resOnOffPlot\")\r\n    \r\n                        if (!justPlot) {\r\n                            let lines = [];\r\n\r\n                            for (let x in dataFromPython[\"shapes\"]) { lines.push(dataFromPython[\"shapes\"][x]) }\r\n                            let layout_update = {\r\n                                shapes: lines\r\n                            }\r\n                            Plotly.relayout(\"thzPlot\", layout_update)\r\n                        }\r\n                    } else if (filetype == \"boltzman\") {\r\n                        plot(`Boltzman Distribution`, \"Rotational levels (J)\", \"Probability (%)\", dataFromPython, \"boltzman_plot\");\r\n                    }\r\n                    window.createToast(\"Graph plotted\", \"success\")\r\n                    graphPlotted = true\r\n\r\n                    target.style.backgroundColor=\"#09814a\"\r\n                    target.classList.add(\"bounce\")\r\n\r\n                } catch (err) { \r\n                    preModal.modalContent = err\r\n                    preModal.open = true \r\n\r\n                    target.style.backgroundColor=\"#ff3860\"\r\n                    target.classList.add(\"shake\")\r\n                 }\r\n\r\n            }\r\n\r\n            console.log(\"Process closed\")\r\n            target.classList.toggle(\"is-loading\")\r\n            setTimeout(()=>{\r\n                target.style.backgroundColor=\"\"\r\n                if (target.classList.contains(\"bounce\")) target.classList.remove(\"bounce\")\r\n                if (target.classList.contains(\"shake\")) target.classList.remove(\"shake\")\r\n            }, 2000)\r\n        })\r\n    }\r\n\r\n    let includePlotsInReport = [{id:\"resOnOffPlot\", include:false, label:\"THz Res-ON/OFF\"}, {id:\"thzPlot\", include:true, label:\"Normalised THz Spectrum\"}, {id:\"boltzman_plot\", include:false, label:\"Boltzman plot\"}]\r\n    let preModal = {};\r\n\r\n</script>\r\n\r\n<style>\r\n    .thz_buttonContainer {min-height: 5em;}\r\n\r\n    .button {margin-right: 0.5em;}\r\n    .buttonRow {margin-bottom: 1em!important; align-items: center;}\r\n    .active {display: flex!important;}\r\n    .hide {display: none;}\r\n\r\n    * :global(.mdc-select__native-control option) {color: black}\r\n\r\n</style>\r\n\r\n<Layout bind:preModal {filetype} {id} bind:currentLocation bind:fileChecked>\r\n\r\n    <div class=\"thz_buttonContainer\" slot=\"buttonContainer\">\r\n\r\n        <div class=\"content align buttonRow\">\r\n            <button class=\"{btnClass}\" on:click=\"{(e)=>{plotData({e:e, justPlot:true})}}\">Plot</button>\r\n\r\n            <CustomSwitch bind:selected={binData} label=\"Bin\" style=\"margin:0 1em;\"/>\r\n            <button class=\"{btnClass}\" on:click=\"{(e)=>{plotData({e:e})}}\">Fit</button>\r\n            <button class=\"{btnClass}\" on:click=\"{(e)=>plotData({e:e, tkplot:\"plot\"})}\">Open in Matplotlib</button>\r\n            <CustomIconSwitch style=\"padding:0;\" bind:toggler={openShell} icons={[\"settings_ethernet\", \"code\"]}/>\r\n            <button class=\"{btnClass}\" on:click=\"{()=>{toggleRow = !toggleRow}}\">Boltzman</button>\r\n            <Textfield type=\"number\" {style} bind:value={delta} label=\"Delta\" />\r\n            <Textfield type=\"number\" {style} bind:value={gamma} label=\"Gamma\" />\r\n\r\n            <div class=\"animated fadeIn hide\" class:active={graphPlotted} on:change={changePlotStyle}>\r\n                <CustomSelect options={plotStyle} bind:picked={plotStyleSelected} label=\"Plot Style\"/>\r\n                <CustomSwitch bind:selected={plotFill} label=\"Fill area\"/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"animated fadeIn hide buttonRow\" class:active={toggleRow} >\r\n            <Textfield {style} on:change=\"{(e)=>plotData({e:e, filetype:\"boltzman\"})}\" bind:value={B0} label=\"B0 (MHz)\" />\r\n            <Textfield {style} on:change=\"{(e)=>plotData({e:e, filetype:\"boltzman\"})}\" bind:value={D0} label=\"D0 (MHz)\" />\r\n            <Textfield {style} on:change=\"{(e)=>plotData({e:e, filetype:\"boltzman\"})}\" bind:value={H0} label=\"H0 (MHz)\" />\r\n            <Textfield type=\"number\" {style} on:change=\"{(e)=>plotData({e:e, filetype:\"boltzman\"})}\" bind:value={temp} label=\"Temp.\" />\r\n            <Textfield type=\"number\" {style} on:change=\"{(e)=>plotData({e:e, filetype:\"boltzman\"})}\" bind:value={totalJ} label=\"Total J\" />\r\n            <button class=\"{btnClass}\" on:click=\"{(e)=>plotData({e:e, filetype:\"boltzman\"})}\">Submit</button>\r\n            <button class=\"{btnClass}\" on:click=\"{(e)=>plotData({e:e, filetype:\"boltzman\", tkplot:\"plot\"})}\">Open in Matplotlib</button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div style=\"margin-right: 1em;\" slot=\"plotContainer\">\r\n\r\n        <!-- Plots -->\r\n        \r\n        <div id=\"resOnOffPlot\" style=\"margin-bottom: 1em;\"></div>\r\n        <div id=\"thzPlot\" style=\"margin-bottom: 1em;\"></div>\r\n        <div id=\"boltzman_plot\" style=\"margin-bottom: 1em;\"></div>\r\n\r\n        <!-- Reports -->\r\n\r\n        {#if graphPlotted}\r\n            <div class=\"animated fadeIn\" style=\"flex-direction:column \">\r\n                <ReportLayout bind:currentLocation={currentLocation} id={`${filetype}_report`} {includePlotsInReport} />\r\n            </div>\r\n        {/if}\r\n\r\n    </div>\r\n</Layout>",
    "<script>\r\n\r\n    //  Importing\r\n    import Layout from \"../components/Layout.svelte\"\r\n    import CustomIconSwitch from \"../components/CustomIconSwitch.svelte\"\r\n    import CustomSelect from \"../components/CustomSelect.svelte\"\r\n    import CustomSwitch from \"../components/CustomSwitch.svelte\"\r\n\r\n    import ReportLayout from \"../components/ReportLayout.svelte\"\r\n    import Textfield from '@smui/textfield'\r\n    import {plot} from \"../js/functions.js\"\r\n    /////////////////////////////////////////////////////////////////////////\r\n\r\n    // Initialisation\r\n\r\n    const filetype = \"scan\", id = \"Timescan\"\r\n    let fileChecked = [];\r\n    let currentLocation = localStorage[`${filetype}_location`] || \"\"\r\n\r\n    $: scanfiles = fileChecked.map(file=>path.resolve(currentLocation, file))\r\n    \r\n    let openShell = false, graphPlotted = false\r\n    \r\n    let massIndex = 0, timestartIndex = 1, nshots = 10, power = \"21, 21\", resON_Files = \"\", resOFF_Files = \"\"\r\n    let fullfiles = []\r\n\r\n    function dir_changed() {\r\n        // console.log(\"Directory changed/refreshed\", event)\r\n        if (fs.existsSync(currentLocation)) {\r\n            fullfiles = [\"\", ...fs.readdirSync(currentLocation).filter(file=>file.endsWith(\".scan\"))]\r\n        }\r\n    }\r\n\r\n    $: console.log(`ResOn: ${resON_Files}\\nResOff: ${resOFF_Files}`)\r\n\r\n    // Depletion Row\r\n    let toggleRow = false\r\n    let style = \"width:7em; height:3.5em; margin-right:0.5em\"\r\n\r\n    // Linear log\r\n    let logScale = false;\r\n\r\n    function plotData({e=null, filetype=\"scan\", tkplot=\"run\"}={}){\r\n\r\n        if (fileChecked.length === 0 && filetype === \"scan\") {return window.createToast(\"No files selected\", \"danger\")}\r\n\r\n        if (filetype === \"general\") {\r\n            if (resOFF_Files === \"\" || resON_Files === \"\") {return window.createToast(\"No files selected\", \"danger\")}\r\n        }\r\n        \r\n        let pyfileInfo = {\r\n            scan: {pyfile:\"timescan.py\" , args:[...scanfiles, tkplot]},\r\n        \r\n            general: {pyfile:\"depletionscan.py\" , args:[currentLocation,\r\n                resON_Files, resOFF_Files, ...power.split(\",\").map(pow=>parseFloat(pow)), nshots, massIndex, timestartIndex]},\r\n        }\r\n        let {pyfile, args} = pyfileInfo[filetype]\r\n\r\n        if (tkplot == \"plot\") {filetype = \"general\"}\r\n        if (filetype == \"general\") {\r\n            console.log(\"Sending general arguments: \", args)\r\n\r\n            let py = spawn(\r\n                localStorage[\"pythonpath\"], [path.join(localStorage[\"pythonscript\"], pyfile), args], \r\n                { detached: true, stdio: 'pipe', shell: openShell }\r\n            )\r\n\r\n            py.on(\"close\", ()=>{ console.log(\"Closed\") })\r\n            py.stderr.on(\"data\", (err)=>{ console.log(`Error Occured: ${err.toString()}`); preModal.modalContent = err.toString(); preModal.open = true })\r\n            py.stdout.on(\"data\", (data)=>{ console.log(`Output from python: ${data.toString()}`)  })\r\n\r\n            py.unref()\r\n            py.ref()\r\n            return window.createToast(\"Process Started\")\r\n        }\r\n\r\n        let target = e.target\r\n\r\n        target.classList.toggle(\"is-loading\")\r\n        if (filetype == \"scan\") {graphPlotted = false}\r\n\r\n        let py;\r\n        try {py = spawn( localStorage[\"pythonpath\"], [path.resolve(localStorage[\"pythonscript\"], pyfile), args] )}\r\n        catch (err) {\r\n            preModal.modalContent = \"Error accessing python. Set python location properly in Settings\"\r\n            preModal.open = true\r\n            target.classList.toggle(\"is-loading\")\r\n            return\r\n        }\r\n        \r\n        window.createToast(\"Process Started\")\r\n        py.stdout.on(\"data\", data => {\r\n            console.log(\"Ouput from python\")\r\n            let dataReceived = data.toString(\"utf8\")\r\n            console.log(dataReceived)\r\n        });\r\n\r\n        let error_occured_py = false\r\n\r\n        py.stderr.on(\"data\", err => {\r\n            preModal.modalContent = err\r\n            preModal.open = true\r\n            error_occured_py = true;\r\n        });\r\n\r\n        py.on(\"close\", () => {\r\n            if (!error_occured_py) {\r\n\r\n                try {\r\n                    let dataFromPython = fs.readFileSync(path.join(localStorage[\"pythonscript\"], \"data.json\"))\r\n                    dataFromPython = JSON.parse(dataFromPython.toString(\"utf-8\"))\r\n                    console.log(dataFromPython)\r\n                    if (filetype==\"scan\") {\r\n                       fileChecked.forEach(file=>{\r\n                            plot(`Timescan Plot: ${file}`, \"Time (in ms)\", \"Counts\", dataFromPython[file], `${file}_tplot`)\r\n                       })\r\n                    } \r\n\r\n                    window.createToast(\"Graph plotted\", \"success\")\r\n                    graphPlotted = true\r\n\r\n                } catch (err) { preModal.modalContent = err; preModal.open = true }\r\n\r\n            }\r\n            console.log(\"Process closed\")\r\n            target.classList.toggle(\"is-loading\")\r\n        })\r\n    }\r\n\r\n    // Linearlog check\r\n    const linearlogCheck = () => {\r\n        let layout = { yaxis: { title: \"Counts\", type: logScale ? \"log\" : null } }\r\n        if(graphPlotted) {\r\n\r\n            fileChecked.forEach(file => {\r\n                let tplot = file + \"_tplot\";\r\n                Plotly.relayout(tplot, layout);\r\n            })\r\n        }\r\n    }\r\n\r\n    $: includePlotsInReport = fileChecked.map(file=>file={id:`${file}_tplot`, include:false, label:file})\r\n\r\n    let preModal = {};\r\n</script>\r\n\r\n<style>\r\n    .timescan_buttonContainer {min-height: 5em;}\r\n    .button {margin-right: 0.5em;}\r\n    .buttonRow {margin-bottom: 1em!important; align-items: center;}\r\n    * :global(.mdc-select__native-control option) {color: black}\r\n    .active {display: flex!important;}\r\n    .hide {display: none;}\r\n</style>\r\n\r\n<Layout bind:preModal {filetype} {id} bind:currentLocation bind:fileChecked on:chdir={dir_changed}>\r\n\r\n    <div class=\"timescan_buttonContainer\" slot=\"buttonContainer\">\r\n\r\n        <div class=\"content align buttonRow\">\r\n            <button class=\"button is-link\" on:click=\"{(e)=>plotData({e:e})}\">Timescan Plot</button>\r\n            <button class=\"button is-link\" on:click=\"{()=>{toggleRow = !toggleRow}}\">Depletion Plot</button>\r\n            <button class=\"button is-link\" on:click=\"{(e)=>plotData({e:e, filetype:\"scan\", tkplot:\"plot\"})}\">Open in Matplotlib</button>\r\n            <CustomIconSwitch style=\"padding:0;\" bind:toggler={openShell} icons={[\"settings_ethernet\", \"code\"]}/>\r\n            <CustomSwitch style=\"margin: 0 1em;\" on:change={linearlogCheck} bind:selected={logScale} label=\"Log\"/>\r\n        </div>\r\n\r\n        <div class=\"animated fadeIn hide buttonRow\" class:active={toggleRow} >\r\n            <CustomSelect style=\"width:12em; height:3.5em; margin-right:0.5em\" bind:picked={resON_Files} label=\"ResOn\" options={fullfiles}/>\r\n            <CustomSelect style=\"width:12em; height:3.5em; margin-right:0.5em\" bind:picked={resOFF_Files} label=\"ResOFF\" options={fullfiles}/>\r\n            <Textfield style= \"width:9em; height:3.5em; margin-right:0.5em\" bind:value={power} label=\"Power (ON, OFF) [mJ]\" />\r\n            <Textfield type=\"number\" {style} bind:value={nshots} label=\"FELIX Hz\" />\r\n            <Textfield type=\"number\" {style} bind:value={massIndex} label=\"Mass Index\" />\r\n            <Textfield type=\"number\" {style} bind:value={timestartIndex} label=\"Time Index\" />\r\n            <button class=\"button is-link\" on:click=\"{(e)=>plotData({e:e, filetype:\"general\"})}\">Submit</button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div style=\"margin-right: 1em;\" slot=\"plotContainer\">\r\n        <div id=\"tplotContainer\">\r\n            {#each fileChecked as scanfile}\r\n                <div id=\"{scanfile}_tplot\" style=\"padding-bottom:1em\" />\r\n            {/each}\r\n        </div>\r\n\r\n        {#if graphPlotted}\r\n\r\n            <div class=\"animated fadeIn\" style=\"flex-direction:column \">\r\n\r\n                <ReportLayout bind:currentLocation={currentLocation} id={`${filetype}_report`} {includePlotsInReport} />\r\n            </div>\r\n\r\n        {/if}\r\n        \r\n        \r\n    </div>\r\n    \r\n</Layout>",
    "\r\n<script>\r\n    import {dataTable_avg, dataTable, expfittedLinesCollectedData, avgfittedLineCount} from '../functions/svelteWritables';\r\n    import DataTable, {Head, Body, Row, Cell} from '@smui/data-table';\r\n    import {Icon} from '@smui/icon-button';\r\n    import CustomCheckbox from '../../../components/CustomCheckbox.svelte';\r\n    export let keepTable=true;\r\n\r\n    const dataTableHead = [\"Filename\", \"Frequency (cm-1)\", \"Amplitude\", \"FWHM\", \"Sigma\"]\r\n\r\n    let show_dataTable_only_weighted_averaged = false, show_dataTable_only_averaged = false\r\n    $: dataTable_weighted_avg = $dataTable_avg.filter(file=> file.name == \"weighted_mean\")\r\n    $: console.log(\"dataTable\", $dataTable)\r\n    $: console.log(\"dataTable_avg\", $dataTable_avg)\r\n\r\n    $: console.log(\"dataTable_weighted_avg\", dataTable_weighted_avg)\r\n\r\n    function clearTable() {\r\n        $dataTable=$dataTable_avg=[]; \r\n        $avgfittedLineCount=0; \r\n        $expfittedLinesCollectedData=[];\r\n        window.createToast(\"Table cleared\", \"warning\")\r\n    }\r\n</script>\r\n\r\n\r\n<style>\r\n    .dataTable { display: flex; justify-content: center; }\r\n    .notification {width: 100%; border: 1px solid;}\r\n\r\n</style>\r\n\r\n<div class=\"content\">\r\n    <div class=\"title notification is-link\">Frequency table</div>\r\n    <CustomCheckbox bind:selected={show_dataTable_only_averaged} label=\"Only Averaged\" />\r\n\r\n    <CustomCheckbox bind:selected={show_dataTable_only_weighted_averaged} label=\"Only weighted Averaged\" />\r\n    <CustomCheckbox bind:selected={keepTable} label=\"Keep table\" />\r\n\r\n    <button class=\"button is-danger is-pulled-right\" on:click=\"{clearTable}\">Clear Table</button>\r\n</div>\r\n\r\n <div class=\"dataTable\" >\r\n    <DataTable table$aria-label=\"felix-tableAriaLabel\" table$id=\"felixTable\" id=\"felixTableContainer\" class=\"tableContainer\">\r\n\r\n        <Head >\r\n            <Row>\r\n                <Cell style=\"width: 2em;\"></Cell>\r\n                {#each dataTableHead as item}\r\n                    <Cell>{item}</Cell>\r\n                {/each}\r\n                <Cell style=\"width: 2em;\"></Cell>\r\n            </Row>\r\n        </Head>\r\n        <Body>\r\n            {#if show_dataTable_only_weighted_averaged}\r\n                {#each dataTable_weighted_avg as table, index (table.id)}\r\n                    <Row>\r\n                        <Cell style=\"width: 2em;\">{index}</Cell>\r\n                        <Cell>Line #{index}</Cell>\r\n                        <Cell>{table.freq}</Cell>\r\n                        <Cell>{table.amp}</Cell>\r\n                        <Cell>{table.fwhm}</Cell>\r\n                        <Cell>{table.sig}</Cell>\r\n                        <Cell style=\"background: #f14668; cursor: pointer;\">\r\n                            <Icon id=\"{table.id}\" class=\"material-icons\" \r\n                                on:click=\"{(e)=> {dataTable_weighted_avg = window._.filter(dataTable_weighted_avg, (tb)=>tb.id != e.target.id)}}\">close</Icon>\r\n                        </Cell>\r\n                    </Row>\r\n                {/each}\r\n            {:else if show_dataTable_only_averaged && !show_dataTable_only_weighted_averaged}\r\n                {#each $dataTable_avg as table, index (table.id)}\r\n                    <Row>\r\n                        <Cell style=\"width: 2em;\">{index}</Cell>\r\n                        <Cell>{table.name}</Cell>\r\n                        <Cell>{table.freq}</Cell>\r\n                        <Cell>{table.amp}</Cell>\r\n                        <Cell>{table.fwhm}</Cell>\r\n                        <Cell>{table.sig}</Cell>\r\n                        <Cell style=\"background: #f14668; cursor: pointer; width: 2em;\">\r\n                            <Icon id=\"{table.id}\" class=\"material-icons\" \r\n                                on:click=\"{(e)=> {$dataTable_avg = window._.filter($dataTable_avg, (tb)=>tb.id != e.target.id)}}\">close</Icon>\r\n                        </Cell>\r\n                    </Row>\r\n                {/each}\r\n            {:else}\r\n\r\n                {#each $dataTable as table, index (table.id)}\r\n                    <Row style=\"background-color: {table.color};\" class={table.className}>\r\n                        <Cell style=\"width: 2em;\">{index}</Cell>\r\n                        <Cell>{table.name}</Cell>\r\n                        <Cell>{table.freq}</Cell>\r\n                        <Cell>{table.amp}</Cell>\r\n                        <Cell>{table.fwhm}</Cell>\r\n                        <Cell>{table.sig}</Cell>\r\n                        <Cell style=\"background: #f14668; cursor: pointer;\">\r\n                            <Icon id=\"{table.id}\" class=\"material-icons\" \r\n                                on:click=\"{(e)=> {$dataTable = window._.filter($dataTable, (tb)=>tb.id != e.target.id)}}\">close</Icon>\r\n                        </Cell>\r\n                    </Row>\r\n                {/each}\r\n            {/if}\r\n        </Body>\r\n\r\n    </DataTable>\r\n</div>",
    "\r\n\r\n<script>\r\n    import CustomCheckList from '../../../components/CustomCheckList.svelte';\r\n    import Textfield from '@smui/textfield';\r\n    import CustomCheckbox from '../../../components/CustomCheckbox.svelte';\r\n    import { createEventDispatcher } from 'svelte';\r\n\r\n    export let felixPlotCheckboxes, felixPlotWidgets;\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n    .felix_tkplot_filelist_header {\r\n        border: solid 1px white;\r\n        width: 10em;\r\n        padding: 0.2em;\r\n        display: flex;\r\n        justify-content: center;\r\n        border-radius: 20px;\r\n\r\n        margin: auto;\r\n\r\n    }\r\n    .felix_tkplot_filelist_div {\r\n        margin-bottom:1em;\r\n    }\r\n\r\n\r\n    .felix_plotting_div {\r\n    \r\n        border: solid 1px white;\r\n        border-radius: 20px;\r\n        \r\n        padding: 1em;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n\r\n        justify-content: center;\r\n\r\n        margin: 1em 0;\r\n    }\r\n\r\n</style>\r\n\r\n<div class=\"\">\r\n\r\n    <div style=\"display:flex; flex-wrap:wrap;\">\r\n\r\n        {#each felixPlotCheckboxes as {label, options, selected, style, id}(id)}\r\n            <div style=\"flex-grow:1; {style}\" class=\"felix_tkplot_filelist_div\">\r\n\r\n                <div class=\"subtitle felix_tkplot_filelist_header\">{label}</div>\r\n                <CustomCheckList style=\"background: #836ac05c; border-radius: 20px; margin:1em 0;  height:20em; overflow:auto;\" bind:fileChecked={selected} bind:items={options} />\r\n\r\n            </div>\r\n        {/each}\r\n    </div>\r\n\r\n    <div class=\"felix_plotting_div\">\r\n\r\n        <h1 class=\"subtitle\">Text Widgets</h1>\r\n        <div class=\"widgets\">\r\n\r\n            {#each felixPlotWidgets.text as {label, value, id}(id)}\r\n\r\n                <Textfield style=\"width:12em; margin-bottom:1em;\" variant=\"outlined\" type=\"text\" bind:value {label}/>\r\n\r\n            {/each}\r\n\r\n        </div>\r\n        <button class=\"button is-link\" on:click=\"{()=>{dispatch(\"addWidget\", {type:\"text\"})}}\">Add widget</button>\r\n\r\n    </div>\r\n\r\n    <div class=\"felix_plotting_div\">\r\n\r\n        <h1 class=\"subtitle\">Number Widgets</h1>\r\n        <div class=\"widgets\">\r\n            {#each felixPlotWidgets.number as {label, value, step, id}(id)}\r\n                <Textfield style=\"width:12em; margin-bottom:1em;\" type=\"number\" {step} bind:value {label}/>\r\n\r\n            {/each}\r\n        </div>\r\n        <button class=\"button is-link\" on:click=\"{()=>{dispatch(\"addWidget\", {type:\"number\"})}}\">Add widget</button>\r\n\r\n    </div>\r\n\r\n    <div class=\"felix_plotting_div\">\r\n    \r\n        <h1 class=\"subtitle\">Boolean Widgets</h1>\r\n        <div class=\"widgets\">\r\n            {#each felixPlotWidgets.boolean as {label, value, id}(id)}\r\n                <CustomCheckbox style=\"width:12em; margin-bottom:1em;\" bind:selected={value} {label} />\r\n            {/each}\r\n        </div>\r\n        <button class=\"button is-link\" on:click=\"{()=>{dispatch(\"addWidget\", {type:\"boolean\"})}}\">Add widget</button>\r\n    </div>\r\n\r\n</div>",
    "\r\n<script>\r\n    import {onMount} from \"svelte\";\r\n    export let id=\"report\", reportEditor;\r\n    \r\n    onMount(()=>{\r\n        reportEditor = new Quill(`#${id}-editor-container`, {\r\n        \r\n            modules: {\r\n                formula: true,\r\n                syntax: true,\r\n                toolbar: `#${id}-toolbar-container`\r\n            \r\n            },\r\n\r\n            // placeholder: 'Compose an epic...',\r\n        \r\n            theme: 'snow'\r\n        \r\n        });\r\n    })\r\n\r\n</script>\r\n\r\n<style global>\r\n\r\n:global(.editor-container) :global(*) { color: black; }\r\n\r\n:global(.text-container) {height: 30rem; width: 100%;}\r\n:global(.ql-tooltip.ql-editing.ql-flip) {\r\n    left: -7.5px;\r\n    top: 20.5px;\r\n}\r\n\r\n:global(.ql-snow) :global(.ql-editor) :global(pre.ql-syntax) {\r\n    background-color: #4a4a4ae6;\r\n\r\n    color: #fafafa;\r\n\r\n}\r\n\r\n:global(.hljs-symbol), :global(.hljs-attribute) {color: #fafafa;}\r\n\r\n\r\n:global(.toolbar-container) {width: 100%;}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb21wb25lbnRzL0VkaXRvci5zdmVsdGUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSx3Q0FBc0IsWUFBWSxFQUFFOztBQUVwQywwQkFBaUIsYUFBYSxFQUFFLFdBQVcsQ0FBQztBQUM1QztJQUNJLFlBQVk7SUFDWixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSwyQkFBMkI7O0lBRTNCLGNBQWM7O0FBRWxCOztBQUVBLGlEQUErQixjQUFjLENBQUM7OztBQUc5Qyw2QkFBb0IsV0FBVyxDQUFDIiwiZmlsZSI6InNyYy9jb21wb25lbnRzL0VkaXRvci5zdmVsdGUiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbi5lZGl0b3ItY29udGFpbmVyICogeyBjb2xvcjogYmxhY2s7IH1cclxuXHJcbi50ZXh0LWNvbnRhaW5lciB7aGVpZ2h0OiAzMHJlbTsgd2lkdGg6IDEwMCU7fVxyXG4ucWwtdG9vbHRpcC5xbC1lZGl0aW5nLnFsLWZsaXAge1xyXG4gICAgbGVmdDogLTcuNXB4O1xyXG4gICAgdG9wOiAyMC41cHg7XHJcbn1cclxuXHJcbi5xbC1zbm93IC5xbC1lZGl0b3IgcHJlLnFsLXN5bnRheCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGE0YTRhZTY7XHJcblxyXG4gICAgY29sb3I6ICNmYWZhZmE7XHJcblxyXG59XHJcblxyXG4uaGxqcy1zeW1ib2wsIC5obGpzLWF0dHJpYnV0ZSB7Y29sb3I6ICNmYWZhZmE7fVxyXG5cclxuXHJcbi50b29sYmFyLWNvbnRhaW5lciB7d2lkdGg6IDEwMCU7fVxyXG4iXX0= */</style>\r\n\r\n\r\n\r\n<div id=\"{id}-standalone-container\" class=\"align editor-container\" style=\"background-color: #fafafa; width: 75%;\">\r\n  <div id=\"{id}-toolbar-container\" class=\"toolbar-container\">\r\n    <span class=\"ql-formats\">\r\n      <select class=\"ql-font\"></select>\r\n      <select class=\"ql-size\"></select>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <button class=\"ql-bold\"></button>\r\n      <button class=\"ql-italic\"></button>\r\n      <button class=\"ql-underline\"></button>\r\n      <button class=\"ql-strike\"></button>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <select class=\"ql-color\"></select>\r\n      <select class=\"ql-background\"></select>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <button class=\"ql-script\" value=\"sub\"></button>\r\n      <button class=\"ql-script\" value=\"super\"></button>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <button class=\"ql-header\" value=\"1\"></button>\r\n      <button class=\"ql-header\" value=\"2\"></button>\r\n      <button class=\"ql-blockquote\"></button>\r\n      <button class=\"ql-code-block\"></button>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <button class=\"ql-list\" value=\"ordered\"></button>\r\n      <button class=\"ql-list\" value=\"bullet\"></button>\r\n      <button class=\"ql-indent\" value=\"-1\"></button>\r\n      <button class=\"ql-indent\" value=\"+1\"></button>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <button class=\"ql-direction\" value=\"rtl\"></button>\r\n      <select class=\"ql-align\"></select>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <button class=\"ql-link\"></button>\r\n      <button class=\"ql-image\"></button>\r\n      <button class=\"ql-video\"></button>\r\n      <button class=\"ql-formula\"></button>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <button class=\"ql-clean\"></button>\r\n      \r\n    </span>\r\n  </div>\r\n  <div id=\"{id}-editor-container\" class=\"text-container\"></div>\r\n\r\n</div>",
    "\r\n<script>\r\n    import IconButton, {Icon} from '@smui/icon-button';\r\n\r\n    import { slide } from 'svelte/transition';\r\n    import FormField from '@smui/form-field';\r\n    import Switch from '@smui/switch';\r\n\r\n    import Textfield from '@smui/textfield';\r\n    \r\n    import {onMount, afterUpdate} from \"svelte\"\r\n    import CustomIconSwitch from './CustomIconSwitch.svelte';\r\n\r\n    import VirtualCheckList from './VirtualCheckList.svelte';\r\n    import { createEventDispatcher } from 'svelte';\r\n    import PreModal from \"./PreModal.svelte\";\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    export let fileChecked = [],  currentLocation = \"\", filetype = \"*.*\"\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n    let preModal = {};\r\n\r\n    function dispatch_chdir_event() { dispatch('chdir', { action: \"chdir\", filetype, currentLocation }) }\r\n\r\n    let original_location = currentLocation\r\n    let files = [], otherfolders = [], selectAll=false, showfiles = true, original_files = [];\r\n    $: parentFolder = fs.existsSync(currentLocation) ? path.basename(currentLocation) : \"Undefined\"\r\n\r\n    $: locationStatus = fs.existsSync(currentLocation) ? true : false\r\n\r\n    let searchKey = \"\";\r\n    const searchfile = () => {\r\n        console.log(searchKey)\r\n        if (!searchKey) {files = original_files}\r\n        else {files = original_files.filter(file=>file.name.includes(searchKey))}\r\n    }\r\n\r\n    let files_loaded = false\r\n    function getfiles(toast=false) {\r\n        if (fs.existsSync(currentLocation)) {original_files = otherfolders = files = fileChecked = [], selectAll = files_loaded = false}\r\n        else {return window.createToast(\"Location undefined\", \"danger\")}\r\n        try {\r\n\r\n            console.log(\"Current location: \", currentLocation)\r\n            \r\n            let folderfile = fs.readdirSync(currentLocation)\r\n            original_files = files = folderfile.filter(file=>file.endsWith(filetype)&&fs.lstatSync(path.join(currentLocation, file)).isFile()).map(file=>file={name:file, id:getID()}).sort((a,b)=>a.name<b.name?1:-1)\r\n\r\n            otherfolders = folderfile.filter(file=>fs.lstatSync(path.join(currentLocation, file)).isDirectory()).map(file=>file={name:file, id:getID()}).sort((a,b)=>a.name>b.name?1:-1)\r\n            \r\n            original_location = currentLocation\r\n            \r\n            files_loaded = true\r\n            console.log(\"Folder updated\");\r\n            dispatch_chdir_event()\r\n            \r\n            if (toast) {window.createToast(\"Files updated\")}\r\n        } catch (err) {\r\n            console.log(err)\r\n            preModal.modalContent = err;\r\n            preModal.open = true;\r\n            return original_files = otherfolders = files = fileChecked = []\r\n        }\r\n    }\r\n\r\n    let sortFile = false\r\n    $: sortFile ? files = files.sort((a,b)=>a.name>b.name?1:-1) : files = files.sort((a,b)=>a.name<b.name?1:-1)\r\n    const changeDirectory = (goto) => {\r\n\r\n        if (!fs.existsSync(currentLocation)) {return window.createToast(\"Location undefined\", \"danger\")}\r\n        currentLocation = path.resolve(currentLocation, goto)\r\n\r\n        getfiles()\r\n    }\r\n\r\n    onMount(()=> {if(fs.existsSync(currentLocation)) {getfiles(); console.log(\"onMount Updating location for \", filetype)}} )\r\n    afterUpdate(() => {\r\n        if (original_location !== currentLocation) {\r\n            if(fs.existsSync(currentLocation)) {getfiles(); console.log(\"Updating location for \", filetype)}\r\n            else {return window.createToast(\"Location undefined\", \"danger\")}\r\n        \r\n        }\r\n    });\r\n</script>\r\n\r\n<style>\r\n\r\n    /* .filelist { max-height: calc(100vh - 30em); overflow-y: auto; } */\r\n    .folderfile-list {max-height: calc(100vh - 20em); overflow-y: auto;}\r\n    .align {display: flex; align-items: center;}\r\n    .center {justify-content: center;}\r\n    .browseIcons {cursor: pointer;}\r\n</style>\r\n<PreModal bind:preModal/>\r\n<div class=\"align center browseIcons\">\r\n    <Icon class=\"material-icons\" on:click=\"{()=>changeDirectory(\"..\")}\">arrow_back</Icon>\r\n    <Icon class=\"material-icons\" on:click=\"{()=>{getfiles(true)}}\">refresh</Icon>\r\n    <CustomIconSwitch bind:toggler={sortFile} icons={[\"trending_up\", \"trending_down\"]}/>\r\n\r\n</div>\r\n\r\n<Textfield on:keyup={searchfile} style=\"margin-bottom:1em;\" bind:value={searchKey} label=\"Seach\" />\r\n<div class=\"align center\">\r\n    <FormField>\r\n    \r\n        <Switch bind:checked={selectAll} on:change=\"{()=>selectAll ? fileChecked = files.map(file=>file=file.name) : fileChecked = []}\"/>\r\n        <span slot=\"label\">Select All</span>\r\n    </FormField>\r\n</div>\r\n\r\n<div class=\"folderfile-list\" id=\"{filetype}_filebrowser\">\r\n    <div class=\"align folderlist\" >\r\n        <IconButton  toggle bind:pressed={showfiles}>\r\n\r\n            <Icon class=\"material-icons\" on>keyboard_arrow_down</Icon>\r\n            <Icon class=\"material-icons\" >keyboard_arrow_right</Icon>\r\n        </IconButton>\r\n\r\n        <div class=\"mdc-typography--subtitle1\">{parentFolder}</div>\r\n\r\n    </div>\r\n    {#if files_loaded}\r\n        {#if showfiles && files != \"\" }\r\n            <VirtualCheckList bind:fileChecked bind:items={files} on:click=\"{()=>selectAll=false}\"/>\r\n        {:else if files == \"\"}\r\n            <div class=\"mdc-typography--subtitle1 align center\">No {filetype} here!</div>        \r\n        {/if}\r\n        <div class=\"otherFolderlist\" style=\"cursor:pointer\">\r\n            {#each otherfolders as folder (folder.id)}\r\n                <div class=\"align\" on:click=\"{()=>changeDirectory(folder.name)}\" transition:slide|local>\r\n                    <Icon class=\"material-icons\">keyboard_arrow_right</Icon>\r\n                    <div class=\"mdc-typography--subtitle1\">{folder.name}</div>\r\n                </div>\r\n            {/each}\r\n        </div>\r\n    {:else if !locationStatus}\r\n\r\n        <div class=\"mdc-typography--subtitle1 align center\">Location doesn't exist: Browse files again</div>\r\n    {:else}\r\n        <div class=\"mdc-typography--subtitle1 align center\">...loading</div>\r\n    \r\n    {/if}\r\n\r\n</div>",
    "<script>\r\n  import {afterUpdate} from \"svelte\";\r\n  // import {windowLoaded} from \"../js/functions\";\r\n  import {activePage} from \"./Navbar.svelte\";\r\n  \r\n  afterUpdate(()=>{\r\n    $activePage === \"Home\" ? hidepage(\"footer\") : showpage(\"footer\")\r\n\r\n  })\r\n  \r\n</script>\r\n<style>\r\n\r\n    .navbar { background: #38236b; }\r\n\r\n</style>\r\n\r\n<nav class=\"navbar is-fixed-bottom animated fadeInUp\" id=\"footer\" style=\"display:none\">\r\n  <div class=\"navbar-menu\">\r\n    <div class=\"navbar-start\">\r\n\r\n      <div class=\"navbar-item\">\r\n        <p>Developed at Dr.Br&uuml;nken's group FELion@FELIX</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"navbar-end\">\r\n      <div class=\"navbar-item\">\r\n\r\n        <p>2020 &copy; AN Marimuthu | MIT License<p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>",
    "<script context=\"module\">\r\n    export function browse({filetype=\"\", dir=true}={}) {\r\n        return new Promise((resolve, reject)=>{\r\n            const mainWindow = remote.getCurrentWindow()\r\n            let type;\r\n            dir ? type = \"openDirectory\" : type = \"openFile\"\r\n\r\n            const options = {\r\n                filters: [\r\n                    { name: filetype, extensions: [`*${filetype}`] },\r\n                    { name: 'All Files', extensions: ['*'] }\r\n\r\n                ],\r\n                properties: [type, \"multiSelections\"],\r\n            }\r\n\r\n            if (process.versions.electron >= \"7\") {\r\n                remote.dialog.showOpenDialog(mainWindow, options)\r\n                .then(result => {\r\n                    console.log(result.canceled)\r\n                    console.log(result.filePaths)\r\n                    resolve(result)\r\n\r\n                }).catch(err => {\r\n\r\n                    window.createToast(\"Couldn't open folder\", \"danger\")\r\n                    reject(err) })\r\n            } else {\r\n                let result = {}\r\n                remote.dialog.showOpenDialog(null, options, location => {\r\n                location === undefined ? result = {canceled:true, filePaths:[]}: result = {canceled:false, filePaths:location}\r\n\r\n                console.log(result.canceled)\r\n                console.log(result.filePaths)\r\n                resolve(result)\r\n\r\n            })\r\n            }\r\n        })\r\n    }\r\n\r\n</script>\r\n\r\n<script>\r\n    \r\n    import { fly } from 'svelte/transition';\r\n    import Textfield from '@smui/textfield';\r\n    import {onMount} from \"svelte\";\r\n    import FileBrowser from \"./FileBrowser.svelte\"\r\n    import Hamburger1 from \"../components/icon_animations/Hamburger1.svelte\";\r\n\r\n    import { createEventDispatcher } from 'svelte';\r\n    import PreModal from \"./PreModal.svelte\";\r\n\r\n    ////////////////////////////////////////////////////////////////////////////\r\n\r\n    export let id, fileChecked=[], filetype = \"felix\", toggleBrowser = false, preModal = {};\r\n    export let currentLocation = localStorage[`${filetype}_location`] || \"\";\r\n    const dispatch = createEventDispatcher()\r\n\r\n    function browse_folder() {\r\n        browse({dir:true}).then(result=>{\r\n            if (!result.canceled) { currentLocation= localStorage[`${filetype}_location`] = result.filePaths[0] }\r\n        })\r\n\r\n    }\r\n\r\n    function tour_event() { dispatch('tour', {filetype}) }\r\n\r\n    onMount(()=>{ toggleBrowser = true; })\r\n\r\n</script>\r\n\r\n\r\n<style lang=\"scss\">.filebrowser, .fileContainer {\n  background-image: url(./assets/css/intro.svg);\n  height: calc(100vh - 7em); }\n\n.plotContainer {\n  overflow-y: auto;\n  padding-bottom: 12em;\n  max-height: calc(100vh - 27em); }\n  .plotContainer div {\n    margin-top: 1em; }\n\n.filebrowser {\n  padding-left: 2em;\n  padding-top: 1em;\n  background-color: #6a50ad59;\n  border-radius: 0; }\n\n.fileContainer {\n  margin: 0 2em;\n  padding-bottom: 5rem;\n  width: auto; }\n  @media (min-width: 770px) {\n    .fileContainer {\n      width: 60%; } }\n\n.buttonContainer {\n  max-height: 20em;\n  overflow-y: auto; }\n\n.box {\n  border-radius: 0; }\n\n.container {\n  height: calc(100vh - 7em); }\n\n/*# sourceMappingURL=Layout.svelte.css.map */</style>\r\n\r\n<PreModal bind:preModal />\r\n\r\n\r\n<section {id} style=\"display:none\" class=\"animated fadeIn\">\r\n\r\n    <div class=\"columns\">\r\n\r\n        {#if toggleBrowser}\r\n            <div class=\"column is-one-fifth-widescreen is-one-quarter-desktop box filebrowser adjust-right\" transition:fly=\"{{ x: -100, duration: 500 }}\">\r\n                <FileBrowser bind:currentLocation {filetype} bind:fileChecked on:chdir/>\r\n            </div>\r\n        {/if}\r\n\r\n        <div class=\"column fileContainer\" >\r\n\r\n            <div class=\"container button-plot-container box\">\r\n                <div class=\"align\">\r\n\r\n\r\n                    <Hamburger1 bind:active={toggleBrowser}/>\r\n                    <button class=\"button is-link gap\" id=\"{filetype}_filebrowser_btn\" on:click={browse_folder}>Browse</button>\r\n\r\n                    <Textfield style=\"margin-bottom:1em; width:70%;\" bind:value={currentLocation} label=\"Current location\" />\r\n                    <button class=\"button is-link is-pulled-right\" on:click={tour_event}>Need help?</button>\r\n\r\n                </div>\r\n                <div class=\"align buttonContainer\"> <slot name=\"buttonContainer\" /></div>\r\n                <div class=\"plotContainer\"> <slot name=\"plotContainer\" /> </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>",
    "\r\n<script>\r\n    export let active =  false, title =  \"Title\", style=\"width:60vw\", bodyBackground = \"#634e96\";\r\n</script>\r\n\r\n<style>\r\n  .modal-card-body {color: black; overflow-y: auto; max-height: 30em;}\r\n  \r\n  .delete {background-color: #fafafa;}\r\n  \r\n  .delete:hover {background-color: #f14668;}\r\n</style>\r\n\r\n<svelte:window on:keydown=\"{(e)=> {if(e.keyCode===27) active=false}}\"/>\r\n\r\n<div class=\"modal\" class:is-active={active}>\r\n\r\n  <div class=\"modal-background\"></div>\r\n\r\n  <div class=\"modal-card animated fadeIn faster\" {style}>\r\n\r\n    <header class=\"modal-card-head\">\r\n      <p class=\"modal-card-title\">{title}</p>\r\n      <span class=\"delete is-pulled-right\" on:click=\"{()=>active=false}\"></span>\r\n    </header>\r\n    <section class=\"modal-card-body\" style=\"background: {bodyBackground};\"><slot name=\"content\" style=\"white-space: pre-wrap;\"/></section>\r\n\r\n    <footer class=\"modal-card-foot\">\r\n      <div style=\"margin-left:auto; display:flex;\">\r\n        <slot name=\"footerbtn\" /> \r\n      </div>\r\n    </footer>\r\n  </div>\r\n\r\n</div>",
    "<script context=\"module\">\r\n  import {writable} from \"svelte/store\";\r\n  export const activePage = writable(\"\")\r\n\r\n</script>\r\n<script>\r\n\timport Tab, {Label} from '@smui/tab';\r\n\timport TabBar from '@smui/tab-bar';\r\n\t// import Button from '@smui/button';\r\n\timport {onMount} from \"svelte\";\r\n\texport let navItems;\r\n\t\r\n\t\r\n\tlet active = 'Home';\r\n\t$: $activePage = active\r\n\t$: console.log(`Current page: ${$activePage}`)\r\n\r\n\tconst navigate = () =>{navItems.forEach(item=> item == active ? showpage(item) : hidepage(item))}\r\n\tonMount(()=>{showpage(\"navbar\");})\r\n</script>\r\n\r\n<style lang=\"scss\">#navbar {\n  width: 100vw;\n  margin-bottom: 0;\n  padding: 0; }\n\n/*# sourceMappingURL=Navbar.svelte.css.map */</style>\r\n\r\n\r\n<div class=\"box animated fadeInDown\" id=\"navbar\" style=\"display:none\" on:click={navigate}>\r\n\t<TabBar tabs={navItems} let:tab bind:active>\r\n\t\t<Tab {tab}> <Label>{tab}</Label> </Tab>\r\n\t</TabBar>\r\n</div>\r\n",
    "<script>\r\n  import {browse} from \"./Layout.svelte\";\r\n  import { fade } from 'svelte/transition';\r\n\r\n  export let active = false, style = \"\", footer = true, currentLocation=\"\", title=\"\";\r\n  \r\n  function browse_folder() {\r\n  \r\n    browse({dir:true}).then(result=>{\r\n        if (!result.canceled) { currentLocation = result.filePaths[0]; window.createToast(\"Location updated\") }\r\n    })\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n    .quickview {margin: 5em 0;}\r\n\r\n    footer, .quickview {background-color: #594098fa;}\r\n    /* p {color: #fafafa;} */\r\n    .delete {background-color: #fafafa;}\r\n    .delete:hover {background-color: #f14668;}\r\n</style>\r\n\r\n<div class=\"quickview\" class:is-active={active} transition:fade>\r\n\r\n  <header class=\"quickview-header\">\r\n\r\n    <button class=\"button is-link\" on:click={browse_folder}>Browse</button>\r\n    <div class=\"subtitle\" style=\"margin:0;\">{title}</div>\r\n    <span class=\"delete is-pulled-right\" data-dismiss=\"quickview\" on:click=\"{()=>active=false}\"></span>\r\n\r\n  </header>\r\n\r\n  <div class=\"quickview-body\" {style}>\r\n    <div class=\"quickview-block\">\r\n      <slot >Contents</slot>\r\n    </div>\r\n  </div>\r\n\r\n  {#if footer}\r\n    <footer class=\"quickview-footer\">\r\n      <slot name=\"footer\" />\r\n    </footer>\r\n  {/if}\r\n</div>",
    "\r\n<script>\r\n    import Radio from '@smui/radio'\r\n    import FormField from '@smui/form-field'\r\n    import CustomCheckbox from './CustomCheckbox.svelte'\r\n    import Textfield from '@smui/textfield'\r\n    import Select, {Option} from '@smui/select'\r\n\r\n    import {onMount} from \"svelte\";\r\n    import Hamburger1 from \"./icon_animations/Hamburger1.svelte\";\r\n    import PreModal from \"./PreModal.svelte\";\r\n    import Editor from \"./Editor.svelte\";\r\n\r\n    const {BrowserWindow} = remote\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    export let currentLocation = \"\", id=\"report\", includePlotsInReport=[], includeTablesInReports=[]\r\n    let reportTitle = \"\", reportMethod = \"info\", reportMolecule = \"\"\r\n    $: reportFile = path.resolve(currentLocation, `reports/${reportMolecule}_report.html`)\r\n    // const reportExist = fs.existsSync(reportFile)\r\n    const stylesheet1 = path.resolve(__dirname, `assets/reports/report.css`)\r\n    const stylesheet2 = path.resolve(__dirname, `assets/reports/template.css`)\r\n    const reportHTML = document.createElement( 'html' )\r\n\r\n    let preModal = {};\r\n\r\n    $: reportHTMLTemplate = `<!DOCTYPE html>\r\n                                <html lang=\"en\">\r\n                                    <head>\r\n                                        <meta charset='utf8'>\r\n                                        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n                                        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n                                        <title>${reportMolecule} Reports</title>\r\n                                        <link rel=\"stylesheet\" type='text/css' href=\"${stylesheet1}\">\r\n                                        <link rel=\"stylesheet\" type='text/css' href=\"${stylesheet2}\">\r\n                                    </head>\r\n\r\n                                    <body>\r\n                                        <section class=\"section\" id=\"mainSection\"></section>\r\n                                    </body>\r\n                                </html>`\r\n\r\n\r\n    function init_report(){\r\n\r\n        reportHTML.innerHTML = fs.existsSync(reportFile) ? fs.readFileSync(reportFile) : reportHTMLTemplate\r\n        console.log(\"ReportHTML: \", reportHTML)\r\n        reportMainContainer = reportHTML.querySelector(\"#mainSection\")\r\n        \r\n        const reportDir = path.resolve(currentLocation, \"reports\")\r\n\r\n        if (!fs.existsSync(reportDir)) {\r\n            fs.mkdir(reportDir, { recursive: true }, (err) => {\r\n\r\n                if (err) throw err;\r\n                console.log(\"reports directory created\")\r\n            });\r\n        }\r\n    }\r\n    \r\n    let plotWidth = 750, plotHeight = 500;\r\n    function getImage(imgID) {\r\n\r\n        return new Promise(resolve => {\r\n\r\n            Plotly.toImage(imgID, {format: 'png', width: plotWidth, height: plotHeight}).then(dataURL =>{resolve(dataURL)})\r\n        \r\n        })\r\n    \r\n    }\r\n\r\n\r\n    const exprtToHtml = async (content) => {\r\n        fs.writeFile(reportFile, content || reportHTMLTemplate, function(err) {\r\n\r\n            if(err) {\r\n                window.createToast(\"Report couldn't be added.\", \"danger\")\r\n                return console.log(err);\r\n            }\r\n            window.createToast(\"Report added\", \"success\")\r\n\r\n            console.log(\"Exported to HTML\")\r\n        })\r\n\r\n        reportTitle = \"\"\r\n        \r\n    }\r\n\r\n    const addTablesToReport = () => {\r\n\r\n        const tableDiv = document.createElement(\"div\")\r\n        tableDiv.setAttribute(\"class\", \"content reportTable\")\r\n        \r\n        includeTablesInReports.forEach(tb=>{\r\n\r\n            if(tb.include) {\r\n\r\n                try {\r\n\r\n                    let tableContent = document.getElementById(tb.id).innerHTML\r\n                \r\n                    let tableElement = document.createElement(\"table\")\r\n                    \r\n                    tableElement.setAttribute(\"class\", \"table is-bordered is-hoverable\")\r\n                    tableElement.innerHTML = tableContent\r\n\r\n                    \r\n                    let tableHeading = document.createElement(\"h1\")\r\n                    tableHeading.setAttribute(\"class\", \"title\")\r\n                    \r\n                    tableHeading.textContent = tb.label\r\n                    \r\n                    tableDiv.appendChild(tableHeading)\r\n                    tableDiv.appendChild(tableElement)\r\n                    \r\n                } catch (error) {\r\n                    window.createToast(`${tb.label} is not visible`, \"danger\")\r\n                }\r\n\r\n            }\r\n        \r\n        })\r\n        console.log(\"tableDiv created\", tableDiv)\r\n\r\n        return tableDiv\r\n    }\r\n\r\n\r\n    const addPlotImagesToReport = async () => {\r\n\r\n        const plotDiv = document.createElement(\"div\")\r\n        plotDiv.setAttribute(\"class\", \"content reportPlots\")\r\n\r\n        await asyncForEach(includePlotsInReport, async (plot)=>{\r\n            if (plot.include) {\r\n                console.log(\"Request Image URL for \", plot.id)\r\n\r\n\r\n                let imgURL = await getImage(plot.id)\r\n                console.log(`Received Image URL for ${plot.id}\\n`)\r\n                let imgElement = document.createElement(\"img\")\r\n\r\n                imgElement.setAttribute(\"src\", imgURL)\r\n                plotDiv.appendChild(imgElement)\r\n                console.log(`${plot.id} Included in HTML`)\r\n\r\n            }\r\n        \r\n        })\r\n        console.log(\"plotDiv created\", plotDiv)\r\n        \r\n        return Promise.resolve(plotDiv)\r\n\r\n    }\r\n\r\n    let reportEditor;\r\n    const addReport = async () => {\r\n\r\n        if(!fs.existsSync(reportFile)) {init_report()}\r\n        const tableDiv = addTablesToReport()\r\n        const plotDiv = await addPlotImagesToReport()\r\n\r\n        const reportMainHeading = document.createElement(\"h1\")\r\n\r\n        reportMainHeading.setAttribute(\"class\", `notification is-${reportMethod} reportHeading`)\r\n\r\n        reportMainHeading.textContent = reportTitle\r\n\r\n        const reportComment = document.createElement(\"div\")\r\n        \r\n        reportComment.setAttribute(\"class\", \"reportComments\")\r\n        \r\n        reportComment.innerHTML = reportEditor.root.outerHTML\r\n\r\n        const reportDiv = document.createElement(\"div\")\r\n        reportDiv.setAttribute(\"class\", \"content reportCount\")\r\n\r\n        reportDiv.appendChild(reportMainHeading)\r\n        reportDiv.appendChild(reportComment)\r\n        reportDiv.appendChild(plotDiv)\r\n        reportDiv.appendChild(tableDiv)\r\n\r\n        console.log(\"reportDiv div created\", reportDiv)\r\n\r\n        reportMainContainer.appendChild(reportDiv)\r\n        console.log(\"reportMainContainer div created\", reportMainContainer)\r\n\r\n        console.log(\"Full report\\n\", reportHTML)\r\n        exprtToHtml(reportHTML.innerHTML)\r\n    }\r\n\r\n\r\n    let exportMethod = \"landscape\", pageSize = \"A4\"\r\n\r\n    const showReport = ({export_pdf=false}={}) => {\r\n\r\n        let reportWindow = new BrowserWindow({ width: 1200, minWidth :600, height: 600, parent: remote.getCurrentWindow(), show:!export_pdf})\r\n        reportWindow.on('closed', () => { reportWindow = null; console.log(\"Report window closed\") })\r\n        reportWindow.loadURL(reportFile)\r\n        reportWindow.webContents.on('did-finish-load', ()=>{ \r\n            console.log(\"Report loaded\")\r\n            if(export_pdf) {\r\n\r\n                let landscape;\r\n                exportMethod == \"landscape\" ? landscape = true : landscape = false\r\n                \r\n                if (process.versions.electron >= \"7\") {\r\n                    reportWindow.webContents.printToPDF({printBackground: true, landscape:landscape, pageSize:pageSize})\r\n                    .then(data => {\r\n                        fs.writeFile(reportFile.replace(\".html\", \".pdf\"), data, (error) => {\r\n                            if (error) {preModal.modalContent = error; preModal.open = true; return}\r\n                            window.createToast('Write PDF successfully.', \"success\")\r\n                        })\r\n                    }).catch(error => { preModal.modalContent = error; preModal.open = true })\r\n\r\n                } else {\r\n                    reportWindow.webContents.printToPDF({printBackground: true, landscape:landscape, pageSize:pageSize}, (error, data) => {\r\n                        if(error) { preModal.modalContent = error; preModal.open = true; return}\r\n                        fs.writeFile(reportFile.replace(\".html\", \".pdf\"), data, (error) => {\r\n                            if (error) {preModal.modalContent = error; preModal.open = true; return}\r\n                            window.createToast('Write PDF successfully.', \"success\")\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    const notificationMethod = [{name:\"info\", color:\"white\"}, {name:\"success\", color:\"#00ff00\"}, {name:\"warning\", color:\"yellow\"}, {name:\"danger\", color:\"red\"}]\r\n    let reportMainContainer;\r\n\r\n    onMount(()=>{ init_report() })\r\n\r\n    let toggle = false;\r\n</script>\r\n\r\n<style>\r\n\r\n    .button {margin-right: 1em;}\r\n\r\n\r\n\r\n    .report {display: flex; align-items: inherit; flex-direction: column;}\r\n    .addToReport > div {justify-content: center; display: flex; flex-wrap: wrap;}\r\n\r\n    .align {display: flex; align-items: center;}\r\n    .heading {\r\n    \r\n        border: 1px solid;\r\n        margin: 1em 0;\r\n        background-color: #634e96;\r\n\r\n\r\n\r\n        border-radius: 5px;\r\n    }\r\n\r\n    .title {margin: 0; flex-grow: 2;}\r\n\r\n</style>\r\n<PreModal bind:preModal/>\r\n<div class=\"content align heading\">\r\n\r\n    <div class=\"title notification is-link\">Add to report</div>\r\n    <Hamburger1 bind:active={toggle}/>\r\n    \r\n</div>\r\n\r\n{#if toggle}\r\n\r\n    <div style=\"margin-bottom:1em;\">\r\n        <Textfield style=\"height:3em; width:20em;\" variant=\"outlined\" bind:value={reportMolecule} label=\"Molecule Name\" />\r\n        <button class=\"button is-pulled-right is-warning\" on:click=\"{()=>{ reportMainContainer.innerHTML = \"\"; exprtToHtml(\"\"); window.createToast(\"Report resetted\", \"warning\")}}\">Reset Report</button>\r\n    </div>\r\n\r\n    <div class=\"align report\" {id} >\r\n        <div class=\"\">\r\n            {#each notificationMethod as method}\r\n                <FormField >\r\n                    <Radio bind:group={reportMethod} value={method.name}  />\r\n                    \r\n                    <span slot=\"label\" style=\"color:{method.color}\">{method.name}</span>\r\n                </FormField>\r\n            {/each}\r\n        </div>\r\n\r\n        {#if includeTablesInReports.length>0}\r\n            <div class=\"addToReport \">\r\n                <div class=\"\">\r\n                    {#each includeTablesInReports as {id, include, label}(id)}\r\n                        <CustomCheckbox bind:selected={include} {label}/>\r\n                    {/each}\r\n                </div>\r\n            </div>\r\n        {/if}\r\n        \r\n        \r\n        <div class=\"addToReport \">\r\n\r\n            <div class=\"\">\r\n                {#each includePlotsInReport as {id, include, label}(id)}\r\n                    <CustomCheckbox bind:selected={include} {label}/>\r\n                {/each}\r\n        \r\n        \r\n            </div>\r\n        </div>\r\n\r\n        <Textfield style=\"height:3em; margin-bottom:1em;\" variant=\"outlined\" bind:value={reportTitle} label=\"Title\" />\r\n        <Editor bind:reportEditor {id}/>\r\n        \r\n        <div class=\"align\" style=\"margin-top:1em;\">\r\n            <button class=\"button is-link\" on:click={addReport}>Add to Report</button>\r\n            <button class=\"button is-link\" on:click={showReport}>Show Report</button>\r\n        \r\n        </div>\r\n\r\n        <div class=\"align\">\r\n            <Textfield style=\"width:7em;\" variant=\"outlined\" bind:value={plotWidth} label=\"plotWidth\" />\r\n            <Textfield style=\"width:7em;\" variant=\"outlined\" bind:value={plotHeight} label=\"plotHeight\" />\r\n            \r\n            \r\n            <button class=\"button is-link\" on:click=\"{()=>showReport({export_pdf:true})}\">EXPORT to PDF</button>\r\n\r\n            {#each [\"landscape\", \"portrait\"] as method}\r\n            \r\n                <FormField >\r\n            \r\n                    <Radio bind:group={exportMethod} value={method}  />\r\n\r\n                    <span slot=\"label\" style=\"color:{method}\">{method}</span>\r\n            \r\n                </FormField>\r\n            {/each}\r\n\r\n            <Select bind:value={pageSize} label=\"pageSize\" style=\"margin-left:1em;\">\r\n                {#each [\"A3\", \"A4\", \"A5\", \"Legal\", \"Letter\"] as file}\r\n                    <Option value={file} selected={pageSize  === file}>{file}</Option>\r\n                {/each}\r\n            </Select>\r\n        </div>\r\n    \r\n    </div>\r\n\r\n{/if}",
    "<script>\r\n\r\n\r\n    import { fade, scale } from 'svelte/transition';\r\n    import {Icon} from '@smui/icon-button';\r\n    import {tick} from \"svelte\";\r\n    export let head, rows, keys, id=window.getID(), label=\"table\", sortOption = false, closeOption = true, addextraOption = true;\r\n\r\n    const keyIDSets = keys.map(key=>{return {key, id:window.getID()}})\r\n\r\n    const sortTable = (type) => { if(sortOption) {rows = _.orderBy(rows, [type], [\"asc\"])} }\r\n\r\n\r\n    let emptyRow = {}\r\n\r\n    keys.forEach(key=>emptyRow[key] = \"\")\r\n\r\n    const addRow = async () => {\r\n\r\n        const id = window.getID()\r\n        rows = [...rows, {...emptyRow, id}]\r\n        await tick()\r\n        const focusTargetID = `${id}-${keys[0]}`\r\n        document.getElementById(focusTargetID).focus()\r\n    }\r\n\r\n    $: console.log(\"Row: \", rows)\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n    * :global(th i) {color: black;}\r\n\r\n    .tableIcon {\r\n\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        \r\n        \r\n        color: black;\r\n    \r\n    }\r\n\r\n    \r\n    td {text-align: center!important;}\r\n</style>\r\n\r\n<div class=\"\">\r\n\r\n    {#if addextraOption}\r\n        <div class=\"icon-holder\" >\r\n            <Icon class=\"material-icons\"  on:click=\"{addRow}\">add</Icon>\r\n\r\n        </div>\r\n\r\n    {/if}\r\n\r\n\r\n    <div class=\"mdc-data-table tableContainer\" transition:fade>\r\n        <table class=\"mdc-data-table__table\" aria-label={label} {id}>\r\n            <thead>\r\n\r\n                <tr class=\"mdc-data-table__header-row\">\r\n\r\n                    <th class=\"mdc-data-table__header-cell\" style=\"width: 2em;\" role=\"columnheader\" scope=\"col\">#</th>\r\n\r\n\r\n                    {#each head as item, index }\r\n\r\n                        <th style=\"cursor: pointer;\" class=\"mdc-data-table__header-cell\" role=\"columnheader\" scope=\"col\" >\r\n\r\n                            <div class=\"tableIcon\" on:click=\"{()=>sortTable(keys[index])}\">\r\n                                {#if sortOption}\r\n                                    <Icon class=\"material-icons\" >arrow_downward</Icon>\r\n                                {/if}\r\n\r\n                                {item}\r\n                            </div>\r\n                        </th>\r\n\r\n                    {/each}\r\n                    \r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody class=\"mdc-data-table__content\">\r\n                \r\n                {#each rows as row, index (row.id)}\r\n                    <tr class=\"mdc-data-table__row\" style=\"background-color: #fafafa;\" transition:scale> \r\n                        <td class=\"mdc-data-table__cell\" style=\"width: 2em;\" >{index}</td>\r\n\r\n                        {#each keyIDSets as {key, id} (id)}\r\n                            <td class=\"mdc-data-table__cell  mdc-data-table__cell--numeric\" contenteditable=\"true\" bind:innerHTML={row[key]} id=\"{row.id}-{key}\">{row[key]}</td>\r\n\r\n                        {/each}\r\n\r\n                        {#if closeOption}\r\n\r\n                            <td class=\"mdc-data-table__cell\" style=\"background: #f14668; cursor: pointer; width: 2em;\">\r\n                                <Icon id=\"{row.id}\" class=\"material-icons\" on:click=\"{(e)=> {rows = window._.filter(rows, (tb)=>tb.id != e.target.id)}}\">close</Icon>\r\n                            </td>\r\n                        {/if}\r\n\r\n                    </tr>\r\n\r\n                {/each}\r\n\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    \r\n</div>",
    "\r\n<script>\r\n\r\n    import IconButton from '@smui/icon-button';\r\n    import PreModal from \"./PreModal.svelte\";\r\n    import {tick} from \"svelte\";\r\n\r\n    import Textfield from '@smui/textfield';\r\n\r\n    import CustomSwitch from './CustomSwitch.svelte';\r\n    ///////////////////////////////////////////////////////////////////////////////\r\n\r\n    const colorSets = {warning: \"#ffdd57\", danger:\"#f14668\", info:\"#2098d1\", normal:\"#fafafa\", success:\"#20f996\"}\r\n\r\n    export let commandToRun = localStorage[\"pythonpath\"] || \"\", commandArgsToRun = \"-m, pip\", commandResults = [{color:colorSets.normal, results:\">> \"}], teminalFontSize=20;\r\n\r\n    export let commandInputDiv = true, runShell = false;\r\n    \r\n    let preModal = {}\r\n    let openShellTerminal = false;\r\n\r\n    const srollTerminalDiv = async () => {\r\n        const terminalDiv = document.getElementById(\"terminal\")\r\n        await tick()\r\n        const scrollTo = terminalDiv.scrollHeight - terminalDiv.clientHeight\r\n        terminalDiv.scrollTo({top:scrollTo, behavior: 'smooth'})\r\n    }\r\n\r\n    async function terminalShell(){\r\n        runShell = false\r\n        \r\n        await tick()\r\n        \r\n        srollTerminalDiv()\r\n        \r\n        if (!commandToRun) {return window.createToast(\"No command entered\", \"warning\")}\r\n        commandResults = [...commandResults , {color:colorSets.normal, results:`>> ${commandToRun} ${commandArgsToRun.split(\",\").join(\" \")}`}]\r\n        let ls;\r\n\r\n        \r\n        try {\r\n\r\n            ls = spawn(commandToRun, commandArgsToRun.split(\",\").map(arg=>arg.trim()), { detached: true, stdio: 'pipe', shell: openShellTerminal });\r\n        } catch (error) {preModal.modalContent = error;  preModal.open = true}\r\n\r\n        ls.stdout.on(\"data\", data => {\r\n            commandResults = [...commandResults, {color:colorSets.info, results:`>> ${data || \"\"}`}]\r\n            srollTerminalDiv()\r\n\r\n        })\r\n        \r\n        ls.stderr.on(\"data\", data => { \r\n            commandResults = [...commandResults, {color:colorSets.danger, results:`>> ${data || \"\"}`}]\r\n\r\n            srollTerminalDiv()\r\n        })\r\n\r\n\r\n        ls.on(\"close\", code => {  \r\n\r\n            commandResults = [...commandResults, {color: code === 1 ? colorSets.danger :  colorSets.success, results:`>> child process exited with code ${code}`}]\r\n            srollTerminalDiv()\r\n\r\n            const outputLog = `${new Date().toLocaleString()}\\n\\n-----------------------------------------\\nRunning terminal commands\\n${commandResults.map(cmd=>cmd.results).join(\"\")}\\n-----------------------------------------\\n`\r\n            \r\n            try { fs.writeFileSync(path.resolve(__dirname, \"output.log\"), outputLog)} \r\n            \r\n            catch (error) { window.createToast(\"Could not save the outputs to file: output.log\", \"warning\")}\r\n\r\n        })\r\n    }\r\n\r\n    $: if(runShell) terminalShell()\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n    .box { background-color: #6a50ad8a; overflow-y: auto; height: calc(100vh - 12em);}\r\n\r\n    #terminal {\r\n\r\n        margin-bottom: 1em;\r\n        background-color: #4a4a4ae6;\r\n\r\n        user-select: text;\r\n    \r\n    }\r\n\r\n    .contentBox {\r\n\r\n        max-height: 70vh;\r\n        overflow: auto;\r\n    \r\n        padding-bottom: 1em;\r\n        padding: 1em;\r\n        height: calc(100vh - 12em);\r\n\r\n    }\r\n\r\n</style>\r\n\r\n\r\n<PreModal bind:preModal/>\r\n\r\n\r\n<div class=\"content contentBox terminalBox\" >\r\n\r\n    {#if commandInputDiv}\r\n\r\n        <div class=\"commandInput\">\r\n            <div class=\"run\" style=\"display:flex; align-items:center; margin-bottom:1em;\">\r\n\r\n                <Textfield  bind:value={commandToRun} label=\"Enter command to run\"/>\r\n\r\n                <Textfield  bind:value={commandArgsToRun} label=\"Enter command-arg\"/>\r\n            </div>\r\n\r\n            <div class=\"run\" style=\"display:flex; align-items:center; margin-bottom:1em;\">\r\n                \r\n                <IconButton class=\"material-icons\" on:click={terminalShell}>play_arrow</IconButton>\r\n                <CustomSwitch style=\"margin: 0 1em;\" bind:selected={openShellTerminal} label=\"Shell\"/>\r\n                <Textfield type=\"number\" step=\"1\" min=\"0\" bind:value={teminalFontSize} variant=\"outlined\" style=\"width:7em\" label=\"Font Size\"/>\r\n\r\n                <IconButton class=\"material-icons is-pulled-right\" style=\"background: #f14668; border-radius: 2em;\" on:click=\"{()=>commandResults=[{color:colorSets.normal, results:`>> cleared`}] }\">clear</IconButton>\r\n            </div>\r\n        </div>\r\n    {/if}\r\n\r\n    \r\n\r\n\r\n\r\n    <div class=\"box\" id=\"terminal\" style=\"height: {commandInputDiv ? 75 : 90}%;\">\r\n\r\n        {#each commandResults as {color, results}}\r\n            <h1 class=\"subtitle\" style=\"color:{color}; font-size:{teminalFontSize}px; white-space: pre-wrap; \">{results}</h1>\r\n\r\n        {/each}\r\n\r\n    </div>\r\n\r\n</div>",
    "<script>\r\n    export let style=6, active=false;\r\n</script>\r\n\r\n<style> \r\n    /* nav-icon-1 */\r\n\r\n    .nav-icon-1{\r\n    width: 30px;\r\n    height: 30px;\r\n    position: relative;\r\n    transition: .1s;\r\n    margin: 10px 10px;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    }\r\n    .nav-icon-1 span{\r\n    width: 5px;\r\n    height: 5px;\r\n    background-color: #fff;\r\n    display: block;\r\n    border-radius: 50%;\r\n    position: absolute;\r\n\r\n    }\r\n    .nav-icon-1:hover span{\r\n    transform: scale(1.2);\r\n    transition: 350ms cubic-bezier(.8, .5, .2, 1.4);\r\n    }\r\n    .nav-icon-1 span:nth-child(1){\r\n    left: 0;\r\n    top: 0;\r\n    }\r\n    .nav-icon-1 span:nth-child(2){\r\n    left: 12px;\r\n    top: 0;\r\n    }\r\n    .nav-icon-1 span:nth-child(3){\r\n    right: 0;\r\n    top: 0;\r\n    }\r\n    .nav-icon-1 span:nth-child(4){\r\n    left: 0;\r\n    top: 12px;\r\n    }\r\n    .nav-icon-1 span:nth-child(5){\r\n    position: absolute;\r\n    left: 12px;\r\n    top: 12px;\r\n    }\r\n    .nav-icon-1 span:nth-child(6){\r\n    right: 0px;\r\n    top: 12px;\r\n    }\r\n    .nav-icon-1 span:nth-child(7){\r\n    left: 0px;\r\n    bottom: 0px;\r\n    }\r\n    .nav-icon-1 span:nth-child(8){\r\n    position: absolute;\r\n    left: 12px;\r\n    bottom: 0px;\r\n    }\r\n    .nav-icon-1 span:nth-child(9){\r\n    right: 0px;\r\n    bottom: 0px;\r\n    }\r\n    .nav-icon-1.open{\r\n    transform: rotate(180deg);\r\n    cursor: pointer;\r\n    transition: .2s cubic-bezier(.8, .5, .2, 1.4);\r\n    }\r\n    .nav-icon-1.open span{\r\n    border-radius: 50%;\r\n    transition-delay: 200ms;\r\n    transition: .5s cubic-bezier(.8, .5, .2, 1.4);\r\n    }\r\n    .nav-icon-1.open span:nth-child(2) {\r\n    left: 6px;\r\n    top: 6px;\r\n    }\r\n    .nav-icon-1.open span:nth-child(4) {\r\n    left: 6px;\r\n    top: 18px;\r\n    }\r\n    .nav-icon-1.open span:nth-child(6) {\r\n    right: 6px;\r\n    top: 6px;\r\n    }\r\n    .nav-icon-1.open span:nth-child(8) {\r\n    left: 18px;\r\n    bottom: 6px;\r\n    }\r\n    /* nav-icon-2 */\r\n    .nav-icon-2{\r\n    width: 35px;\r\n    height: 30px;\r\n    margin: 10px 10px;\r\n    position: relative;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    }\r\n    .nav-icon-2 span{\r\n    background-color:#FFF;\r\n    position: absolute;\r\n    border-radius: 2px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    }\r\n    .nav-icon-2 span:nth-child(1){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    top: 0px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-2 span:nth-child(2){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    top: 13px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-2 span:nth-child(3){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-2:not(.open):hover span:nth-child(1){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    top: -2px;\r\n    left: 0px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    }\r\n    .nav-icon-2:not(.open):hover span:nth-child(2){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    top: 13px;\r\n    left: 0px;\r\n    transition: .4s cubic-bezier(.8, .5, .2, 1.4);\r\n    }\r\n    .nav-icon-2:not(.open):hover span:nth-child(3){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    bottom: -2px;\r\n    left: 0px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    }\r\n    .nav-icon-2.open span:nth-child(1){\r\n    left:3px;\r\n    top: 12px;\r\n    width: 30px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    transform: rotate(90deg);\r\n    transition-delay: 150ms;\r\n    }\r\n    .nav-icon-2.open span:nth-child(2){\r\n    left:2px;\r\n    top: 20px;\r\n    width: 20px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    transform: rotate(45deg);\r\n    transition-delay: 50ms;\r\n    }\r\n    .nav-icon-2.open span:nth-child(3){\r\n    left:14px;\r\n    top: 20px;\r\n    width: 20px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    transform: rotate(-45deg);\r\n    transition-delay: 100ms;\r\n    }\r\n    /* nav-icon-3 */\r\n    .nav-icon-3{\r\n    width: 35px;\r\n    height: 30px;\r\n    margin: 10px 10px;\r\n    position: relative;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    }\r\n    .nav-icon-3 span{\r\n    background-color:#FFF;\r\n    position: absolute;\r\n    border-radius: 2px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    }\r\n    .nav-icon-3 span:nth-child(1){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    top: 0px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-3 span:nth-child(2){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    top: 13px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-3 span:nth-child(3){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-3:not(.open):hover span:nth-child(1){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    top: -2px;\r\n    left: 0px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    }\r\n    .nav-icon-3:not(.open):hover span:nth-child(2){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    top: 13px;\r\n    left: 0px;\r\n    transition: .4s cubic-bezier(.8, .5, .2, 1.4);\r\n    }\r\n    .nav-icon-3:not(.open):hover span:nth-child(3){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    bottom: -2px;\r\n    left: 0px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    }\r\n    .nav-icon-3.open {\r\n    transform: rotate(-90deg);\r\n    }\r\n    .nav-icon-3.open  span:nth-child(1){\r\n    left:3px;\r\n    top: 12px;\r\n    width: 30px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    transform: rotate(90deg);\r\n    transition-delay: 150ms;\r\n    }\r\n    .nav-icon-3.open  span:nth-child(2){\r\n    left:2px;\r\n    top: 20px;\r\n    width: 20px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    transform: rotate(45deg);\r\n    transition-delay: 50ms;\r\n    }\r\n    .nav-icon-3.open  span:nth-child(3){\r\n    left:14px;\r\n    top: 20px;\r\n    width: 20px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    transform: rotate(-45deg);\r\n    transition-delay: 100ms;\r\n    }\r\n    /* nav-icon-4 */\r\n    .nav-icon-4{\r\n    width: 35px;\r\n    height: 30px;\r\n    margin: 10px 10px;\r\n    position: relative;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    }\r\n    .nav-icon-4 span{\r\n    background-color:#FFF;\r\n    position: absolute;\r\n    border-radius: 2px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    }\r\n    .nav-icon-4 span:nth-child(1){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    top: 0px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-4 span:nth-child(2){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    top: 13px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-4 span:nth-child(3){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-4:not(.open):hover span:nth-child(1){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    top: -2px;\r\n    left: 0px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    }\r\n    .nav-icon-4:not(.open):hover span:nth-child(2){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    top: 13px;\r\n    left: 0px;\r\n    transition: .4s cubic-bezier(.8, .5, .2, 1.4);\r\n    }\r\n    .nav-icon-4:not(.open):hover span:nth-child(3){\r\n    width: 100%;\r\n    height:  4px;\r\n    display: block;\r\n    bottom: -2px;\r\n    left: 0px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    }\r\n    .nav-icon-4.open {\r\n    transform: rotate(90deg);\r\n    }\r\n    .nav-icon-4.open span:nth-child(1){\r\n    left:3px;\r\n    top: 12px;\r\n    width: 30px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    transform: rotate(90deg);\r\n    transition-delay: 150ms;\r\n    }\r\n    .nav-icon-4.open span:nth-child(2){\r\n    left:2px;\r\n    top: 20px;\r\n    width: 20px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    transform: rotate(45deg);\r\n    transition-delay: 50ms;\r\n    }\r\n    .nav-icon-4.open span:nth-child(3){\r\n    left:14px;\r\n    top: 20px;\r\n    width: 20px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    transform: rotate(-45deg);\r\n    transition-delay: 100ms;\r\n    }\r\n    /* nav-icon-5 */\r\n    .nav-icon-5{\r\n    width: 35px;\r\n    height: 30px;\r\n    margin: 10px 10px;\r\n    position: relative;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    }\r\n    .nav-icon-5 span{\r\n    background-color:#fff;\r\n    position: absolute;\r\n    border-radius: 2px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    width:100%;\r\n    height: 4px;\r\n    transition-duration: 500ms\r\n    }\r\n    .nav-icon-5 span:nth-child(1){\r\n    top:0px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-5 span:nth-child(2){\r\n    top:13px;\r\n    left: 0px;\r\n    opacity:1;\r\n    }\r\n    .nav-icon-5 span:nth-child(3){\r\n    bottom:0px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-5:not(.open):hover span:nth-child(1){\r\n    transform: rotate(-3deg) scaleY(1.1);\r\n    }\r\n    .nav-icon-5:not(.open):hover span:nth-child(2){\r\n    transform: rotate(3deg) scaleY(1.1);\r\n    }\r\n    .nav-icon-5:not(.open):hover span:nth-child(3){\r\n    transform: rotate(-4deg) scaleY(1.1);\r\n    }\r\n    .nav-icon-5.open span:nth-child(1){\r\n    transform: rotate(45deg);\r\n    top: 13px;\r\n    }\r\n    .nav-icon-5.open span:nth-child(2){\r\n    opacity:0;\r\n    }\r\n    .nav-icon-5.open span:nth-child(3){\r\n    transform: rotate(-45deg);\r\n    top: 13px;\r\n    }\r\n    /* nav-icon-6 */\r\n    .nav-icon-6{\r\n    width: 35px;\r\n    height: 30px;\r\n    margin: 10px 10px;\r\n    position: relative;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    }\r\n    .nav-icon-6 span{\r\n    background-color:#fff;\r\n    position: absolute;\r\n    border-radius: 2px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    width:100%;\r\n    height: 4px;\r\n    }\r\n    .nav-icon-6 span:nth-child(1){\r\n    top:0px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-6 span:nth-child(2){\r\n    top:13px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-6 span:nth-child(3){\r\n    bottom:0px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-6:not(.open):hover span:nth-child(1){\r\n    transform:  scaleY(1.2);\r\n    left: -5px;\r\n    }\r\n    .nav-icon-6:not(.open):hover span:nth-child(2){\r\n    transform: rotate(5deg) scaleY(1.1);\r\n    }\r\n    .nav-icon-6:not(.open):hover span:nth-child(3){\r\n    transform:  scaleY(1.2);\r\n    left: 5px;\r\n    }\r\n    .nav-icon-6.open span:nth-child(1){\r\n    transform: rotate(45deg) scaleX(0.7);\r\n    top: 13PX;\r\n    left: -8px;\r\n    }\r\n    .nav-icon-6.open span:nth-child(2){\r\n    transform: scale(0);\r\n    transition-duration: 50ms\r\n    }\r\n    .nav-icon-6.open span:nth-child(3){\r\n    transform: rotate(-45deg) scaleX(0.7);\r\n    top: 13PX;\r\n    left: 7px;\r\n    }\r\n    /* nav-icon-7 */\r\n    .nav-icon-7{\r\n    width: 35px;\r\n    height: 30px;\r\n    margin: 10px 10px;\r\n    position: relative;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    }\r\n    .nav-icon-7 span{\r\n    background-color:#FFF;\r\n    position: absolute;\r\n    border-radius: 2px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    width:100%;\r\n    height: 4px;\r\n    }\r\n    .nav-icon-7 span:nth-child(1){\r\n    top:0px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-7 span:nth-child(2){\r\n    top:13px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-7 span:nth-child(3){\r\n    bottom:0px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-7:not(.open):hover span:nth-child(1){\r\n    transform: scaleX(.8);\r\n    }\r\n    .nav-icon-7:not(.open):hover span:nth-child(2){\r\n    transform: scaleX(.5);\r\n    }\r\n    .nav-icon-7:not(.open):hover span:nth-child(3){\r\n    transform: scaleX(.8);\r\n    }\r\n    .nav-icon-7.open span:nth-child(1){\r\n    transform: rotate(90deg);\r\n    top: 13PX;\r\n    }\r\n    .nav-icon-7.open span:nth-child(2){\r\n    transform: scale(0);\r\n    transition-duration: 50ms\r\n    }\r\n    .nav-icon-7.open span:nth-child(3){\r\n    top: 13PX;\r\n    }\r\n    /* nav-icon-8 */\r\n    .nav-icon-8{\r\n    width: 35px;\r\n    height: 30px;\r\n    margin: 10px 10px;\r\n    position: relative;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    }\r\n    .nav-icon-8 span{\r\n    background-color:#FFF;\r\n    position: absolute;\r\n    border-radius: 2px;\r\n    transition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n    width:100%;\r\n    height: 4px;\r\n    }\r\n    .nav-icon-8 span:nth-child(1){\r\n    top:0px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-8 span:nth-child(2){\r\n    top:13px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-8 span:nth-child(3){\r\n    bottom:0px;\r\n    left: 0px;\r\n    }\r\n    .nav-icon-8:not(.open):hover span:nth-child(1){\r\n    transform: scaleX(.8);\r\n    }\r\n    .nav-icon-8:not(.open):hover span:nth-child(2){\r\n    transform: scaleX(.5);\r\n    }\r\n    .nav-icon-8:not(.open):hover span:nth-child(3){\r\n    transform: scaleX(.8);\r\n    }\r\n    .nav-icon-8.open span:nth-child(1){\r\n    top: 13px;\r\n    }\r\n    .nav-icon-8.open span:nth-child(2){\r\n    top:13px;\r\n    }\r\n    .nav-icon-8.open span:nth-child(3){\r\n        top: 13px;\r\n\r\n    }\r\n\r\n</style>\r\n\r\n\r\n<div >\r\n\r\n    {#if style===1}\r\n        <div class=\"icon nav-icon-1\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    {:else if  style===2}\r\n        <div class=\"icon nav-icon-2\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    {:else if  style===3}\r\n        <div class=\"icon nav-icon-3\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    {:else if  style===4}\r\n        <div class=\"icon nav-icon-4\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    {:else if  style===5}\r\n        <div class=\"icon nav-icon-5\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    {:else if  style===6}\r\n        <div class=\"icon nav-icon-6\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    {:else if  style===7}\r\n        <div class=\"icon nav-icon-7\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n\r\n        </div>\r\n    {:else}\r\n    \r\n        <div class=\"icon nav-icon-8\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n\r\n            <span></span>\r\n            <span></span>\r\n\r\n        </div>\r\n    {/if}\r\n</div>",
    "<style>\r\n    h1 {\r\n        font-family: 'Roboto', sans-serif;\r\n        font-weight:300;\r\n        letter-spacing: 2px;\r\n        font-size:48px;\r\n    }\r\n\r\n    p {\r\n        font-family: 'Roboto', sans-serif;\r\n        letter-spacing: 1px;\r\n        color: #363636;\r\n\r\n        font-size: 1em;\r\n\r\n    }\r\n\r\n    .header {\r\n        position:relative;\r\n        text-align:center;\r\n        background: linear-gradient(-45deg,#f146689e,#5b3ea2,#fafafa1f,#b000204d);\r\n        background-size: 400% 400%;\r\n        color:white;\r\n        animation: gradient 15s ease infinite;\r\n    }\r\n    .logo {\r\n        width:50px;\r\n        fill:white;\r\n        padding-right:15px;\r\n        display:inline-block;\r\n        vertical-align: middle;\r\n    }\r\n\r\n    .inner-header {\r\n        height:70vh;\r\n        width:100%;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    .flex { /*Flexbox for containers*/\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        text-align: center;\r\n    }\r\n\r\n    .waves {\r\n        position:relative;\r\n        width: 100%;\r\n        height:15vh;\r\n        margin-bottom:-7px; /*Fix for safari gap*/\r\n        min-height:100px;\r\n        max-height:150px;\r\n    }\r\n\r\n    .content {\r\n        height:25vh;\r\n        text-align:center;\r\n        background-color: white;\r\n        position: absolute;\r\n\r\n        width: 100%;\r\n        \r\n        bottom: 0;\r\n    }\r\n\r\n    /* Animation */\r\n\r\n    .parallax > use {\r\n     \r\n        animation: move-forever 25s cubic-bezier(.55,.5,.45,.5)     infinite;\r\n    }\r\n\r\n    .parallax > use:nth-child(1) {\r\n        animation-delay: -2s;\r\n        animation-duration: 7s;\r\n    }\r\n    .parallax > use:nth-child(2) {\r\n        animation-delay: -3s;\r\n        animation-duration: 10s;\r\n    }\r\n\r\n    .parallax > use:nth-child(3) {\r\n        animation-delay: -4s;\r\n        animation-duration: 13s;\r\n    }\r\n    .parallax > use:nth-child(4) {\r\n    animation-delay: -5s;\r\n    animation-duration: 20s;\r\n    }\r\n    \r\n    @keyframes move-forever {\r\n        0% {\r\n        transform: translate3d(-90px,0,0);\r\n        }\r\n        100% { \r\n            transform: translate3d(85px,0,0);\r\n        }\r\n    }\r\n    h2 {font-size:20px;}\r\n    /*Shrinking for mobile*/\r\n    @media (max-width: 768px) {\r\n        /* .waves {\r\n            height:40px;\r\n            min-height:40px;\r\n        } */\r\n        .content {\r\n            height:21vh;\r\n        }\r\n        h1 { font-size:24px; }\r\n        h2 {font-size:16px;}\r\n    }\r\n\r\n    .title_container {margin-bottom: 20vh;}\r\n    \r\n    .wave_container {\r\n\r\n        position: absolute;\r\n        width: 100%;\r\n        top: 54vh;\r\n    }\r\n</style>\r\n\r\n\r\n<div class=\"animated fadeIn slower\">\r\n    <div class=\"header\">\r\n\r\n        <!--Content before waves-->\r\n\r\n        <div class=\"inner-header flex\">\r\n\r\n\r\n        \r\n            <div class=\"container title_container\">\r\n                <slot name=\"header\">\r\n                    <svg version=\"1.1\" class=\"logo\" baseProfile=\"tiny\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 500 500\" xml:space=\"preserve\">\r\n                        <path fill=\"#FFFFFF\" stroke=\"#000000\" stroke-width=\"10\" stroke-miterlimit=\"10\" d=\"M57,283\" />\r\n            \r\n                        <g>\r\n                            <path fill=\"#fff\" d=\"M250.4,0.8C112.7,0.8,1,112.4,1,250.2c0,137.7,111.7,249.4,249.4,249.4c137.7,0,249.4-111.7,249.4-249.4 C499.8,112.4,388.1,0.8,250.4,0.8z M383.8,326.3c-62,0-101.4-14.1-117.6-46.3c-17.1-34.1-2.3-75.4,13.2-104.1 c-22.4,3-38.4,9.2-47.8,18.3c-11.2,10.9-13.6,26.7-16.3,45c-3.1,20.8-6.6,44.4-25.3,62.4c-19.8,19.1-51.6,26.9-100.2,24.6l1.8-39.7\t\tc35.9,1.6,59.7-2.9,70.8-13.6c8.9-8.6,11.1-22.9,13.5-39.6c6.3-42,14.8-99.4,141.4-99.4h41L333,166c-12.6,16-45.4,68.2-31.2,96.2\tc9.2,18.3,41.5,25.6,91.2,24.2l1.1,39.8C390.5,326.2,387.1,326.3,383.8,326.3z\" />\r\n                        </g>\r\n\r\n                    </svg>\r\n                    <h1 >FELion Spectrum Analyser</h1>\r\n                    <br>\r\n                    <h2 >To analyse FELIX data for FELion Instrument</h2>\r\n\r\n                </slot>\r\n            </div>\r\n        </div>\r\n\r\n        <!--Waves Container-->\r\n        <div class=\"wave_container\">\r\n            <svg class=\"waves\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 24 150 28\" preserveAspectRatio=\"none\" shape-rendering=\"auto\">\r\n                <defs>\r\n\r\n                    <path id=\"gentle-wave\" d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\" />\r\n                </defs>\r\n                <g class=\"parallax\">\r\n                    <use xlink:href=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"rgba(255,255,255,0.7\" />\r\n                    <use xlink:href=\"#gentle-wave\" x=\"48\" y=\"3\" fill=\"rgba(255,255,255,0.5)\" />\r\n                    <use xlink:href=\"#gentle-wave\" x=\"48\" y=\"5\" fill=\"rgba(255,255,255,0.3)\" />\r\n                    <use xlink:href=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\r\n                </g>\r\n\r\n            </svg>\r\n        </div>\r\n        <!--Waves end-->\r\n\r\n    </div>\r\n    <!--Header ends-->\r\n    \r\n    <!--Content starts-->\r\n\r\n    <div class=\"content flex\">\r\n        <slot name=\"footer\"><p>Developed at Dr.Br&uuml;nken's group FELion@FELIX | 2020 &copy; AN Marimuthu | MIT License</p></slot>\r\n    </div>\r\n\r\n    <!--Content ends-->\r\n\r\n</div>"
  ],
  "names": [],
  "mappings": "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"
}