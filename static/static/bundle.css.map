{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\index.svelte",
    "..\\index.svelte",
    "..\\VirtualList.svelte",
    "..\\Dialog.svelte",
    "..\\Field.svelte",
    "..\\Input.svelte",
    "..\\Message.svelte",
    "..\\Notice.svelte",
    "..\\Notices.svelte",
    "..\\Notification.svelte",
    "..\\NotificationNotice.svelte",
    "..\\Snackbar.svelte",
    "..\\Switch.svelte",
    "..\\Tab.svelte",
    "..\\Tabs.svelte",
    "..\\Toast.svelte",
    "..\\Home.svelte",
    "..\\Misc.svelte",
    "..\\Normline.svelte",
    "..\\Powerfile.svelte",
    "..\\Settings.svelte",
    "..\\FrequencyTable.svelte",
    "..\\FelixPlotWidgets.svelte",
    "..\\ROSAA.svelte",
    "..\\Editor.svelte",
    "..\\FileBrowser.svelte",
    "..\\Footer.svelte",
    "..\\GetLabviewSettings.svelte",
    "..\\Layout.svelte",
    "..\\Modal.svelte",
    "..\\Navbar.svelte",
    "..\\QuickView.svelte",
    "..\\ReportLayout.svelte",
    "..\\SeparateWindow.svelte",
    "..\\Table.svelte",
    "..\\Terminal.svelte",
    "..\\Hamburger1.svelte",
    "..\\Simplewave.svelte"
  ],
  "sourcesContent": [
    "<script context=\"module\">\n  /*\n   * ====== PNotify ======\n   *\n   * http://sciactive.com/pnotify/\n   *\n   * Copyright 2009-2020 Hunter Perrin\n   * Copyright 2015 Google, Inc.\n   *\n   * Licensed under Apache License, Version 2.0.\n   *  http://www.apache.org/licenses/LICENSE-2.0\n   */\n\n  import { component } from './Component.js';\n  import Stack from './Stack.js';\n  export { Stack };\n\n  // Factory functions.\n  export const alert = options => component(getDefaultArgs(options));\n  export const notice = options => component(getDefaultArgs(options, 'notice'));\n  export const info = options => component(getDefaultArgs(options, 'info'));\n  export const success = options =>\n    component(getDefaultArgs(options, 'success'));\n  export const error = options => component(getDefaultArgs(options, 'error'));\n\n  // Default arguments for the new notice helper functions.\n  function getDefaultArgs(options, type) {\n    if (typeof options !== 'object') {\n      options = { text: options };\n    }\n\n    // Only assign the type if it was requested, so we don't overwrite\n    // options.type if it has something assigned.\n    if (type) {\n      options.type = type;\n    }\n\n    let target = document.body;\n\n    if ('stack' in options && options.stack && options.stack.context) {\n      target = options.stack.context;\n    }\n\n    return { target, props: options };\n  }\n\n  export const defaultStack = new Stack({\n    dir1: 'down',\n    dir2: 'left',\n    firstpos1: 25,\n    firstpos2: 25,\n    spacing1: 36,\n    spacing2: 36,\n    push: 'bottom'\n  });\n\n  export const defaultModules = new Map();\n\n  export const defaults = {\n    type: 'notice',\n    title: false,\n    titleTrusted: false,\n    text: false,\n    textTrusted: false,\n    styling: 'brighttheme',\n    icons: 'brighttheme',\n    mode: 'no-preference',\n    addClass: '',\n    addModalClass: '',\n    addModelessClass: '',\n    autoOpen: true,\n    width: '360px',\n    minHeight: '16px',\n    maxTextHeight: '200px',\n    icon: true,\n    animation: 'fade',\n    animateSpeed: 'normal',\n    shadow: true,\n    hide: true,\n    delay: 8000,\n    mouseReset: true,\n    closer: true,\n    closerHover: true,\n    sticker: true,\n    stickerHover: true,\n    labels: {\n      close: 'Close',\n      stick: 'Pin',\n      unstick: 'Unpin'\n    },\n    remove: true,\n    destroy: true,\n    stack: defaultStack,\n    modules: defaultModules\n  };\n\n  let posTimer;\n\n  // These actions need to be done once the DOM is ready.\n  function onDocumentLoaded() {\n    if (!defaultStack.context) {\n      defaultStack.context = document.body;\n    }\n    // Reposition the notices when the window resizes.\n    window.addEventListener('resize', () => {\n      // This timer is used for queueing the position event so it doesn't run\n      // repeatedly.\n      if (posTimer) {\n        clearTimeout(posTimer);\n      }\n      posTimer = setTimeout(() => {\n        const event = new Event('pnotify:position');\n        document.body.dispatchEvent(event);\n        posTimer = null;\n      }, 10);\n    });\n  }\n\n  // Run the deferred actions once the DOM is ready.\n  if (window && document.body) {\n    onDocumentLoaded();\n  } else {\n    document.addEventListener('DOMContentLoaded', onDocumentLoaded);\n  }\n</script>\n\n<script>\n  import { onMount, beforeUpdate, tick, createEventDispatcher } from 'svelte';\n  import { get_current_component } from 'svelte/internal';\n  import { forwardEventsBuilder } from './forwardEvents.js';\n\n  const self = get_current_component();\n  const dispatch = createEventDispatcher();\n  const forwardEvents = forwardEventsBuilder(self, [\n    'pnotify:init',\n    'pnotify:mount',\n    'pnotify:update',\n    'pnotify:beforeOpen',\n    'pnotify:afterOpen',\n    'pnotify:enterModal',\n    'pnotify:leaveModal',\n    'pnotify:beforeClose',\n    'pnotify:afterClose',\n    'pnotify:beforeDestroy',\n    'pnotify:afterDestroy',\n    'focusin',\n    'focusout',\n    'animationend',\n    'transitionend'\n  ]);\n\n  // Modules must be declared for init. (We need to run init inside modules.)\n  export let modules = new Map(defaults.modules);\n  // Stack must be declared for init. (We need the context to fire the event.)\n  export let stack = defaults.stack;\n\n  // Refs are needed for init event.\n  export const refs = {\n    elem: null,\n    container: null,\n    content: null,\n    iconContainer: null,\n    titleContainer: null,\n    textContainer: null\n  };\n\n  // Run init to give a chance for modules to override defaults.\n  const selfDefaults = { ...defaults };\n  dispatchLifecycleEvent('init', { notice: self, defaults: selfDefaults });\n\n  export let type = selfDefaults.type;\n  export let title = selfDefaults.title;\n  export let titleTrusted = selfDefaults.titleTrusted;\n  export let text = selfDefaults.text;\n  export let textTrusted = selfDefaults.textTrusted;\n  export let styling = selfDefaults.styling;\n  export let icons = selfDefaults.icons;\n  export let mode = selfDefaults.mode;\n  export let addClass = selfDefaults.addClass;\n  export let addModalClass = selfDefaults.addModalClass;\n  export let addModelessClass = selfDefaults.addModelessClass;\n  export let autoOpen = selfDefaults.autoOpen;\n  export let width = selfDefaults.width;\n  export let minHeight = selfDefaults.minHeight;\n  export let maxTextHeight = selfDefaults.maxTextHeight;\n  export let icon = selfDefaults.icon;\n  export let animation = selfDefaults.animation;\n  export let animateSpeed = selfDefaults.animateSpeed;\n  export let shadow = selfDefaults.shadow;\n  export let hide = selfDefaults.hide;\n  export let delay = selfDefaults.delay;\n  export let mouseReset = selfDefaults.mouseReset;\n  export let closer = selfDefaults.closer;\n  export let closerHover = selfDefaults.closerHover;\n  export let sticker = selfDefaults.sticker;\n  export let stickerHover = selfDefaults.stickerHover;\n  export let labels = selfDefaults.labels;\n  export let remove = selfDefaults.remove;\n  export let destroy = selfDefaults.destroy;\n\n  // The state can be 'waiting', 'opening', 'open', 'closing', or 'closed'.\n  let _state = 'closed';\n  // Auto close timer.\n  let _timer = null;\n  // Animation timers.\n  let _animInTimer = null;\n  let _animOutTimer = null;\n  // Stores what is currently being animated (in or out).\n  let _animating = false;\n  // Stores the class that adds entry/exit animation effects.\n  let _animatingClass = '';\n  // Stores the class that adds movement animation effects.\n  let _moveClass = '';\n  // Stores whether the notice was hidden by a timer.\n  let _timerHide = false;\n  // Whether the mouse is over the notice or the notice is focused.\n  let _interacting = false;\n  // Holds classes that modules add for the notice element or container element.\n  let _moduleClasses = {\n    elem: [],\n    container: []\n  };\n  // Modules that change how the notice displays (causing the notice element to\n  // not appear) can set these to true to make PNotify handle it correctly.\n  let _moduleHandled = false;\n  let _moduleOpen = false;\n  // The masking control for the second notice in a modalish stack when the\n  // first notice is hovered.\n  let _masking = false;\n  let _maskingIn = false;\n  let _maskingTimer = null;\n\n  // Save the old value of hide, so we can reset the timer if it changes.\n  let _oldHide = hide;\n\n  // Promise that resolves when the notice has opened.\n  let _openPromise = null;\n  // Promise that resolved when the notice closes.\n  let _closePromise = null;\n\n  // Grab the icons from the icons object or use provided icons\n  $: _widthStyle = typeof width === 'string' ? `width: ${width};` : '';\n  $: _minHeightStyle =\n    typeof minHeight === 'string' ? `min-height: ${minHeight};` : '';\n  $: _maxTextHeightStyle =\n    typeof maxTextHeight === 'string' ? `max-height: ${maxTextHeight};` : '';\n  $: _titleElement = title instanceof HTMLElement;\n  $: _textElement = text instanceof HTMLElement;\n  $: _nonBlock =\n    addClass.match(/\\bnonblock\\b/) ||\n    (addModalClass.match(/\\bnonblock\\b/) && _modal) ||\n    (addModelessClass.match(/\\bnonblock\\b/) && !_modal);\n  // This is for specific styling for how notices stack.\n  $: _stackDirClass = stack && stack.dir1 ? `pnotify-stack-${stack.dir1}` : '';\n\n  // Filter through the module objects, getting an array for each position.\n  $: modulesPrependContainer = Array.from(modules).filter(\n    ([module, options]) => module.position === 'PrependContainer'\n  );\n  $: modulesPrependContent = Array.from(modules).filter(\n    ([module, options]) => module.position === 'PrependContent'\n  );\n  $: modulesAppendContent = Array.from(modules).filter(\n    ([module, options]) => module.position === 'AppendContent'\n  );\n  $: modulesAppendContainer = Array.from(modules).filter(\n    ([module, options]) => module.position === 'AppendContainer'\n  );\n\n  export const getState = () => _state;\n  export const getTimer = () => _timer;\n  export const getStyle = name =>\n    typeof styling === 'string'\n      ? `${styling}-${name}`\n      : name in styling\n      ? styling[name]\n      : `${styling.prefix}-${name}`;\n  export const getIcon = name =>\n    typeof icons === 'string'\n      ? `${icons}-icon-${name}`\n      : name in icons\n      ? icons[name]\n      : `${icons.prefix}-icon-${name}`;\n\n  $: if (_titleElement && refs.titleContainer) {\n    refs.titleContainer.appendChild(title);\n  }\n\n  $: if (_textElement && refs.textContainer) {\n    refs.textContainer.appendChild(text);\n  }\n\n  // Whether the notification is in a modal stack (or a modalish stack in modal\n  // state).\n  let _modal =\n    stack &&\n    (stack.modal === true || (stack.modal === 'ish' && _timer === 'prevented'));\n\n  let _oldStack = NaN;\n  let _stackBeforeAddOverlayOff = null;\n  let _stackAfterRemoveOverlayOff = null;\n  $: if (_oldStack !== stack) {\n    if (_oldStack) {\n      // Remove the notice from the old stack.\n      _oldStack._removeNotice(self);\n      // Remove the listeners.\n      _modal = false;\n      _stackBeforeAddOverlayOff();\n      _stackAfterRemoveOverlayOff();\n    }\n    if (stack) {\n      // Add the notice to the stack.\n      stack._addNotice(self);\n      // Add listeners for modal state.\n      _stackBeforeAddOverlayOff = stack.on('beforeAddOverlay', () => {\n        _modal = true;\n        dispatchLifecycleEvent('enterModal');\n      });\n      _stackAfterRemoveOverlayOff = stack.on('afterRemoveOverlay', () => {\n        _modal = false;\n        dispatchLifecycleEvent('leaveModal');\n      });\n    }\n    _oldStack = stack;\n  }\n\n  onMount(() => {\n    dispatchLifecycleEvent('mount');\n\n    // Display the notice.\n    if (autoOpen) {\n      open().catch(() => {});\n    }\n  });\n\n  beforeUpdate(() => {\n    dispatchLifecycleEvent('update');\n\n    // Update the timed hiding.\n    if (_state !== 'closed' && _state !== 'waiting' && hide !== _oldHide) {\n      if (!hide) {\n        cancelClose();\n      } else if (!_oldHide) {\n        queueClose();\n      }\n    }\n\n    // Queue a position\n    if (\n      _state !== 'closed' &&\n      _state !== 'closing' &&\n      stack &&\n      !stack._collapsingModalState\n    ) {\n      stack.queuePosition();\n    }\n\n    // Save old options.\n    _oldHide = hide;\n  });\n\n  function handleInteraction(e) {\n    _interacting = true;\n\n    // Stop animation, reset the removal timer when the user interacts.\n    if (mouseReset && _state === 'closing') {\n      if (!_timerHide) {\n        return;\n      }\n      cancelClose();\n    }\n\n    // Stop the close timer.\n    if (hide && mouseReset) {\n      cancelClose();\n    }\n  }\n\n  function handleLeaveInteraction(e) {\n    _interacting = false;\n\n    // Start the close timer.\n    if (\n      hide &&\n      mouseReset &&\n      _animating !== 'out' &&\n      ['open', 'opening'].indexOf(_state) !== -1\n    ) {\n      queueClose();\n    }\n  }\n\n  // This runs an event on all the modules.\n  function dispatchLifecycleEvent(event, detail = {}) {\n    const eventDetail = {\n      notice: self,\n      ...detail\n    };\n    if (event === 'init') {\n      Array.from(modules).forEach(\n        ([module, options]) => 'init' in module && module.init(eventDetail)\n      );\n    }\n    let target = refs.elem || (stack && stack.context) || document.body;\n    if (!target) {\n      dispatch(`pnotify:${event}`, eventDetail);\n      return true;\n    }\n    const eventObj = new Event(`pnotify:${event}`, {\n      bubbles: event === 'init' || event === 'mount',\n      cancelable: event.startsWith('before')\n    });\n    eventObj.detail = eventDetail;\n    target.dispatchEvent(eventObj);\n    return !eventObj.defaultPrevented;\n  }\n\n  function insertIntoDOM() {\n    // If the notice is not in the DOM, or in the wrong context, append it.\n    const target = (stack && stack.context) || document.body;\n    if (!target) {\n      throw new Error('No context to insert this notice into.');\n    }\n    if (!refs.elem) {\n      throw new Error('Trying to insert notice before element is available.');\n    }\n    if (refs.elem.parentNode !== target) {\n      target.appendChild(refs.elem);\n    }\n  }\n\n  function removeFromDOM() {\n    refs.elem && refs.elem.parentNode.removeChild(refs.elem);\n  }\n\n  // Display the notice.\n  export let open = immediate => {\n    if (_state === 'opening') {\n      return _openPromise;\n    }\n    if (_state === 'open') {\n      if (hide) {\n        queueClose();\n      }\n      return Promise.resolve();\n    }\n\n    if (!_moduleHandled && stack && stack._shouldNoticeWait(self)) {\n      _state = 'waiting';\n      return Promise.reject();\n    }\n\n    if (!dispatchLifecycleEvent('beforeOpen', { immediate })) {\n      return Promise.reject();\n    }\n\n    _state = 'opening';\n    _masking = false;\n    // This makes the notice visibity: hidden; so its dimensions can be\n    // determined.\n    _animatingClass = 'pnotify-initial pnotify-hidden';\n\n    let resolve;\n    let reject;\n    const promise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    _openPromise = promise;\n\n    const afterOpenCallback = () => {\n      // Now set it to hide.\n      if (hide) {\n        queueClose();\n      }\n\n      _state = 'open';\n\n      dispatchLifecycleEvent('afterOpen', { immediate });\n\n      _openPromise = null;\n      resolve();\n    };\n\n    if (_moduleOpen) {\n      afterOpenCallback();\n      return Promise.resolve();\n    }\n\n    insertIntoDOM();\n\n    // Wait until the DOM is updated.\n    window.requestAnimationFrame(() => {\n      if (_state !== 'opening') {\n        reject();\n        _openPromise = null;\n        return;\n      }\n\n      if (stack) {\n        // Mark the stack so it won't animate the new notice.\n        stack._animation = false;\n        if (stack.push === 'top') {\n          // Reset the position data so the notice is positioned as the first\n          // notice.\n          stack._resetPositionData();\n        }\n        // Now position the stack's the notices.\n        stack._positionNotice(self);\n        stack.queuePosition(0);\n        // Reset animation.\n        stack._animation = true;\n      }\n\n      animateIn(afterOpenCallback, immediate);\n    });\n\n    return promise;\n  };\n\n  // Remove the notice.\n  export let close = (immediate, timerHide, waitAfterward) => {\n    if (_state === 'closing') {\n      return _closePromise;\n    }\n    if (_state === 'closed') {\n      return Promise.resolve();\n    }\n\n    const runDestroy = () => {\n      if (!dispatchLifecycleEvent('beforeDestroy')) {\n        return;\n      }\n      if (stack) {\n        stack._removeNotice(self);\n      }\n      self.$destroy();\n      dispatchLifecycleEvent('afterDestroy');\n    };\n\n    if (_state === 'waiting') {\n      if (waitAfterward) {\n        return Promise.resolve();\n      }\n      _state = 'closed';\n      // It's debatable whether the notice should be destroyed in this case, but\n      // I'm going to go ahead and say yes.\n      if (destroy && !waitAfterward) {\n        runDestroy();\n      }\n      return Promise.resolve();\n    }\n\n    if (\n      !dispatchLifecycleEvent('beforeClose', {\n        immediate,\n        timerHide,\n        waitAfterward\n      })\n    ) {\n      return Promise.reject();\n    }\n\n    _state = 'closing';\n    _timerHide = !!timerHide; // Make sure it's a boolean.\n\n    if (_timer && _timer !== 'prevented' && clearTimeout) {\n      clearTimeout(_timer);\n    }\n    _timer = null;\n\n    let resolve;\n    let reject;\n    const promise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    _closePromise = promise;\n\n    animateOut(() => {\n      _interacting = false;\n      _timerHide = false;\n      _state = waitAfterward ? 'waiting' : 'closed';\n      dispatchLifecycleEvent('afterClose', {\n        immediate,\n        timerHide,\n        waitAfterward\n      });\n      _closePromise = null;\n      resolve();\n      if (!waitAfterward) {\n        if (destroy) {\n          // If we're supposed to destroy the notice, run the destroy module\n          // events, remove from stack, and let Svelte handle DOM removal.\n          runDestroy();\n        } else if (remove) {\n          // If we're supposed to remove the notice from the DOM, do it.\n          removeFromDOM();\n        }\n      }\n    }, immediate);\n\n    return promise;\n  };\n\n  // Animate the notice in.\n  export let animateIn = (callback, immediate) => {\n    // Declare that the notice is animating in.\n    _animating = 'in';\n    const finished = event => {\n      if (event && refs.elem && event.target !== refs.elem) {\n        return;\n      }\n      refs.elem && refs.elem.removeEventListener('transitionend', finished);\n      if (_animInTimer) {\n        clearTimeout(_animInTimer);\n      }\n      if (_animating !== 'in') {\n        return;\n      }\n      let visible = _moduleOpen;\n      if (!visible && refs.elem) {\n        const domRect = refs.elem.getBoundingClientRect();\n        for (let prop in domRect) {\n          if (domRect[prop] > 0) {\n            visible = true;\n            break;\n          }\n        }\n      }\n      if (visible) {\n        if (callback) {\n          callback.call();\n        }\n        // Declare that the notice has completed animating.\n        _animating = false;\n      } else {\n        _animInTimer = setTimeout(finished, 40);\n      }\n    };\n\n    if (animation === 'fade' && !immediate) {\n      refs.elem && refs.elem.addEventListener('transitionend', finished);\n      _animatingClass = 'pnotify-in';\n      tick().then(() => {\n        _animatingClass = 'pnotify-in pnotify-fade-in';\n        // Just in case the event doesn't fire, call it after 650 ms.\n        _animInTimer = setTimeout(finished, 650);\n      });\n    } else {\n      const _animation = animation;\n      animation = 'none';\n      _animatingClass = `pnotify-in ${\n        _animation === 'fade' ? 'pnotify-fade-in' : ''\n      }`;\n      tick().then(() => {\n        animation = _animation;\n        finished();\n      });\n    }\n  };\n\n  // Animate the notice out.\n  export let animateOut = (callback, immediate) => {\n    // Declare that the notice is animating out.\n    _animating = 'out';\n    const finished = event => {\n      if (event && refs.elem && event.target !== refs.elem) {\n        return;\n      }\n      refs.elem && refs.elem.removeEventListener('transitionend', finished);\n      if (_animOutTimer) {\n        clearTimeout(_animOutTimer);\n      }\n      if (_animating !== 'out') {\n        return;\n      }\n      let visible = _moduleOpen;\n      if (!visible && refs.elem) {\n        const domRect = refs.elem.getBoundingClientRect();\n        for (let prop in domRect) {\n          if (domRect[prop] > 0) {\n            visible = true;\n            break;\n          }\n        }\n      }\n      if (\n        !refs.elem ||\n        !refs.elem.style.opacity ||\n        refs.elem.style.opacity === '0' ||\n        !visible\n      ) {\n        _animatingClass = '';\n        if (callback) {\n          callback.call();\n        }\n        // Declare that the notice has completed animating.\n        _animating = false;\n      } else {\n        // In case this was called before the notice finished animating.\n        _animOutTimer = setTimeout(finished, 40);\n      }\n    };\n\n    if (animation === 'fade' && !immediate) {\n      refs.elem && refs.elem.addEventListener('transitionend', finished);\n      _animatingClass = 'pnotify-in';\n      // Just in case the event doesn't fire, call it after 650 ms.\n      _animOutTimer = setTimeout(finished, 650);\n    } else {\n      _animatingClass = '';\n      tick().then(() => {\n        finished();\n      });\n    }\n  };\n\n  // Cancel any pending removal timer.\n  export function cancelClose() {\n    if (_timer && _timer !== 'prevented') {\n      clearTimeout(_timer);\n      _timer = null;\n    }\n    if (_animOutTimer) {\n      clearTimeout(_animOutTimer);\n    }\n    if (_state === 'closing') {\n      // If it's animating out, stop it.\n      _state = 'open';\n      _animating = false;\n      _animatingClass =\n        animation === 'fade' ? 'pnotify-in pnotify-fade-in' : 'pnotify-in';\n    }\n  }\n\n  // Queue a close timer.\n  export function queueClose() {\n    if (_timer === 'prevented') {\n      return;\n    }\n    // Cancel any current close timer.\n    cancelClose();\n    if (delay !== Infinity) {\n      _timer = setTimeout(() => close(false, true), isNaN(delay) ? 0 : delay);\n    }\n  }\n\n  export function _preventTimerClose(prevent) {\n    if (prevent) {\n      cancelClose();\n      _timer = 'prevented';\n    } else if (_timer === 'prevented') {\n      _timer = null;\n      if (_state === 'open' && hide) {\n        queueClose();\n      }\n    }\n  }\n\n  // Some shortcut functions.\n  export function on(...args) {\n    return self.$on(...args);\n  }\n\n  export function update(...args) {\n    return self.$set(...args);\n  }\n\n  export function fire(name, detail) {\n    dispatch(name, detail);\n  }\n\n  export function addModuleClass(element, ...classNames) {\n    for (let i = 0; i < classNames.length; i++) {\n      let className = classNames[i];\n      if (_moduleClasses[element].indexOf(className) === -1) {\n        _moduleClasses[element].push(className);\n      }\n    }\n    _moduleClasses[element] = _moduleClasses[element];\n  }\n\n  export function removeModuleClass(element, ...classNames) {\n    for (let i = 0; i < classNames.length; i++) {\n      let className = classNames[i];\n      const idx = _moduleClasses[element].indexOf(className);\n      if (idx !== -1) {\n        _moduleClasses[element].splice(idx, 1);\n      }\n    }\n    _moduleClasses[element] = _moduleClasses[element];\n  }\n\n  export function hasModuleClass(element, ...classNames) {\n    for (let i = 0; i < classNames.length; i++) {\n      let className = classNames[i];\n      if (_moduleClasses[element].indexOf(className) === -1) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  export function getModuleHandled() {\n    return _moduleHandled;\n  }\n\n  export function setModuleHandled(value) {\n    return (_moduleHandled = value);\n  }\n\n  export function getModuleOpen() {\n    return _moduleOpen;\n  }\n\n  export function setModuleOpen(value) {\n    return (_moduleOpen = value);\n  }\n\n  export function setAnimating(value) {\n    return (_animating = value);\n  }\n\n  export function getAnimatingClass() {\n    return _animatingClass;\n  }\n\n  export function setAnimatingClass(value) {\n    return (_animatingClass = value);\n  }\n\n  export function _getMoveClass() {\n    return _moveClass;\n  }\n\n  export function _setMoveClass(value) {\n    return (_moveClass = value);\n  }\n\n  export function _setMasking(value, immediate, callback) {\n    if (_maskingTimer) {\n      clearTimeout(_maskingTimer);\n    }\n    if (_masking === value) {\n      return;\n    }\n    if (value) {\n      _masking = true;\n      _maskingIn = !!immediate;\n      insertIntoDOM();\n      tick().then(() => {\n        window.requestAnimationFrame(() => {\n          if (_masking) {\n            if (immediate && callback) {\n              callback();\n            } else {\n              _maskingIn = true;\n              const finished = () => {\n                refs.elem &&\n                  refs.elem.removeEventListener('transitionend', finished);\n                if (_maskingTimer) {\n                  clearTimeout(_maskingTimer);\n                }\n                if (_maskingIn && callback) {\n                  callback();\n                }\n              };\n              refs.elem &&\n                refs.elem.addEventListener('transitionend', finished);\n              _maskingTimer = setTimeout(finished, 650);\n            }\n          }\n        });\n      });\n    } else if (immediate) {\n      _masking = false;\n      _maskingIn = false;\n      if (remove && ['open', 'opening', 'closing'].indexOf(_state) === -1) {\n        removeFromDOM();\n      }\n      if (callback) {\n        callback();\n      }\n    } else {\n      const finished = () => {\n        refs.elem && refs.elem.removeEventListener('transitionend', finished);\n        if (_maskingTimer) {\n          clearTimeout(_maskingTimer);\n        }\n        if (!_maskingIn) {\n          _masking = false;\n          if (remove && ['open', 'opening', 'closing'].indexOf(_state) === -1) {\n            removeFromDOM();\n          }\n          if (callback) {\n            callback();\n          }\n        }\n      };\n\n      _maskingIn = false;\n      refs.elem && refs.elem.addEventListener('transitionend', finished);\n      refs.elem && refs.elem.style.opacity; // This line is necessary for some reason. Some notices don't fade without it.\n      // Just in case the event doesn't fire, call it after 650 ms.\n      _maskingTimer = setTimeout(finished, 650);\n    }\n  }\n</script>\n\n<svelte:options accessors={true} />\n\n<div\n  bind:this={refs.elem}\n  data-pnotify\n  use:forwardEvents\n  class={`pnotify ${!stack || stack.positioned ? 'pnotify-positioned' : ''} ${icon !== false ? 'pnotify-with-icon' : ''} ${getStyle('elem')} pnotify-mode-${mode} ${addClass} ${_animatingClass} ${_moveClass} ${_stackDirClass} ${animation === 'fade' ? `pnotify-fade-${animateSpeed}` : ''} ${_modal ? `pnotify-modal ${addModalClass}` : addModelessClass} ${_masking ? 'pnotify-masking' : ''} ${_maskingIn ? 'pnotify-masking-in' : ''} ${_moduleClasses.elem.join(' ')}`}\n  aria-live=\"assertive\"\n  role=\"alertdialog\"\n  on:mouseenter={handleInteraction}\n  on:mouseleave={handleLeaveInteraction}\n  on:focusin={handleInteraction}\n  on:focusout={handleLeaveInteraction}\n>\n  <div\n    bind:this={refs.container}\n    class={`pnotify-container ${getStyle('container')} ${getStyle(type)} ${shadow ? 'pnotify-shadow' : ''} ${_moduleClasses.container.join(' ')}`}\n    style={`${_widthStyle} ${_minHeightStyle}`}\n    role=\"alert\"\n  >\n    {#each modulesPrependContainer as [module, options] (module)}\n      <svelte:component this={module.default} {self} {...options} />\n    {/each}\n    {#if closer && !_nonBlock}\n      <div\n        class={`pnotify-closer ${getStyle('closer')} ${(!closerHover || _interacting) && !_masking ? '' : 'pnotify-hidden'}`}\n        role=\"button\"\n        tabindex=\"0\"\n        title={labels.close}\n        on:click={() => close(false)}\n      >\n        <span class={getIcon('closer')} />\n      </div>\n    {/if}\n    {#if sticker && !_nonBlock}\n      <div\n        class={`pnotify-sticker ${getStyle('sticker')} ${(!stickerHover || _interacting) && !_masking ? '' : 'pnotify-hidden'}`}\n        role=\"button\"\n        aria-pressed={!hide}\n        tabindex=\"0\"\n        title={hide ? labels.stick : labels.unstick}\n        on:click={() => (hide = !hide)}\n      >\n        <span\n          class={`${getIcon('sticker')} ${hide ? getIcon('unstuck') : getIcon('stuck')}`}\n        />\n      </div>\n    {/if}\n    {#if icon !== false}\n      <div\n        bind:this={refs.iconContainer}\n        class={`pnotify-icon ${getStyle('icon')}`}\n      >\n        <span class={icon === true ? getIcon(type) : icon} />\n      </div>\n    {/if}\n    <div\n      bind:this={refs.content}\n      class={`pnotify-content ${getStyle('content')}`}\n    >\n      {#each modulesPrependContent as [module, options] (module)}\n        <svelte:component this={module.default} {self} {...options} />\n      {/each}\n      {#if title !== false}\n        <div\n          bind:this={refs.titleContainer}\n          class={`pnotify-title ${getStyle('title')}`}\n        >\n          {#if !_titleElement}\n            {#if titleTrusted}\n              {@html title}\n            {:else}\n              <span class=\"pnotify-pre-line\">{title}</span>\n            {/if}\n          {/if}\n        </div>\n      {/if}\n      {#if text !== false}\n        <div\n          bind:this={refs.textContainer}\n          class={`pnotify-text ${getStyle('text')} ${_maxTextHeightStyle === '' ? '' : 'pnotify-text-with-max-height'}`}\n          style={_maxTextHeightStyle}\n          role=\"alert\"\n        >\n          {#if !_textElement}\n            {#if textTrusted}\n              {@html text}\n            {:else}\n              <span class=\"pnotify-pre-line\">{text}</span>\n            {/if}\n          {/if}\n        </div>\n      {/if}\n      {#each modulesAppendContent as [module, options] (module)}\n        <svelte:component this={module.default} {self} {...options} />\n      {/each}\n    </div>\n    {#each modulesAppendContainer as [module, options] (module)}\n      <svelte:component this={module.default} {self} {...options} />\n    {/each}\n  </div>\n</div>\n\n<style>\n/* -- Notice */\n:global(body > .pnotify.pnotify-positioned) {\n  /* Notices in the body context should be fixed to the viewport. */\n  position: fixed;\n  /* Ensures notices are above everything */\n  z-index: 100040;\n}\n:global(body > .pnotify.pnotify-modal) {\n  z-index: 100042;\n}\n:global(.pnotify) {\n  height: auto;\n  display: none;\n  transition: opacity 0.1s linear;\n  opacity: 0;\n}\n:global(.pnotify.pnotify-positioned) {\n  position: absolute;\n  z-index: 1;\n}\n:global(.pnotify.pnotify-modal) {\n  z-index: 3;\n}\n:global(.pnotify.pnotify-in) {\n  display: block;\n  opacity: 1;\n}\n:global(.pnotify.pnotify-initial) {\n  display: block;\n}\n:global(.pnotify-hidden) {\n  visibility: hidden;\n}\n:global(.pnotify.pnotify-move) {\n  transition: left 0.4s ease, top 0.4s ease, right 0.4s ease, bottom 0.4s ease;\n}\n:global(.pnotify.pnotify-fade-slow) {\n  transition: opacity 0.4s linear;\n  opacity: 0;\n}\n:global(.pnotify.pnotify-fade-slow.pnotify.pnotify-move) {\n  transition: opacity 0.4s linear, left 0.4s ease, top 0.4s ease,\n    right 0.4s ease, bottom 0.4s ease;\n}\n:global(.pnotify.pnotify-fade-normal) {\n  transition: opacity 0.25s linear;\n  opacity: 0;\n}\n:global(.pnotify.pnotify-fade-normal.pnotify.pnotify-move) {\n  transition: opacity 0.25s linear, left 0.4s ease, top 0.4s ease,\n    right 0.4s ease, bottom 0.4s ease;\n}\n:global(.pnotify.pnotify-fade-fast) {\n  transition: opacity 0.1s linear;\n  opacity: 0;\n}\n:global(.pnotify.pnotify-fade-fast.pnotify.pnotify-move) {\n  transition: opacity 0.1s linear, left 0.4s ease, top 0.4s ease,\n    right 0.4s ease, bottom 0.4s ease;\n}\n:global(.pnotify.pnotify-masking) {\n  display: block;\n  -webkit-mask-image: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0.8),\n    rgba(0, 0, 0, 0) 30px,\n    rgba(0, 0, 0, 0)\n  );\n  mask-image: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0.8),\n    rgba(0, 0, 0, 0) 30px,\n    rgba(0, 0, 0, 0)\n  );\n}\n:global(.pnotify.pnotify-masking.pnotify-stack-up) {\n  -webkit-mask-image: linear-gradient(\n    to top,\n    rgba(0, 0, 0, 0.8),\n    rgba(0, 0, 0, 0) 30px,\n    rgba(0, 0, 0, 0)\n  );\n  mask-image: linear-gradient(\n    to top,\n    rgba(0, 0, 0, 0.8),\n    rgba(0, 0, 0, 0) 30px,\n    rgba(0, 0, 0, 0)\n  );\n}\n:global(.pnotify.pnotify-masking.pnotify-stack-left) {\n  -webkit-mask-image: linear-gradient(\n    to left,\n    rgba(0, 0, 0, 0.8),\n    rgba(0, 0, 0, 0) 30px,\n    rgba(0, 0, 0, 0)\n  );\n  mask-image: linear-gradient(\n    to left,\n    rgba(0, 0, 0, 0.8),\n    rgba(0, 0, 0, 0) 30px,\n    rgba(0, 0, 0, 0)\n  );\n}\n:global(.pnotify.pnotify-masking.pnotify-stack-right) {\n  -webkit-mask-image: linear-gradient(\n    to right,\n    rgba(0, 0, 0, 0.8),\n    rgba(0, 0, 0, 0) 30px,\n    rgba(0, 0, 0, 0)\n  );\n  mask-image: linear-gradient(\n    to right,\n    rgba(0, 0, 0, 0.8),\n    rgba(0, 0, 0, 0) 30px,\n    rgba(0, 0, 0, 0)\n  );\n}\n:global(.pnotify.pnotify-fade-in, .pnotify.pnotify-masking-in) {\n  opacity: 1;\n}\n:global(.pnotify .pnotify-shadow) {\n  -webkit-box-shadow: 0px 6px 28px 0px rgba(0, 0, 0, 0.1);\n  -moz-box-shadow: 0px 6px 28px 0px rgba(0, 0, 0, 0.1);\n  box-shadow: 0px 6px 28px 0px rgba(0, 0, 0, 0.1);\n}\n:global(.pnotify-container) {\n  position: relative;\n  background-position: 0 0;\n  padding: 0.8em;\n  height: 100%;\n  margin: 0;\n}\n:global(.pnotify-container:after) {\n  content: ' '; /* Older browser do not support empty content */\n  visibility: hidden;\n  display: block;\n  height: 0;\n  clear: both;\n}\n:global(.pnotify-closer),\n:global(.pnotify-sticker) {\n  float: right;\n  margin-left: 0.5em;\n  cursor: pointer;\n}\n:global([dir='rtl'] .pnotify-closer),\n:global([dir='rtl'] .pnotify-sticker) {\n  float: left;\n  margin-right: 0.5em;\n  margin-left: 0;\n}\n:global(.pnotify-title) {\n  display: block;\n  white-space: pre-line;\n  margin-bottom: 0.4em;\n  margin-top: 0;\n}\n:global(.pnotify-text-with-max-height) {\n  overflow-y: auto;\n  overscroll-behavior: contain;\n  /* The bottom padding of .03em is specifically for Firefox, since it will show a scrollbar without it for some reason. */\n  padding-bottom: 0.03em;\n}\n:global(.pnotify.pnotify-with-icon .pnotify-content) {\n  margin-left: 24px;\n}\n:global([dir='rtl'] .pnotify.pnotify-with-icon .pnotify-content) {\n  margin-right: 24px;\n  margin-left: 0;\n}\n:global(.pnotify-pre-line) {\n  white-space: pre-line;\n}\n:global(.pnotify-icon),\n:global(.pnotify-icon span) {\n  display: block;\n  float: left;\n}\n:global([dir='rtl'] .pnotify-icon),\n:global([dir='rtl'] .pnotify-icon span) {\n  float: right;\n}\n/* Overlay */\n:global(.pnotify-modal-overlay) {\n  background-color: rgba(0, 0, 0, 0.6);\n  top: 0;\n  left: 0;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  z-index: 2;\n  transition: opacity 0.25s linear;\n  opacity: 0;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n}\n:global(.pnotify-modal-overlay-up) {\n  align-items: flex-start;\n}\n:global(.pnotify-modal-overlay-left) {\n  justify-content: flex-start;\n  align-items: center;\n}\n:global(.pnotify-modal-overlay-right) {\n  justify-content: flex-end;\n  align-items: center;\n}\n:global(.pnotify-modal-overlay.pnotify-modal-overlay-in) {\n  opacity: 1;\n}\n:global(.pnotify-modal-overlay-closes:after) {\n  content: '×';\n  font-family: Arial;\n  font-size: 3rem;\n  color: #fff;\n  text-shadow: 0 0 0.4rem #fff;\n}\n:global(body > .pnotify-modal-overlay) {\n  position: fixed;\n  z-index: 100041;\n}\n</style>\n",
    "<script context=\"module\">\n  export const position = 'PrependContainer';\n  export const defaults = {\n    swipeDismiss: true\n  };\n</script>\n\n<script>\n  import { onMount, onDestroy } from 'svelte';\n\n  // The PNotify notice.\n  export let self = null;\n\n  export let swipeDismiss = defaults.swipeDismiss;\n\n  let origXY = null;\n  let diffXY = null;\n  let noticeWidthHeight = null;\n  let noticeOpacity = null;\n  let csspos = 'left';\n  let direction = 'X';\n  let span = 'Width';\n  let windowInnerWidth = window.innerWidth;\n  let offs = [];\n\n  $: {\n    const stack = self.stack;\n    if (stack) {\n      if (windowInnerWidth <= 480) {\n        if (!('_m_spacing1' in stack)) {\n          stack._m_spacing1 = stack.spacing1;\n          stack._m_firstpos1 = stack.firstpos1;\n          stack._m_spacing2 = stack.spacing2;\n          stack._m_firstpos2 = stack.firstpos2;\n          stack.spacing1 = 0;\n          stack.firstpos1 = 0;\n          stack.spacing2 = 0;\n          stack.firstpos2 = 0;\n          stack.queuePosition();\n        }\n      } else {\n        if ('_m_spacing1' in stack) {\n          stack.spacing1 = stack._m_spacing1;\n          delete stack._m_spacing1;\n          stack.firstpos1 = stack._m_firstpos1;\n          delete stack._m_firstpos1;\n          stack.spacing2 = stack._m_spacing2;\n          delete stack._m_spacing2;\n          stack.firstpos2 = stack._m_firstpos2;\n          delete stack._m_firstpos2;\n          stack.queuePosition();\n        }\n      }\n    }\n  }\n\n  onMount(() => {\n    offs = [\n      self.on('touchstart', e => {\n        if (!swipeDismiss) {\n          return;\n        }\n\n        const stack = self.stack;\n        if (stack) {\n          switch (stack.dir1) {\n            case 'up':\n            case 'down':\n              csspos = 'left';\n              direction = 'X';\n              span = 'Width';\n              break;\n            case 'left':\n            case 'right':\n              csspos = 'top';\n              direction = 'Y';\n              span = 'Height';\n              break;\n          }\n        }\n\n        origXY = e.touches[0][`screen${direction}`];\n        noticeWidthHeight = self.refs.elem[`scroll${span}`];\n        noticeOpacity = window.getComputedStyle(self.refs.elem)['opacity'];\n        self.refs.container.style[csspos] = 0;\n      }),\n\n      self.on('touchmove', e => {\n        if (!origXY || !swipeDismiss) {\n          return;\n        }\n\n        const curXY = e.touches[0][`screen${direction}`];\n\n        diffXY = curXY - origXY;\n        const opacity =\n          (1 - Math.abs(diffXY) / noticeWidthHeight) * noticeOpacity;\n\n        self.refs.elem.style.opacity = opacity;\n        self.refs.container.style[csspos] = `${diffXY}px`;\n      }),\n\n      self.on('touchend', () => {\n        if (!origXY || !swipeDismiss) {\n          return;\n        }\n\n        self.refs.container.classList.add('pnotify-mobile-animate-left');\n        if (Math.abs(diffXY) > 40) {\n          const goLeft =\n            diffXY < 0 ? noticeWidthHeight * -2 : noticeWidthHeight * 2;\n          self.refs.elem.style.opacity = 0;\n          self.refs.container.style[csspos] = `${goLeft}px`;\n          self.close();\n        } else {\n          self.refs.elem.style.removeProperty('opacity');\n          self.refs.container.style.removeProperty(csspos);\n        }\n        origXY = null;\n        diffXY = null;\n        noticeWidthHeight = null;\n        noticeOpacity = null;\n      }),\n\n      self.on('touchcancel', () => {\n        if (!origXY || !swipeDismiss) {\n          return;\n        }\n\n        self.refs.elem.style.removeProperty('opacity');\n        self.refs.container.style.removeProperty(csspos);\n        origXY = null;\n        diffXY = null;\n        noticeWidthHeight = null;\n        noticeOpacity = null;\n      }),\n\n      self.on('pnotify:afterClose', () => {\n        // Remove any styling we added to close it.\n        if (!swipeDismiss) {\n          return;\n        }\n\n        self.refs.elem.style.removeProperty('opacity');\n        self.refs.container.style.removeProperty('left');\n        self.refs.container.style.removeProperty('top');\n      })\n    ];\n  });\n\n  onDestroy(() => {\n    offs.forEach(off => off());\n  });\n</script>\n\n<svelte:window on:resize={() => (windowInnerWidth = window.innerWidth)} />\n\n<style>\n:global([data-pnotify] .pnotify-container) {\n  position: relative;\n}\n:global([data-pnotify] .pnotify-mobile-animate-left) {\n  transition: left 0.1s ease;\n}\n:global([data-pnotify] .pnotify-mobile-animate-top) {\n  transition: top 0.1s ease;\n}\n@media (max-width: 480px) {\n  /* -- Notice */\n  :global([data-pnotify].pnotify) {\n    font-size: 1.2em;\n    -webkit-font-smoothing: antialiased;\n    -moz-font-smoothing: antialiased;\n    -ms-font-smoothing: antialiased;\n    font-smoothing: antialiased;\n  }\n  :global(body > [data-pnotify].pnotify) {\n    position: fixed;\n  }\n  :global([data-pnotify].pnotify.pnotify-stack-down),\n  :global([data-pnotify].pnotify.pnotify-stack-up) {\n    width: 100% !important;\n  }\n  :global([data-pnotify].pnotify.pnotify-stack-right),\n  :global([data-pnotify].pnotify.pnotify-stack-left) {\n    height: 100% !important;\n  }\n  :global([data-pnotify].pnotify .pnotify-shadow) {\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n    box-shadow: none;\n  }\n  :global([data-pnotify].pnotify.pnotify-stack-down .pnotify-shadow) {\n    border-bottom-width: 5px;\n  }\n  :global([data-pnotify].pnotify.pnotify-stack-up .pnotify-shadow) {\n    border-top-width: 5px;\n  }\n  :global([data-pnotify].pnotify.pnotify-stack-right .pnotify-shadow) {\n    border-right-width: 5px;\n  }\n  :global([data-pnotify].pnotify.pnotify-stack-left .pnotify-shadow) {\n    border-left-width: 5px;\n  }\n  :global([data-pnotify].pnotify .pnotify-container) {\n    -webkit-border-radius: 0;\n    -moz-border-radius: 0;\n    border-radius: 0;\n  }\n  :global([data-pnotify].pnotify.pnotify-stack-down .pnotify-container),\n  :global([data-pnotify].pnotify.pnotify-stack-up .pnotify-container) {\n    width: auto !important;\n  }\n  :global([data-pnotify].pnotify.pnotify-stack-right .pnotify-container),\n  :global([data-pnotify].pnotify.pnotify-stack-left .pnotify-container) {\n    height: 100% !important;\n  }\n}\n</style>\n",
    "<script>\n\timport { onMount, tick } from 'svelte';\n\n\t// props\n\texport let items;\n\texport let height = '100%';\n\texport let itemHeight = undefined;\n\n\tlet foo;\n\n\t// read-only, but visible to consumers via bind:start\n\texport let start = 0;\n\texport let end = 0;\n\n\t// local state\n\tlet height_map = [];\n\tlet rows;\n\tlet viewport;\n\tlet contents;\n\tlet viewport_height = 0;\n\tlet visible;\n\tlet mounted;\n\n\tlet top = 0;\n\tlet bottom = 0;\n\tlet average_height;\n\n\t$: visible = items.slice(start, end).map((data, i) => {\n\t\treturn { index: i + start, data };\n\t});\n\n\t// whenever `items` changes, invalidate the current heightmap\n\t$: if (mounted) refresh(items, viewport_height, itemHeight);\n\n\tasync function refresh(items, viewport_height, itemHeight) {\n\t\tconst { scrollTop } = viewport;\n\n\t\tawait tick(); // wait until the DOM is up to date\n\n\t\tlet content_height = top - scrollTop;\n\t\tlet i = start;\n\n\t\twhile (content_height < viewport_height && i < items.length) {\n\t\t\tlet row = rows[i - start];\n\n\t\t\tif (!row) {\n\t\t\t\tend = i + 1;\n\t\t\t\tawait tick(); // render the newly visible row\n\t\t\t\trow = rows[i - start];\n\t\t\t}\n\n\t\t\tconst row_height = height_map[i] = itemHeight || row.offsetHeight;\n\t\t\tcontent_height += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tend = i;\n\n\t\tconst remaining = items.length - end;\n\t\taverage_height = (top + content_height) / end;\n\n\t\tbottom = remaining * average_height;\n\t\theight_map.length = items.length;\n\n\t}\n\n\tasync function handle_scroll() {\n\t\tconst { scrollTop } = viewport;\n\n\t\tconst old_start = start;\n\n\t\tfor (let v = 0; v < rows.length; v += 1) {\n\t\t\theight_map[start + v] = itemHeight || rows[v].offsetHeight;\n\t\t}\n\n\t\tlet i = 0;\n\t\tlet y = 0;\n\n\t\twhile (i < items.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\tif (y + row_height > scrollTop) {\n\t\t\t\tstart = i;\n\t\t\t\ttop = y;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\twhile (i < items.length) {\n\t\t\ty += height_map[i] || average_height;\n\t\t\ti += 1;\n\n\t\t\tif (y > scrollTop + viewport_height) break;\n\t\t}\n\n\t\tend = i;\n\n\t\tconst remaining = items.length - end;\n\t\taverage_height = y / end;\n\n\t\twhile (i < items.length) height_map[i++] = average_height;\n\t\tbottom = remaining * average_height;\n\n\t\t// prevent jumping if we scrolled up into unknown territory\n\t\tif (start < old_start) {\n\t\t\tawait tick();\n\n\t\t\tlet expected_height = 0;\n\t\t\tlet actual_height = 0;\n\n\t\t\tfor (let i = start; i < old_start; i +=1) {\n\t\t\t\tif (rows[i - start]) {\n\t\t\t\t\texpected_height += height_map[i];\n\t\t\t\t\tactual_height += itemHeight || rows[i - start].offsetHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst d = actual_height - expected_height;\n\t\t\tviewport.scrollTo(0, scrollTop + d);\n\t\t}\n\n\t\t// TODO if we overestimated the space these\n\t\t// rows would occupy we may need to add some\n\t\t// more. maybe we can just call handle_scroll again?\n\t}\n\n\t// trigger initial refresh\n\tonMount(() => {\n\t\trows = contents.getElementsByTagName('svelte-virtual-list-row');\n\t\tmounted = true;\n\t});\n</script>\n\n<style>\nsvelte-virtual-list-viewport {\n\tposition: relative;\n\toverflow-y: auto;\n\t-webkit-overflow-scrolling:touch;\n\tdisplay: block;\n}\n\nsvelte-virtual-list-contents, svelte-virtual-list-row {\n\tdisplay: block;\n}\n\nsvelte-virtual-list-row {\n\toverflow: hidden;\n}\n</style>\n\n<svelte-virtual-list-viewport\n\tbind:this={viewport}\n\tbind:offsetHeight={viewport_height}\n\ton:scroll={handle_scroll}\n\tstyle=\"height: {height};\"\n>\n\t<svelte-virtual-list-contents\n\t\tbind:this={contents}\n\t\tstyle=\"padding-top: {top}px; padding-bottom: {bottom}px;\"\n\t>\n\t\t{#each visible as row (row.index)}\n\t\t\t<svelte-virtual-list-row>\n\t\t\t\t<slot item={row.data}>Missing template</slot>\n\t\t\t</svelte-virtual-list-row>\n\t\t{/each}\n\t</svelte-virtual-list-contents>\n</svelte-virtual-list-viewport>\n",
    "<script>\n  import { createEventDispatcher, onDestroy, onMount, tick } from 'svelte'\n  import Icon from '../Icon.svelte'\n  import { chooseAnimation, isEnterKey, isEscKey } from '../../utils'\n  \n  /** Show a header on the dialog with this text\n   * @svelte-prop {String} [message]\n   * */\n  export let title = ''\n\n  /** Text or html message for this dialog\n   * @svelte-prop {String} message\n   * */\n  export let message\n\n  /** Text to show on the confirmation button\n   * @svelte-prop {String} [confirmText=OK]\n   * */\n  export let confirmText = 'OK'\n\n  /** Text to show on the cancel  button\n   * @svelte-prop {String} [cancelText=Cancel]\n   * */\n  export let cancelText = 'Cancel'\n\n  /** Focus on confirm or cancel button when dialog opens\n   * @svelte-prop {String} [focusOn=confirm]\n   * @values <code>confirm</code>, <code>cancel</code>\n   * */\n  export let focusOn = 'confirm'\n\n  /** Show this icon on left-side of dialog. It will use the color from <code>type</code>\n   * @svelte-prop {String} [icon]\n   * */\n  export let icon = ''\n\n  /** Fontawesome icon pack to use. By default the <code>Icon</code> component uses <code>fas</code>\n   * @svelte-prop {String} [iconPack]\n   * @values <code>fas</code>, <code>fab</code>, etc...\n   * */\n  export let iconPack = ''\n\n  /** Show an input field\n   * @svelte-prop {Boolean} [hasInput=false]\n   * */\n  export let hasInput = false\n  \n  export let prompt = null\n\n  /** Show the cancel button. True for <code>confirm()</code>\n   * @svelte-prop {Boolean} [showCancel=false]\n   * */\n  export let showCancel = false\n\n  /** Dialog's size\n   * @svelte-prop {String} [size]\n   * @values $$sizes$$\n   * */\n  export let size = ''\n\n  /** Type (color) to use on confirm button and icon\n   * @svelte-prop {String} [type=is-primary]\n   * @values $$colors$$\n   * */\n  export let type = 'is-primary'\n\n  export let active = true\n\n  /** Animation to use when showing dialog\n   * @svelte-prop {String|Function} [animation=scale]\n   * @values Any transition name that ships with Svelte, or a custom function\n   * */\n  export let animation = 'scale'\n\n  /** Props to pass to animation function\n   * @svelte-prop {Object} [animProps={ start: 1.2 }]\n   * */\n  export let animProps = { start: 1.2 }\n\n  /** Props (attributes) to use to on prompt input element\n   * @svelte-prop {Object} [inputProps]\n   * */\n  export let inputProps = {}\n\n  // export let showClose = true\n  let resolve\n  export let promise = new Promise((fulfil) => (resolve = fulfil))\n  \n  // TODO: programmatic subcomponents\n  export let subComponent = null\n  export let appendToBody = true\n\n  let modal\n  let cancelButton\n  let confirmButton\n  let input\n  let validationMessage = ''\n\n  const dispatch = createEventDispatcher()\n\n  $: _animation = chooseAnimation(animation)\n  $: {\n    if (modal && active && appendToBody) {\n      modal.parentNode.removeChild(modal)\n      document.body.appendChild(modal)\n    }\n  }\n  $: newInputProps = { required: true, ...inputProps }\n\n  onMount(async () => {\n    await tick()\n\n    if (hasInput) {\n      input.focus()\n    } else if (focusOn === 'cancel' && showCancel) {\n      cancelButton.focus()\n    } else {\n      confirmButton.focus()\n    }\n  })\n\n\n  function cancel() {\n    resolve(hasInput ? null : false)\n    close()\n  }\n\n  function close() {\n    resolve(hasInput ? null : false)\n    active = false\n    dispatch('destroyed')\n  }\n\n  async function confirm() {\n    if (input && !input.checkValidity()) {\n      validationMessage = input.validationMessage\n\n      await tick()\n      input.select()\n\n      return\n    }\n\n    validationMessage = ''\n\n    resolve(hasInput ? prompt: true)\n    close()\n  }\n\n  function keydown(e) {\n    if (active && isEscKey(e)) {\n      close()\n    }\n  }\n</script>\n\n<style lang=\"scss\">@keyframes spinAround {\n  from {\n    transform: rotate(0deg); }\n  to {\n    transform: rotate(359deg); } }\n\n.dialog .modal-card {\n  max-width: 460px;\n  width: auto; }\n  .dialog .modal-card .modal-card-head {\n    font-size: 1.25rem;\n    font-weight: 600; }\n  .dialog .modal-card .modal-card-body .field {\n    margin-top: 16px; }\n  .dialog .modal-card .modal-card-body.is-titleless {\n    border-top-left-radius: 6px;\n    border-top-right-radius: 6px; }\n  .dialog .modal-card .modal-card-foot {\n    justify-content: flex-end; }\n    .dialog .modal-card .modal-card-foot .button {\n      display: inline;\n      min-width: 5em;\n      font-weight: 600; }\n  @media screen and (min-width: 769px), print {\n    .dialog .modal-card {\n      min-width: 320px; } }\n\n.dialog.is-small .modal-card,\n.dialog.is-small .input,\n.dialog.is-small .button {\n  border-radius: 2px;\n  font-size: 0.75rem; }\n\n.dialog.is-medium .modal-card,\n.dialog.is-medium .input,\n.dialog.is-medium .button {\n  font-size: 1.25rem; }\n\n.dialog.is-large .modal-card,\n.dialog.is-large .input,\n.dialog.is-large .button {\n  font-size: 1.5rem; }</style>\n\n<svelte:window on:keydown={keydown}></svelte:window>\n<svelte:options accessors/>\n\n{#if active}\n  <div class=\"modal dialog {size} is-active\" bind:this={modal}>\n    <div class=\"modal-background\" on:click={close}></div>\n    <div class=\"modal-card\" transition:_animation={animProps}>\n      {#if title}\n        <header class=\"modal-card-head\">\n          <p class=\"modal-card-title\">{title}</p>\n          <!-- NOTE: don't think we need this... -->\n          <!-- {#if showClose}\n            <button class=\"delete\" aria-label=\"close\" on:click={close}></button>\n          {/if} -->\n        </header>\n      {/if}\n      <section class=\"modal-card-body\" class:is-titleless={!title} class:is-flex={icon}>\n        <div class=\"media\">\n          {#if icon}\n            <div class=\"media-left\">\n              <Icon pack={iconPack} {icon} {type} size=\"is-large\"></Icon>\n            </div>\n          {/if}\n          <div class=\"media-content\">\n            <p>{@html message}</p>\n\n            {#if hasInput}\n              <div class=\"field\">\n                <div class=\"control\">\n                  <input\n                      bind:value={prompt}\n                      class=\"input\"\n                      bind:this={input}\n                      {...newInputProps}\n                      on:keyup={e => isEnterKey(e) && confirm()}>\n                  <p class=\"help is-danger\">{validationMessage}</p>\n                </div>\n              </div>\n            {/if}\n          </div>\n        </div>\n      </section>\n\n      <footer class=\"modal-card-foot\">\n        {#if showCancel}\n          <button\n              class=\"button\"\n              bind:this={cancelButton}\n              on:click={cancel}>\n              {cancelText}\n          </button>\n        {/if}\n        <button\n            class=\"button {type}\"\n            bind:this={confirmButton}\n            on:click={confirm}>\n            {confirmText}\n        </button>\n      </footer>\n    </div>\n  </div>\n{/if}",
    "<script>\n  import { onMount, setContext } from 'svelte'\n  import { omit } from '../utils'\n\n  /** Type (color) of the field and help message. Also adds a matching icon.\n   * @svelte-prop {String} [type]\n   * @values $$colors$$\n   * */\n  export let type = ''\n\n  /** Label for input\n   * @svelte-prop {String} [label]\n   * */\n  export let label = null\n\n  /** Same as native <code>for</code> on label\n   * @svelte-prop {String} [labelFor]\n   * */\n  export let labelFor = ''\n\n  /** Message to show beneath input\n   * @svelte-prop {String} [message]\n   * */\n  export let message = ''\n\n  /** Direct child components/elements of Field will be grouped horizontally\n   * @svelte-prop {Boolean} grouped=false\n   * */\n  export let grouped = false\n\n  /** Allow grouped controls to cover multiple lines\n   * @svelte-prop {Boolean} groupMultiline=false\n   * */\n  export let groupMultiline = false\n\n  /** Alter the alignment of the field\n   * @svelte-prop {String} [position]\n   * @values is-centered, is-right\n   * */\n  export let position = ''\n\n  /** Automatically attach child controls together\n   * @svelte-prop {Boolean} addons=true\n   * */\n  export let addons = true\n\n  export let expanded = false\n\n  setContext('type', () => type)\n\n  let el\n  let labelEl\n  let messageEl\n  let fieldType = ''\n  let hasIcons = false\n  let iconType = ''\n  let mounted = false\n  let newPosition = ''\n\n  // Determine the icon type\n  $: {\n    if (['is-danger', 'is-success'].includes(type)) {\n      iconType = type\n    }\n  }\n\n  $: {\n    if (grouped) fieldType = 'is-grouped'\n    else if (mounted) {\n      const childNodes = Array.prototype.filter.call(el.children, c => !([labelEl, messageEl].includes(c)))\n      if (childNodes.length > 1 && addons) {\n        fieldType = 'has-addons'\n      }\n    }\n  }\n\n  // Update has-addons-* or is-grouped-* classes based on position prop\n  $: {\n    if (position) {\n      const pos = position.split('-')\n      if (pos.length >= 1) {\n        const prefix = grouped ? 'is-grouped-' : 'has-addons-'\n        newPosition = prefix + pos[1]\n      }\n    }\n  }\n\n  $: props = { ...omit($$props, 'addons', 'class', 'expanded', 'grouped', 'label', 'labelFor', 'position', 'type') }\n\n  onMount(() => {\n    mounted = true\n  })\n</script>\n\n<style lang=\"scss\">.field.is-grouped .field {\n  flex-shrink: 0; }\n  .field.is-grouped .field:not(:last-child) {\n    margin-right: 0.75rem; }\n  .field.is-grouped .field.is-expanded {\n    flex-grow: 1;\n    flex-shrink: 1; }</style>\n\n<div {...props} class=\"field {type} {fieldType} {newPosition} {$$props.class || ''}\" class:is-expanded={expanded} class:is-grouped-multiline={groupMultiline} bind:this={el}>\n  {#if label}\n    <label for={labelFor} class=\"label\" bind:this={labelEl}>{label}</label>\n  {/if}\n  <slot statusType={type} />\n  {#if message}\n    <p class=\"help {type}\" bind:this={messageEl}>{message}</p>\n  {/if}\n</div>\n",
    "<script>\n  import { createEventDispatcher, onMount, getContext, tick } from 'svelte'\n  import { omit } from '../utils'\n  import Icon from './Icon.svelte'\n\n  /** Binding value\n   * @svelte-prop {String|Number} [value]\n   * */\n  export let value = ''\n\n  /** Input type, or <code>textarea</code>\n   * @svelte-prop {String} [type=text]\n   * @values Any native type, <code>textarea</code>\n   * */\n  export let type = 'text'\n\n  /** Size of input\n   * @svelte-prop {String} [size]\n   * @values $$sizes$$\n   * */\n  export let size = ''\n\n  /** Makes input full-width when inside a grouped or addon field\n   * @svelte-prop {boolean} expanded=false\n   * */\n  export let expanded = false\n\n  /** Show the password reveal toggle button\n   * @svelte-prop {boolean} passwordReveal=false\n   * */\n  export let passwordReveal = false\n\n  /** Set input maxlength and show a counter\n   * @svelte-prop {Number} [maxlength]\n   * */\n  export let maxlength = null\n\n  /** Show the character counter when <code>maxlength<code> is set\n   * @svelte-prop {boolean} [hasCounter=true]\n   * */\n  export let hasCounter = true\n\n  /** Show loading indicator\n   * @svelte-prop {boolean} [loading=false]\n   * */\n  export let loading = false\n\n  /** Show this icon on left side of input\n   * @svelte-prop {String} [icon]\n   * */\n  export let icon = ''\n\n  /** Fontawesome icon pack to use. By default the <code>Icon</code> component uses <code>fas</code>\n   * @svelte-prop {String} [iconPack]\n   * @values <code>fas</code>, <code>fab</code>, etc...\n   * */\n  export let iconPack = ''\n\n  /** Input is disabled\n   * @svelte-prop {boolean} [disabled=false]\n   * */\n  export let disabled = false\n\n  let input\n  let isFocused\n  let isPasswordVisible = false\n  let newType = 'text'\n  let statusType = ''\n  let statusTypeIcon = ''\n  let valueLength = null\n\n  const dispatch = createEventDispatcher();\n\n  const getType = getContext('type')\n  if (getType) statusType = getType() || ''\n\n  $: props = {\n    ...omit($$props, 'class', 'value', 'type', 'size', 'passwordReveal', 'hasCounter', 'loading', 'disabled'),\n  }\n  $: hasIconLeft = !!icon\n  $: hasIconRight = passwordReveal || loading || statusType\n  $: passwordVisibleIcon = isPasswordVisible ? 'eye-slash' : 'eye'\n  $: {\n    switch (statusType) {\n      case 'is-success':\n        statusTypeIcon = 'check'\n        break\n      case 'is-danger':\n        statusTypeIcon = 'exclamation-circle'\n        break\n      case 'is-info':\n        statusTypeIcon = 'info-circle'\n        break\n      case 'is-warning':\n        statusTypeIcon = 'exclamation-triangle'\n        break\n    }\n  }\n  $: {\n    if (typeof value === 'string') {\n      valueLength = value.length\n    } else if (typeof value === 'number') {\n      valueLength = value.toString().length\n    } else {\n      valueLength = 0\n    }\n  }\n\n  onMount(() => {\n    newType = type\n  })\n\n  async function togglePasswordVisibility() {\n    isPasswordVisible = !isPasswordVisible\n    newType = isPasswordVisible ? 'text' : 'password'\n    await tick()\n    input.focus()\n  }\n\n  const onInput = e => {\n    value = e.target.value\n    $$props.value = value\n\n    dispatch('input', e)\n  }\n  const onFocus = () => (isFocused = true)\n  const onBlur = () => (isFocused = false)\n</script>\n\n<style>\n.control .help.counter {\n  float: right;\n  margin-left: 0.5em;\n}\n</style>\n\n<div class=\"control\" class:has-icons-left={hasIconLeft} class:has-icons-right={hasIconRight} class:is-loading={loading} class:is-expanded={expanded}>\n\n  {#if type !== 'textarea'}\n    <input\n      {...props}\n      type={newType}\n      {value}\n      class=\"input {statusType} {size} {$$props.class || ''}\"\n      bind:this={input}\n      on:input={onInput}\n      on:focus={onFocus}\n      on:blur={onBlur}\n      on:change\n      {disabled} />\n  {:else}\n    <textarea\n      {...props}\n      {value}\n      class=\"textarea {statusType}\n      {size}\"\n      bind:this={input}\n      on:input={onInput}\n      on:focus={onFocus}\n      on:blur={onBlur}\n      on:change\n      {disabled} />\n  {/if}\n\n  {#if icon}\n    <Icon\n      pack={iconPack}\n      isLeft={true}\n      {icon} />\n  {/if}\n\n  {#if !loading && (passwordReveal || statusType)}\n    <!-- pack={iconPack}\n    size={iconSize} -->\n    <Icon\n      pack=\"fas\"\n      isRight={true}\n      isClickable={passwordReveal}\n      icon={passwordReveal ? passwordVisibleIcon : statusTypeIcon}\n      type={!passwordReveal ? statusType : 'is-primary'}\n      on:click={togglePasswordVisibility} />\n  {/if}\n\n  {#if maxlength && hasCounter && type !== 'number'}\n    <small class=\"help counter\" class:is-invisible={!isFocused}>{valueLength} / {maxlength}</small>\n  {/if}\n</div>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n  import { fade } from 'svelte/transition'\n  import Icon from './Icon.svelte'\n\n  export let type = ''\n  export let active = true\n  export let title = ''\n  export let showClose = true\n  export let autoClose = false\n  export let duration = 5000\n  export let size = ''\n  export let iconSize = ''\n  export let ariaCloseLabel = 'delete'\n\n  let icon\n\n  const dispatch = createEventDispatcher()\n\n  if (autoClose) {\n    setTimeout(() => {\n      close = true\n    }, duration)\n  }\n\n  $: newIconSize = iconSize || size || 'is-large'\n\n  $: {\n    switch (type) {\n      case 'is-info':\n        icon = 'info-circle'\n        break\n      case 'is-success':\n        icon = 'check-circle'\n        break\n      case 'is-warning':\n        icon = 'exclamation-triangle'\n        break\n      case 'is-danger':\n        icon = 'exclamation-circle'\n        break\n      default:\n        icon = null\n    }\n  }\n\n  function close() {\n    active = false\n    dispatch('close', active)\n  }\n</script>\n\n<style>\n.message-header {\n  justify-content: space-between;\n}\n\n.message .media {\n  padding-top: 0;\n  border: 0;\n}\n</style>\n\n{#if active}\n  <article class=\"message {type} {size}\" transition:fade|local>\n    {#if title || showClose}\n      <div class=\"message-header\">\n        {#if title}\n          <p>{title}</p>\n        {/if}\n        {#if showClose}\n          <button class=\"delete\" aria-label=\"ariaCloseLabel\" on:click={close} />\n        {/if}\n      </div>\n    {/if}\n    <section class=\"message-body\">\n      <div class=\"media\">\n        {#if icon}\n          <div class=\"media-left\">\n            <Icon {icon} size={newIconSize} />\n          </div>\n        {/if}\n        <div class=\"media-content\">\n          <slot />\n        </div>\n      </div>\n    </section>\n  </article>\n{/if}\n",
    "<script context=\"module\">\n  const allowedProps = ['active', 'position', 'duration'];\n\n  export function filterProps(props) {\n    const newProps = {}\n\n    Object.keys(props).forEach(key => {\n      if (allowedProps.includes(key)) newProps[key] = props[key]\n    })\n\n    return newProps\n  }\n</script>\n\n<script>\n  import { createEventDispatcher, onDestroy, onMount, tick } from 'svelte'\n  import { fly, fade } from 'svelte/transition'\n  import Notices, { notices } from './Notices.svelte'\n\n  const dispatch = createEventDispatcher()\n\n  export let active = true\n  export let position = 'is-top'\n  export let duration = 2000\n  export let transitionOut = true\n\n  let el\n  let parent\n  let timer\n\n  $: transitionY = ~position.indexOf('is-top') ? -200 : 200\n\n  export function close() {\n    active = false\n  }\n\n  function remove() {\n    clearTimeout(timer)\n\n    // Just making sure\n    active = false\n\n    dispatch('destroyed')\n  }\n\n  async function setupContainers() {\n    await tick\n\n    if (!notices.top) {\n      notices.top = new Notices({\n        target: document.body,\n        props: {\n          position: 'top'\n        },\n      });\n    }\n\n    if (!notices.bottom) {\n      notices.bottom = new Notices({\n        target: document.body,\n        props: {\n          position: 'bottom',\n        },\n      });\n    }\n  }\n\n  function chooseParent() {\n    parent = notices.top\n    if (position && position.indexOf('is-bottom') === 0) parent = notices.bottom\n\n    parent.insert(el)\n  }\n\n  onMount(async () => {\n    await setupContainers()\n    chooseParent()\n\n    timer = setTimeout(() => {\n      close()\n    }, duration)\n  })\n</script>\n\n<style lang=\"scss\">.notice {\n  display: inline-flex;\n  pointer-events: auto; }\n  .notice.is-top, .notice.is-bottom {\n    align-self: center; }\n  .notice.is-top-left, .notice.is-bottom-left {\n    align-self: flex-start; }\n  .notice.is-top-right, .notice.is-bottom-right {\n    align-self: flex-end; }</style>\n\n{#if active}\n  <div\n    class=\"notice {position}\"\n    aria-hidden={!active}\n    in:fly={{ y: transitionY }}\n    out:fade={{ duration: transitionOut ? 400 : 0 }}\n    on:outroend={remove}\n    bind:this={el}>\n\n    <slot />\n  </div>\n{/if}\n",
    "<script context=\"module\">\n  export const notices = {}\n</script>\n\n<script>\n  export let position = 'top'\n\n  let container\n  let positionClass\n  $: positionClass = position === 'top' ? 'is-top' : 'is-bottom'\n\n  export function insert(el) {\n    container.insertAdjacentElement('afterbegin', el)\n  }\n</script>\n\n<style lang=\"scss\">.notices {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  padding: 3em;\n  z-index: 1000;\n  pointer-events: none;\n  display: flex; }\n  .notices.is-top {\n    flex-direction: column; }\n  .notices.is-bottom {\n    flex-direction: column-reverse; }\n  .notices :global([class*='has-background-'] .text) {\n    color: transparent !important;\n    filter: invert(1) brightness(2.5) grayscale(1) contrast(9);\n    background: inherit;\n    background-clip: text !important;\n    -webkit-background-clip: text !important; }</style>\n\n<div class=\"notices {positionClass}\" bind:this={container} />\n",
    "<script>\n  import { createEventDispatcher, onDestroy, onMount } from 'svelte'\n  import { fly, fade } from 'svelte/transition'\n  import Icon from '../Icon.svelte'\n  import Notice, { filterProps } from '../Notice.svelte'\n  import { typeToIcon } from '../../utils'\n\n  /** Type (color)\n   * @svelte-prop {String} [type]\n   * @values $$colors$$\n   * */\n  export let type = ''\n\n  /** Whether the notification is visible or not\n   * @svelte-prop {boolean} active=true\n   * */\n  export let active = true\n\n  /** Display an X button that closes the notification\n   * @svelte-prop {boolean} showClose=true\n   * */\n  export let showClose = true\n\n  /** Automatically close the notification after <code>duration</code>. Doesn't apply when opening programmatically\n   * @svelte-prop {boolean} autoClose=false\n   * */\n  export let autoClose = false\n\n  /** Duration notification will remain on screen\n   * @svelte-prop {Number} [duration=2000]\n   * */\n  export let duration = 2000\n\n  /** Show icon on left-side of the notification. If set to <code>true</code>, icon will be determined from <code>type</code> property.\n   * @svelte-prop {String|Boolean} [icon]\n   * */\n  export let icon = ''\n\n  /** Fontawesome icon pack to use. By default the <code>Icon</code> component uses <code>fas</code>\n   * @svelte-prop {String} [iconPack]\n   * @values <code>fas</code>, <code>fab</code>, etc...\n   * */\n  export let iconPack = ''\n\n  /** Label for the close button, to be read by accessibility screenreaders\n   * @svelte-prop {String} [ariaCloseLabel]\n   * */\n  export let ariaCloseLabel = ''\n\n  /** Text for notification, when used programmatically\n   * @svelte-prop {String} message\n   * */\n\n  /** Where the notification will show on the screen when used programmatically\n   * @svelte-prop {String} [position=is-top-right]\n   * @values <code>is-top</code>, <code>is-bottom</code>, <code>is-top-left</code>, <code>is-top-right</code>, <code>is-bottom-left</code>, <code>is-bottom-right</code>\n   * */\n\n  const dispatch = createEventDispatcher()\n\n  let newIcon = ''\n  let timer\n\n  $: {\n    if (icon === true) {\n      newIcon = typeToIcon(type)\n    } else {\n      newIcon = icon\n    }\n  }\n\n  $: {\n    if (active && autoClose) {\n      timer = setTimeout(() => {\n        if (active) close()\n      }, duration)\n    }\n  }\n\n  function close() {\n    active = false\n    if (timer) clearTimeout(timer)\n    dispatch('close', active)\n  }\n</script>\n\n<style lang=\"scss\">.message .media {\n  padding-top: 0;\n  border: 0; }</style>\n\n{#if active}\n  <article class=\"notification {type}\" transition:fade|local>\n    {#if showClose}\n      <button class=\"delete\" aria-label={ariaCloseLabel} on:click={close} />\n    {/if}\n    <div class=\"media\">\n      {#if icon}\n        <div class=\"media-left\">\n          <Icon pack={iconPack} icon={newIcon} size=\"is-large\" />\n        </div>\n      {/if}\n      <div class=\"media-content\">\n        <slot />\n      </div>\n    </div>\n  </article>\n{/if}\n",
    "<script>\n  import { createEventDispatcher, onDestroy, onMount } from 'svelte'\n  import { fly, fade } from 'svelte/transition'\n  import Notice, { filterProps } from '../Notice.svelte'\n  import Notification from './Notification.svelte'\n\n  export let message\n  export let duration = 2000\n  export let position = 'is-top-right'\n\n  $: props = { ...filterProps($$props), duration, position }\n  $: notificationProps = { ...removeNonNoficationProps($$props) }\n\n  function removeNonNoficationProps(props) {\n    const newProps = {}\n\n    const blacklist = ['duration', 'message', 'position']\n\n    Object.keys(props).forEach(key => {\n      if (!blacklist.includes(key)) newProps[key] = props[key]\n    })\n\n    return newProps\n  }\n</script>\n\n<style>\n:global(.notification) {\n  margin: 0.5em 0;\n}\n</style>\n\n<Notice {...props} transitionOut={true}>\n  <Notification {...notificationProps}>\n    {@html message}\n  </Notification>\n</Notice>\n",
    "<script>\n  import { createEventDispatcher, onDestroy, onMount } from 'svelte'\n  import { fly, fade } from 'svelte/transition'\n  import Notice, { filterProps } from '../Notice.svelte'\n\n  /** Text or html message for snackbar\n   * @svelte-prop {String} message\n   * */\n  export let message\n\n  /** Duration snackbar will remain on screen\n   * @svelte-prop {Number} [duration=3500]\n   * */\n  export let duration = 3500\n\n  /** Where the snackbar will show on the screen\n   * @svelte-prop {String} [position=is-bottom-right]\n   * @values <code>is-top</code>, <code>is-bottom</code>, <code>is-top-left</code>, <code>is-top-right</code>, <code>is-bottom-left</code>, <code>is-bottom-right</code>\n   * */\n  export let position = 'is-bottom-right'\n\n  /** Type (color)\n   * @svelte-prop {String} [type=is-dark]\n   * @values $$colors$$\n   * */\n  export let type = 'is-primary'\n\n  /** Background type (any of the Bulma <code>has-background-</code> classes will work)\n   * @svelte-prop {String} [background]\n   * @values <code>has-background-*</code>\n   * */\n  export let background = ''\n\n  export let actionText = 'OK'\n\n  export let onAction = () => {}\n\n  let notice\n\n  function action() {\n    Promise.resolve(onAction())\n      .then(() => notice.close())\n  }\n\n  onMount(() => {\n    if (typeof onAction !== 'function') throw new Error(`onAction ${onAction} is not a function`)\n  })\n\n  // $: newBackground = background\n  $: newType = type && type.replace(/^is-(.*)/, 'has-text-$1')\n  $: props = { ...filterProps($$props), position, duration }\n</script>\n\n<style lang=\"scss\">.snackbar {\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-around;\n  border-radius: 4px;\n  margin: 0.5em 0;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.12), 0 0 6px rgba(0, 0, 0, 0.04);\n  /* super subtle... */\n  pointer-events: auto;\n  min-height: 3em; }\n  .snackbar .text {\n    margin: .5em 1em; }\n  .snackbar .action {\n    margin-left: auto;\n    padding: 0.5em;\n    padding-left: 0; }\n    .snackbar .action .button {\n      font-weight: 600;\n      text-transform: uppercase;\n      background: transparent;\n      border: transparent;\n      position: relative; }\n      .snackbar .action .button:hover::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background: rgba(0, 0, 0, 0.1); }</style>\n\n<Notice {...props} bind:this={notice} transitionOut={true}>\n  <div class=\"snackbar {background}\" class:has-background-dark={!background} role=\"alert\">\n    <div class=\"text\"> <!-- NOTE: this extra div is for dynamic text styling with background-clip -->\n      {@html message}\n    </div>\n\n    {#if actionText}\n      <div class=\"action\" on:click={action}>\n        <button class=\"button {newType}\">{ actionText }</button>\n      </div>\n    {/if}\n  </div>\n</Notice>\n",
    "\n<script>\n  /** Binding for whether the switch to \"on\" or not\n   * @svelte-prop {Any} [checked=false]\n   * */\n  export let checked = false\n\n  /** Type (color of control)\n   * @svelte-prop {String} [type] - Type (color of control)\n   * @values $$colors$$\n   * */\n  export let type = 'is-primary'\n\n  /** Size of switch\n   * @svelte-prop {String} [size]\n   * @values $$sizes$$\n   * */\n  export let size = ''\n\n  /** Whether switch is disabled or not\n   * @svelte-prop {Boolean} [disabled=false]\n   * */\n  export let disabled = false\n\n  let label\n  let input\n\n  $: newBackground = type && type.replace(/^is-(.*)/, 'has-background-$1') || ''\n\n  $: {\n    if (input) {\n      if (disabled) {\n        label.setAttribute('disabled', 'disabled')\n        input.setAttribute('disabled', 'disabled')\n      } else {\n        label.removeAttribute('disabled')\n        input.removeAttribute('disabled')\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\">@keyframes spinAround {\n  from {\n    transform: rotate(0deg); }\n  to {\n    transform: rotate(359deg); } }\n\n.switch {\n  position: relative;\n  cursor: pointer;\n  user-select: none;\n  display: inline-flex; }\n  :global(.switch[disabled]) {\n    opacity: .5;\n    cursor: not-allowed; }\n  .switch input {\n    position: absolute;\n    opacity: 0;\n    left: 0;\n    z-index: -1; }\n    .switch input + .check {\n      display: flex;\n      align-items: center;\n      flex-shrink: 0;\n      width: 2.75em;\n      height: 1.575em;\n      padding: .2em;\n      border-radius: 1em;\n      transition: background .15s ease-out; }\n      .switch input + .check::before {\n        content: \"\";\n        display: block;\n        border-radius: 1em;\n        width: 1.175em;\n        height: 1.175em;\n        background: #f5f5f5;\n        box-shadow: 0 3px 1px 0 rgba(0, 0, 0, 0.05), 0 2px 2px 0 rgba(0, 0, 0, 0.1), 0 3px 3px 0 rgba(0, 0, 0, 0.05);\n        transition: transform .15s ease-out,width .15s ease-out;\n        will-change: transform; }\n    .switch input:not(:checked) + .check {\n      background-color: #b5b5b5 !important; }\n    .switch input:checked + .check {\n      background-color: unset; }\n      .switch input:checked + .check::before {\n        transform: translate3d(100%, 0, 0); }\n  .switch .control-label {\n    padding-left: .5em; }\n  .switch.is-small {\n    border-radius: 2px;\n    font-size: 0.75rem; }\n  .switch.is-medium {\n    font-size: 1.25rem; }\n  .switch.is-large {\n    font-size: 1.5rem; }</style>\n\n<label ref=\"label\" class=\"switch {size}\" bind:this={label}>\n  <input type=\"checkbox\" bind:checked bind:this={input} on:input on:click />\n\n  <div class=\"check {newBackground}\"></div>\n\n  <span class=\"control-label\">\n    <slot/>\n  </span>\n</label>",
    "<script>\n  import { beforeUpdate, setContext, getContext, tick, onMount } from 'svelte'\n  import Icon from '../Icon.svelte'\n\n  /** Label for tab\n   * @svelte-prop {String} label\n   * */\n  export let label\n\n  /** Show this icon on left-side of the tab\n   * @svelte-prop {String} [icon]\n   * */\n  export let icon = ''\n\n  /** Fontawesome icon pack to use. By default the <code>Icon</code> component uses <code>fas</code>\n   * @svelte-prop {String} [iconPack]\n   * @values <code>fas</code>, <code>fab</code>, etc...\n   * */\n  export let iconPack = ''\n\n  let active = false\n\n  let el\n  let index\n  let starting = false\n  let direction = ''\n  let isIn = false\n\n  const tabConfig = getContext('tabs')\n\n  export async function changeTab({ from, to }) {\n    if (from === to) return\n\n    // console.log({ index, from, to }, to === index)\n    if (from === index) {\n      // Transition out\n      direction = index < to ? 'left' : 'right'\n    } else if (to === index) {\n      // Transition in; start at direction when rendered, then remove it\n      // console.log('TRANSITION', { index, to, active })\n      active = true\n      direction = index > from ? 'right' : 'left'\n      // await tick()\n      // direction = ''\n    } else direction = ''\n  }\n\n  function updateIndex() {\n    if (!el) return\n    index = Array.prototype.indexOf.call(el.parentNode.children, el)\n  }\n\n  async function transitionend(event) {\n    // console.log({ index, active, activeTab: tabConfig.activeTab })\n    // console.log(event.target)\n    active = index === tabConfig.activeTab\n    await tick()\n    direction = ''\n  }\n\n  tabConfig.tabs.subscribe(tabs => {\n    updateIndex()\n  })\n\n  onMount(() => {\n    updateIndex()\n\n    tabConfig.tabs.update(tabs => [\n      ...tabs,\n      {\n        index,\n        label,\n        icon,\n        iconPack,\n        activate: () => (active = true),\n        deactivate: () => (active = false),\n        changeTab,\n      },\n    ])\n  })\n\n  beforeUpdate(async () => {\n    if (index === tabConfig.activeTab && direction) {\n      await tick()\n      setTimeout(() => {\n        direction = ''\n      })\n    }\n  })\n</script>\n\n<style lang=\"scss\">.tab {\n  display: none;\n  flex: 1 0 100%; }\n  .tab.is-active {\n    display: inline-block; }</style>\n\n<div\n  class=\"tab {direction}\"\n  class:is-active={active}\n  bind:this={el}\n  aria-hidden={!active}\n  on:transitionend={transitionend}>\n  <slot {label} {iconPack} {icon} />\n</div>\n",
    "<script>\n  import { setContext, getContext, onMount, onDestroy, createEventDispatcher } from 'svelte'\n  import { get, writable } from 'svelte/store'\n  import Icon from '../Icon.svelte'\n\n  const dispatch = createEventDispatcher()\n\n  /** Index of the active tab (zero-based)\n   * @svelte-prop {Number} [value=0]\n   * */\n  export let value = 0\n\n  /** Size of tabs\n   * @svelte-prop {String} [size]\n   * @values $$sizes$$\n   * */\n  export let size = ''\n\n  /** Position of tabs list, horizontally. By default they're positioned to the left\n   * @svelte-prop {String} [position]\n   * @values is-centered, is-right\n   * */\n  export let position = ''\n\n  /** Style of tabs\n   * @svelte-prop {String} [style]\n   * @values is-boxed, is-toggle, is-toggle-rounded, is-fullwidth\n   * */\n  export let style = ''\n\n  export let expanded = false\n\n  let activeTab = 0\n  $: changeTab(value)\n\n  const tabs = writable([])\n\n  const tabConfig = {\n    activeTab,\n    tabs,\n  }\n\n  setContext('tabs', tabConfig)\n\n  // This only runs as tabs are added/removed\n  const unsubscribe = tabs.subscribe(ts => {\n    if (ts.length > 0 && ts.length > value - 1) {\n      ts.forEach(t => t.deactivate())\n      if (ts[value]) ts[value].activate()\n    }\n  })\n\n  function changeTab(tabNumber) {\n    const ts = get(tabs)\n    // NOTE: change this back to using changeTab instead of activate/deactivate once transitions/animations are working\n    if (ts[activeTab]) ts[activeTab].deactivate()\n    if (ts[tabNumber]) ts[tabNumber].activate()\n    // ts.forEach(t => t.changeTab({ from: activeTab, to: tabNumber }))\n    activeTab = tabConfig.activeTab = tabNumber\n    dispatch('activeTabChanged', tabNumber)\n  }\n\n  onMount(() => {\n    changeTab(activeTab)\n  })\n\n  onDestroy(() => {\n    unsubscribe()\n  })\n</script>\n\n<style lang=\"scss\">.tabs-wrapper.is-fullwidth {\n  /* TODO */ }\n\n.tabs-wrapper .tab-content {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  overflow-x: hidden; }</style>\n\n<div class=\"tabs-wrapper\" class:is-fullwidth={expanded}>\n  <nav class=\"tabs {size} {position} {style}\">\n    <ul>\n      {#each $tabs as tab, index}\n        <li class:is-active={index === activeTab}>\n          <a href on:click|preventDefault={() => changeTab(index)}>\n            {#if tab.icon}\n              <Icon pack={tab.iconPack} icon={tab.icon} />\n            {/if}\n\n            <span>{tab.label}</span>\n          </a>\n        </li>\n      {/each}\n    </ul>\n  </nav>\n  <section class=\"tab-content\">\n    <slot />\n  </section>\n</div>\n",
    "<script>\n  import { createEventDispatcher, onDestroy, onMount } from 'svelte'\n  import { fly, fade } from 'svelte/transition'\n  import Notice, { filterProps } from '../Notice.svelte'\n\n  /** Text or html message for toast\n   * @svelte-prop {String} message\n   * */\n  export let message\n\n  /** Duration toast will remain on screen\n   * @name duration\n   * @kind member\n   * @svelte-prop {Number} [duration=2000]\n   * */\n\n  /** Where the toast will show on the screen\n   * @name position\n   * @kind member\n   * @svelte-prop {String} [position=is-top]\n   * @values <code>is-top</code>, <code>is-bottom</code>, <code>is-top-left</code>, <code>is-top-right</code>, <code>is-bottom-left</code>, <code>is-bottom-right</code>\n   * */\n\n  /** Type (color)\n   * @svelte-prop {String} [type=is-dark]\n   * @values $$colors$$\n   * */\n  export let type = 'is-dark'\n\n  /** Background type (any of the Bulma <code>has-background-</code> classes will work)\n   * @svelte-prop {String} [background]\n   * @values <code>has-background-*</code>\n   * */\n  export let background = ''\n\n  $: newBackground = background || type.replace(/^is-(.*)/, 'has-background-$1')\n</script>\n\n<style lang=\"scss\">.toast {\n  text-align: center;\n  padding: 0.75em 1.5em;\n  border-radius: 2em;\n  margin: 0.5em 0;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.12), 0 0 6px rgba(0, 0, 0, 0.04);\n  /* super subtle... */\n  pointer-events: auto; }</style>\n\n<Notice {...filterProps($$props)}>\n  <div class=\"toast {type} {newBackground}\" role=\"alert\">\n    <div class=\"text\"> <!-- NOTE: this extra div is for dynamic text styling with background-clip -->\n      {@html message}\n    </div>\n  </div>\n</Notice>\n",
    "\r\n<script>\r\n  import Simplewave from \"../components/starterpage_animations/Simplewave.svelte\";\r\n  import {windowLoaded} from \"../js/functions\"\r\n</script>\r\n\r\n<style>\r\n\r\n#Home {\r\n  padding: 0;\r\n  margin: 0;\r\n  height: calc(100% - 6rem);\r\n  \r\n}\r\n\r\nh1 {letter-spacing: 2px;}\r\n\r\n.title {font-size: 4em;}\r\n\r\n\r\np {color: black;}\r\n\r\n@media (max-width: 768px) {.title {font-size: 3em;}}\r\n</style>\r\n\r\n<section class=\"section animated fadeIn\" id=\"Home\">\r\n\r\n    {#if $windowLoaded}\r\n    \r\n      {#await window.sleep(500) then value}\r\n        <Simplewave>\r\n\r\n          <svelte:fragment slot=\"header\">\r\n            <h1 class=\"title\">FELion Spectrum Analyser</h1>\r\n            <h1 class=\"subtitle\">To analyse FELIX data for FELion Instrument</h1>\r\n          </svelte:fragment>\r\n\r\n          <svelte:fragment slot=\"footer\">\r\n            <p>Developed at Dr.Br&uuml;nken's group FELion@FELIX | 2021 &copy; AN Marimuthu</p>\r\n          </svelte:fragment>\r\n        </Simplewave>\r\n      {/await}\r\n\r\n    {/if}\r\n\r\n</section>",
    "\r\n<script>\r\n\r\n    import Textfield from '@smui/textfield';\r\n    import CustomSwitch from '../components/CustomSwitch.svelte';\r\n    import Terminal from '../components/Terminal.svelte';\r\n    import Tab, {Label} from '@smui/tab';\r\n\r\n    import TabBar from '@smui/tab-bar';\r\n\r\n\r\n    // Fundamental constants\r\n    \r\n    $: c = 299792458 // m/s\r\n    $: plank_constant = 6.62607004e-34 // Js\r\n    $: boltzman_constant = 1.380649e-23 // J/K\r\n    \r\n    $: electron_charge = 1.602176565e-19 // C or eV = J\r\n\r\n    $: hz = 1e12.toExponential(4);\r\n    $: eV = (plank_constant/electron_charge) * hz;\r\n    $: kelvin = (plank_constant/boltzman_constant) * hz;\r\n\r\n    $: cm_1 = hz/(c*1e2);\r\n    $: um = (c/hz)*1e+6;\r\n\r\n    $: ghz = hz*1e-9\r\n    $: nm = (c/hz)*1e+9\r\n    $: J = plank_constant * hz\r\n    $: edit_constants = false\r\n\r\n    $: edit_numberDensity_constants = false\r\n\r\n    // Number density\r\n\r\n    $: pq1_before = 1e-8\r\n    $: pq1_after = 1e-5\r\n    $: temperature = 5\r\n    \r\n    $: calibration_factor = 205.54\r\n    $: rt = 300\r\n    $: ndensity_temp = calibration_factor/(boltzman_constant*1e4*rt**0.5) * ((pq1_after - pq1_before) / temperature**0.5)\r\n    \r\n\r\n    $: ndensity = ndensity_temp.toExponential(4)\r\n    let active = \"Unit Conversion\"\r\n\r\n    const navItems = [\"Unit Conversion\", \"Terminal\"]\r\n</script>\r\n\r\n<style>\r\n.box { background-color: #6a50ad8a; overflow-y: auto; height: calc(100vh - 12em);}\r\n\r\n* :global(.mdc-text-field--disabled .mdc-text-field__input) {color: #dbdbdb;}\r\n* :global(.mdc-text-field--disabled .mdc-floating-label) {color: #dbdbdb;}\r\n\r\n.unit_converter_column {margin-right: 1em; height: calc(70vh - 4em);}\r\n.contentBox {\r\n\r\n    max-height: 70vh;\r\n    overflow: auto;\r\n    padding-bottom: 1em;\r\n    padding: 1em;\r\n    height: calc(100vh - 12em);\r\n}\r\n\r\n\r\n.unit_conversion_contents {max-height: 75%; overflow: auto;}\r\n\r\n.misc-nav {\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0.5em 0;\r\n    overflow: hidden;\r\n\r\n    height: 4em;\r\n}\r\n\r\n#Misc {padding: 0 2em; height: 75vh;}\r\n\r\n@media(max-width: 768px) {\r\n    #unit_conversion_table {\r\n        max-height: 65vh;\r\n    }\r\n}\r\n\r\n\r\n</style>\r\n\r\n\r\n<section class=\"animated fadeIn section\" id=\"Misc\" style=\"display:none\">\r\n\r\n    <div class=\"misc-nav box animated fadeInDown\" id=\"navbar\" >\r\n        <TabBar tabs={navItems} let:tab bind:active>\r\n            <Tab {tab}> <Label>{tab}</Label> </Tab>\r\n        </TabBar>\r\n    </div>\r\n\r\n    {#if active==\"Unit Conversion\"}\r\n        <div class=\"columns is-multiline contentBox\" id=\"unit_conversion_table\">\r\n\r\n            <div class=\"column box is-4 unit_converter_column\">\r\n\r\n                <div class=\"title\">Energy Conversion</div>\r\n\r\n                <hr>\r\n\r\n                <div class=\"unit_conversion_contents\">\r\n\r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\"  bind:value={hz} label=\"Hz\" />\r\n                \r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\" bind:value={ghz} on:change=\"{()=>hz=(ghz)*1e+9}\" label=\"GHz\" />\r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\" bind:value={um} on:change=\"{()=>hz=(c/um)*1e6}\" label=\"Micron\" />\r\n                \r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\" bind:value={cm_1} on:change=\"{()=>hz=cm_1*c*1e2}\" label=\"cm-1\" />\r\n                \r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\" bind:value={kelvin} on:change=\"{()=>hz=(boltzman_constant/plank_constant)*kelvin}\" label=\"Kelvin\" />\r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\" bind:value={eV} on:change=\"{()=>hz=(electron_charge/plank_constant)*eV}\" label=\"eV\" />\r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\" bind:value={J} on:change=\"{()=>hz=(J/plank_constant)}\" label=\"Joule\" />\r\n                    <Textfield style=\"width:25%; margin-right:0.5em;\" bind:value={nm} on:change=\"{()=>hz=(c/nm)*1e9}\" label=\"nm\" />\r\n\r\n                    <hr>\r\n\r\n                    <div class=\"subtitle is-pulled-left\">Fundamental constants</div>\r\n                    <CustomSwitch style=\"margin: 0 1em;\" bind:selected={edit_constants} label=\"Edit\"/>\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" disabled={!edit_constants} bind:value={c} label=\"Speed of light in vaccum\" />\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" disabled={!edit_constants} bind:value={boltzman_constant} label=\"Boltzman constant\" />\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" disabled={!edit_constants} bind:value={plank_constant} label=\"Plank's constant\" />\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" disabled={!edit_constants} bind:value={electron_charge} label=\"Electric charge\" />\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"column box is-4 unit_converter_column\">\r\n            \r\n                <div class=\"title\">Number Density</div>\r\n                <hr>\r\n\r\n                <div class=\"unit_conversion_contents\">\r\n\r\n                    <div class=\"subtitle\">Main Chamber Press.</div>\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" bind:value={pq1_before} label=\"Before letting in gas\" />\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" bind:value={pq1_after} label=\"After letting in gas\" />\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" bind:value={temperature} label=\"Temperature\" />\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" disabled={true} bind:value={ndensity} label=\"Number density\" />\r\n                    <hr>\r\n                    <CustomSwitch style=\"margin: 0 1em;\" bind:selected={edit_numberDensity_constants} label=\"Edit\"/>\r\n\r\n\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" disabled={!edit_numberDensity_constants} bind:value={calibration_factor} label=\"Calibration Factor\" />\r\n                    <Textfield style=\"width:90%; margin-right:0.5em;\" disabled={!edit_numberDensity_constants} bind:value={rt} label=\"Chamber Temperature (RT)\" />\r\n\r\n                </div>\r\n            \r\n            </div>\r\n\r\n        </div>\r\n    {:else}\r\n        <Terminal />\r\n    {/if}\r\n    \r\n</section>",
    "\r\n<script>\r\n\r\n    // IMPORTING Modules\r\n    import {opoMode, normMethodDatas, Ngauss_sigma, felixopoLocation, felixPlotAnnotations, expfittedLines, expfittedLinesCollectedData, fittedTraceCount, graphDiv, normMethod} from './normline/functions/svelteWritables';\r\n    \r\n    import Layout from \"../components/Layout.svelte\"\r\n    \r\n    import { fade } from 'svelte/transition'\r\n    import CustomRadio from '../components/CustomRadio.svelte';\r\n    import ReportLayout from '../components/ReportLayout.svelte';\r\n    import {onMount, tick} from \"svelte\"\r\n\r\n    import AddFilesToPlot from './normline/modals/AddFilesToPlot.svelte';\r\n    import FrequencyTable from './normline/components/FrequencyTable.svelte';\r\n    import InitFunctionRow from './normline/widgets/preprocessing/InitFunctionRow.svelte';\r\n    \r\n    import OPORow from './normline/widgets/preprocessing/OPORow.svelte';\r\n\r\n\r\n    import TheoryRow from './normline/widgets/preprocessing/TheoryRow.svelte';\r\n    import GetFileInfoTable from './normline/widgets/preprocessing/GetFileInfoTable.svelte';\r\n    import WriteFunctionContents from './normline/widgets/postprocessing/WriteFunctionContents.svelte';\r\n    import ExecuteFunctionContents from './normline/widgets/postprocessing/ExecuteFunctionContents.svelte';\r\n    import {init_tour_normline} from './normline/initTour';\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n    const filetype=\"felix\", id=\"Normline\"\r\n    let fileChecked=[], toggleBrowser = false;\r\n    let currentLocation = db.get(`${filetype}_location`) || \"\"\r\n    $: felixfiles = fileChecked.map(file=>path.resolve(currentLocation, file))\r\n    $: console.log(`${filetype} currentlocation: \\n${currentLocation}`)\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n    // Theory file\r\n    let show_theoryplot = false\r\n    let theoryLocation = db.get(\"theoryLocation\") || currentLocation\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n    let openShell = false;\r\n    let graphPlotted = false, overwrite_expfit = false, writeFile = false\r\n\r\n\r\n    let OPOfilesChecked = []\r\n    \r\n    $: plottedFiles = $opoMode ? OPOfilesChecked.map(file=>file.split(\".\")[0]) || [] : fileChecked.map(file=>file.split(\".\")[0]) || []\r\n    $: output_namelists = [\"averaged\", ...plottedFiles, ...addedfiles.map(file=>path.basename(file)).map(file=>file.split(\".\")[0])]\r\n\r\n    let writeFileName = \"\"\r\n    let keepTable = true;\r\n\r\n    //////// OPO Plot ///////////\r\n    window.getID = () => Math.random().toString(32).substring(2)\r\n    \r\n    const replot = () => {\r\n        if (graphPlotted) {\r\n            let {data, layout} = $normMethodDatas[$normMethod]\r\n            try {\r\n                Plotly.react($graphDiv, data, layout, { editable: true })\r\n                $expfittedLines = $felixPlotAnnotations = $expfittedLinesCollectedData = [], $fittedTraceCount = 0\r\n            } catch (err) {\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // OPO\r\n\r\n    let OPOLocation = db.get(\"ofelix_location\") || currentLocation\r\n    let opofiles = []\r\n    $: $felixopoLocation = $opoMode ? OPOLocation : currentLocation\r\n    $: $opoMode ? window.createToast(\"OPO MODE\", \"warning\") : window.createToast(\"FELIX MODE\")\r\n    $: $Ngauss_sigma = $opoMode ? 2 : 5\r\n    let addFileModal=false, addedFileCol=\"0, 1\", addedFile={}, addedFileScale=1, addedfiles = [], extrafileAdded=0\r\n\r\n    $: console.log(`Extrafile added: ${extrafileAdded}`)\r\n   \r\n    function removeExtraFile() {\r\n\r\n        for(let i=0; i<extrafileAdded+1; i++) {\r\n            try {\r\n\r\n                Plotly.deleteTraces($graphDiv, [-1])\r\n                extrafileAdded--\r\n                addedfiles = addedfiles.slice(0, addedfiles.length-1)\r\n            } catch (err) {console.log(\"The plot is empty\")}\r\n        }\r\n    }\r\n\r\n    let fullfiles = []\r\n    \r\n    $: $opoMode ? fullfiles = [...opofiles, ...addedfiles, path.resolve(currentLocation, \"averaged.felix\")] : fullfiles = [...felixfiles, ...addedfiles, path.resolve(currentLocation, \"averaged.felix\")]\r\n\r\n    const init_tour = async () => {\r\n\r\n        if (!toggleBrowser) {toggleBrowser = true; await sleep(600)} // Filebrowser toggling and its animation time to appear\r\n        await tick() // For all the reactive components to render\r\n        init_tour_normline({filetype})\r\n    }\r\n\r\n    const includePlotsInReport = [\r\n\r\n        {id: \"bplot\", include:true, label:\"Baseline\"}, {id:\"saPlot\", include:false, label:\"SA-Pow\"}, \r\n    \r\n        {id:\"avgplot\", include:false, label:\"Normalised Spectrum\"}, {id:\"exp-theory-plot\", include:false, label:\"Exp-Theory plot\"}, \r\n    \r\n        {id:\"opoplot\", include:false, label:\"OPO: Baseline\"}, {id:\"opoSA\", include:false, label:\"OPO: SA-pow\"}, \r\n        {id:\"opoRelPlot\", include:false, label:\"OPO: Normalised Spectrum\"}\r\n    ]\r\n\r\n    const includeTablesInReports = [\r\n\r\n        {id:\"felixTable\", include:true, label:\"Freq. table\"}, {id:\"felix_filedetails_table\", include:false, label:\"File info table\"}\r\n    ]\r\n    \r\n    let preModal = {};\r\n    \r\n    onMount(()=>{  console.log(\"Normline mounted\") })\r\n    const graphDivIds = [\"exp-theory-plot\", \"bplot\", \"saPlot\", \"avgplot\", \"opoplot\", \"opoSA\", \"opoRelPlot\"]\r\n\r\n    let graphWidth;\r\n\r\n    $: if(graphPlotted&&graphWidth) {\r\n\r\n        graphDivIds.forEach(id=>{\r\n            const content = document.getElementById(id).innerHTML\r\n            if(content){ Plotly.relayout(id, {width:graphWidth}) }\r\n        })\r\n\r\n    }\r\n\r\n    \r\n</script>\r\n\r\n<style>\r\n.felixPlot > div {margin-bottom: 1em;}\r\n</style>\r\n\r\n\r\n<!-- Modals -->\r\n<AddFilesToPlot {fileChecked} bind:extrafileAdded bind:active={addFileModal} bind:addedFileCol bind:addedFileScale bind:addedfiles bind:addedFile bind:preModal />\r\n\r\n<!-- Layout -->\r\n<Layout bind:preModal {filetype} {graphPlotted} {id} bind:currentLocation bind:fileChecked bind:toggleBrowser on:tour={init_tour} >\r\n\r\n    <svelte:fragment slot=\"buttonContainer\">\r\n        <InitFunctionRow {removeExtraFile} {opofiles} {felixfiles} normMethod={$normMethod} {theoryLocation} bind:preModal bind:graphPlotted bind:show_theoryplot/>\r\n\r\n        <OPORow {removeExtraFile} bind:OPOLocation bind:OPOfilesChecked bind:opofiles bind:preModal bind:graphPlotted />\r\n        <TheoryRow bind:theoryLocation bind:show_theoryplot bind:preModal normMethod={$normMethod} />\r\n        <div style=\"display:flex;\">\r\n            <CustomRadio on:change={replot} bind:selected={$normMethod} options={[\"Log\", \"Relative\", \"IntensityPerPhoton\"]}/>\r\n            \r\n        </div>\r\n        \r\n    </svelte:fragment>\r\n\r\n    <svelte:fragment slot=\"plotContainer\" >\r\n\r\n        <!-- Get file info functions -->\r\n        <GetFileInfoTable {felixfiles} normMethod={$normMethod} />\r\n        \r\n        <!-- Plots container -->\r\n\r\n        <div class=\"felixPlot\" id=\"plot_container__div__{filetype}\">\r\n            <div class=\"animated fadeIn\" class:hide={!show_theoryplot} id=\"exp-theory-plot\"></div>\r\n            <div id=\"bplot\" bind:clientWidth={graphWidth}></div>\r\n            <div id=\"saPlot\"></div>\r\n            <div id=\"avgplot\"></div>\r\n            <div class=\"animated fadeIn\" class:hide={!$opoMode} id=\"opoplot\"></div>\r\n            <div class=\"animated fadeIn\" class:hide={!$opoMode} id=\"opoSA\"></div>\r\n            <div class=\"animated fadeIn\" class:hide={!$opoMode} id=\"opoRelPlot\"></div>\r\n        </div>\r\n    </svelte:fragment>\r\n\r\n    <svelte:fragment slot=\"plotContainer_functions\" >\r\n\r\n        <!-- Write function buttons -->\r\n\r\n        <WriteFunctionContents on:addfile=\"{()=>{addFileModal=true}}\" on:removefile={removeExtraFile} {output_namelists} bind:writeFileName bind:writeFile bind:overwrite_expfit />\r\n\r\n        <!-- Execute function buttons -->\r\n        <ExecuteFunctionContents {addedFileScale} {addedFileCol} normMethod={$normMethod} {writeFileName} {writeFile} {overwrite_expfit} {fullfiles} bind:preModal />\r\n\r\n    </svelte:fragment>\r\n\r\n    <svelte:fragment slot=\"plotContainer_reports\">\r\n\r\n        <!-- Frequency table list -->\r\n        <FrequencyTable bind:keepTable/>\r\n\r\n        <!-- Report -->\r\n        <ReportLayout bind:currentLocation={currentLocation} id={`${filetype}_report`} {includePlotsInReport} {includeTablesInReports} />\r\n    </svelte:fragment>\r\n\r\n</Layout>",
    "\r\n<script>\r\n    import Textfield from '@smui/textfield'\r\n    import HelperText from '@smui/textfield/helper-text/index';\r\n    import Checkbox from '@smui/checkbox';\r\n    import FormField from '@smui/form-field';\r\n    import {browse} from \"../components/Layout.svelte\";\r\n    import CustomDialog from \"../components/CustomDialog.svelte\";\r\n    import PreModal from \"../components/PreModal.svelte\";\r\n\r\n    const writePowfile = () => {\r\n        let contents = `${initContent}\\n${powerfileContent}`\r\n\r\n        fs.writeFile(powfile, contents , function(err) {\r\n            if(err) { return window.createToast(\"Power file couldn't be saved.\", \"danger\") }\r\n            window.createToast(\"Power file saved\", \"success\")\r\n        })\r\n    }\r\n\r\n    \r\n    async function savefile() {\r\n        if (location.length == 0) { return openFolder({save:true}) }\r\n        const overwrite = await fs.existsSync(powfile)\r\n        overwrite ? overwrite_dialog.open() : writePowfile()\r\n    }\r\n\r\n    function openFolder({save=false}={}) {\r\n        browse({dir:true})\r\n            .then(result=>{\r\n                if (!result.canceled) {\r\n                    location = result.filePaths[0]\r\n                    db.set(\"powerfile_location\", location)\r\n                    window.createToast(\"Location updated\", \"success\")\r\n                    if (save) savefile()\r\n\r\n                }\r\n            \r\n            }).catch(err=>{preModal.modalContent = err.stack; preModal.open=true})\r\n    \r\n    }\r\n\r\n    let powerfileContent = '', felixHz = 10, felixShots = 16, convert = null;\r\n\r\n\r\n    let location = db.get(\"powerfile_location\") || \"\";\r\n    \r\n    let overwrite_dialog;\r\n    let today = new Date();\r\n\r\n    const dd = String(today.getDate()).padStart(2, '0')\r\n    const mm = String(today.getMonth() + 1).padStart(2, '0')\r\n    const yy = today.getFullYear().toString().substr(2)\r\n\r\n    let filename = `${dd}_${mm}_${yy}-#`;\r\n    $: powfile = path.resolve(location, `${filename}.pow`)\r\n    $: conversion = \"_no_\"\r\n    $: convert ? conversion = \"_\" : conversion = \"_no_\"\r\n    $: initContent = `#POWER file\\n` +\r\n        `# ${felixHz} Hz FELIX\\n` +\r\n        `#SHOTS=${felixShots}\\n` +\r\n        `#INTERP=linear\\n` +\r\n\r\n        `#    IN${conversion}UM (if one deletes the no the firs number will be in \\mu m\\n` +\r\n        `# wavelength/cm-1      energy/pulse/mJ\\n`\r\n\r\n    \r\n\r\n    const handleOverwrite = (e) => {\r\n        let action = e.detail.action\r\n        if (action === \"Cancel\" || action === \"close\") window.createToast(\"Powerfile saving cancelled\", \"warning\")\r\n        if (action === \"Yes\") writePowfile()\r\n    }\r\n\r\n    let preModal = {};\r\n</script>\r\n\r\n<style>\r\n.section {max-height: 70vh;overflow-y: auto;}\r\n\r\n.main__container {\r\n    display: grid; \r\n    height: 100%;\r\n\r\n    grid-row-gap: 1em;\r\n    margin: auto;\r\n    width: 90%;\r\n}\r\n.grid_column__container {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-column-gap: 1em;\r\n}\r\n.location__bar {\r\n    grid-template-columns: 1fr 10fr;\r\n}\r\n\r\n.file__details__bar {\r\n    grid-template-columns: repeat(4, 1fr);\r\n}\r\n\r\n.power_value__container {\r\n    display: grid;\r\n    grid-template-rows: 12fr 1fr 2fr;\r\n}\r\n\r\n</style>\r\n\r\n<PreModal bind:preModal />\r\n\r\n<CustomDialog id=\"powerfile-overwrite\" bind:dialog={overwrite_dialog} on:response={handleOverwrite}\r\n    title={\"Overwrite?\"} content={`${filename} already exists. Do you want to overwrite it?`}/>\r\n    \r\n\r\n<section class=\"section\" id=\"Powerfile\" style=\"display:none\">\r\n    <div class=\"box main__container\" id=\"powfileContainer\">\r\n\r\n        <div class=\"grid_column__container location__bar\">\r\n            <button class=\"button is-link\" on:click={openFolder}>Browse</button>\r\n            <Textfield  bind:value={location} label=\"Current Location\" />\r\n        </div>\r\n\r\n        <div class=\"grid_column__container file__details__bar\">\r\n            <Textfield bind:value={filename} label=\"Filename\" />\r\n            <Textfield bind:value={felixShots} label=\"FELIX Shots\" on:change={()=>{console.log(felixShots)}}/>\r\n            <Textfield bind:value={felixHz} label=\"FELIX Hz\" />\r\n            <FormField>\r\n                <Checkbox bind:checked={convert} indeterminate={convert === null} />\r\n                <span slot=\"label\">Convert to &micro;m</span>\r\n            </FormField>\r\n        </div>\r\n\r\n        <div class=\"power_value__container\">\r\n            <Textfield textarea bind:value={powerfileContent} label=\"Powerfile contents\" \r\n                input$aria-controls=\"powercontent_help\" input$aria-describedby=\"powercontent_help\"/>\r\n            <HelperText id=\"powercontent_help\">Enter powerfile measured for {filename}.felix file (wavenumber power-in mJ)</HelperText>\r\n            <button class=\"button is-success\" style=\"width:12em;margin-left: auto;\" on:click={savefile}>Save</button>\r\n        </div>\r\n        \r\n    \r\n    </div>\r\n</section>",
    "<script>\r\n\r\n    // Importing modules\r\n    import {pythonpath, pythonscript, pyVersion, github, backupName, developerMode} from \"./settings/svelteWritables\";\r\n    import {activateChangelog} from \"../js/functions\"\r\n    import Textfield from '@smui/textfield';\r\n    import {onMount} from \"svelte\";\r\n    import { fade } from 'svelte/transition';\r\n    import CustomDialog from \"../components/CustomDialog.svelte\"\r\n    import CustomSelect from '../components/CustomSelect.svelte';\r\n    import PreModal from \"../components/PreModal.svelte\";\r\n    import Changelog from \"../components/Changelog.svelte\";\r\n\r\n    import {download} from \"./settings/donwloadUpdate\";\r\n    \r\n    import {InstallUpdate} from \"./settings/installUpdate\";\r\n    \r\n    import { Button, Message, Snackbar } from 'svelma'\r\n\r\n    \r\n    import {updateCheck} from \"./settings/updateCheck\";\r\n    import {resetPyConfig, updatePyConfig} from \"./settings/checkPython\";\r\n    import {backupRestore} from \"./settings/backupAndRestore\";\r\n    import {tick} from \"svelte\";\r\n    import Terminal from '../components/Terminal.svelte';\r\n\r\n    const backup = (event) => {\r\n        backupRestore({event, method:\"backup\"})\r\n            .then(()=>console.log(\"Backup Completed\"))\r\n            .catch((err)=>{preModal.modalContent = err; preModal.open = true})\r\n    }\r\n\r\n    const restore = (event) => {\r\n        backupRestore({event, method:\"restore\"})\r\n        .then(()=>console.log(\"Restore Completed\"))\r\n        .catch((err)=>{preModal.modalContent = err; preModal.open = true})\r\n\r\n    }\r\n\r\n    let selected = \"Update\"\r\n    \r\n    const navigate = (e) => {selected = e.target.innerHTML}\r\n\r\n    let pythonpathCheck;\r\n\r\n    \r\n    onMount(()=>{\r\n        setTimeout(async ()=>{\r\n\r\n            await tick()\r\n            checkPython()\r\n                .then(res=>{ $pyVersion = res; console.log(\"Python path is valid\")})\r\n\r\n                .catch(()=>pythonpathCheck.open() )\r\n\r\n            } , 1000)\r\n\r\n\r\n        updateCheck({info:false})\r\n        const timer_for_update = setInterval(()=>{updateCheck({info:false})}, 1*1000*60*15)\r\n        return ()=>{clearInterval(timer_for_update)}\r\n\r\n    })\r\n\r\n    const handlepythonPathCheck = () => { console.log(\"Python path checking done\") }\r\n    const update = async () => {\r\n\r\n        try {\r\n            const updateFolder = path.resolve(__dirname, \"..\", \"update\")\r\n            let target = document.getElementById(\"updateBtn\")\r\n            target.classList.toggle(\"is-loading\")\r\n            if (!fs.existsSync(updateFolder)) {fs.mkdirSync(updateFolder)}\r\n            await download(updateFolder)\r\n            InstallUpdate(target, updateFolder)\r\n        } catch (err) {preModal.modalContent = err.stack; preModal.open = true}\r\n        \r\n    }\r\n\r\n    let preModal = {};\r\n    let commandToRun = \"\", commandArgsToRun = \"\";\r\n\r\n    \r\n    // $: if(!$developerMode) {\r\n    //     console.log(\"Setting default pathon path\")\r\n    //     $pythonpath = path.resolve(__dirname, \"../python3/python\")\r\n    //     $pythonscript = path.resolve(__dirname, \"assets/python_files\")\r\n    // } else {\r\n    //     window.showStackContext({title:\"Warning\", text:\"If python path is invalid, the program might not work\", type:\"error\"});\r\n\r\n    // }\r\n\r\n    $: if($developerMode) {window.showStackContext({title:\"Warning\", text:\"If python path is invalid, the program might not work\", type:\"error\"});}\r\n\r\n    \r\n    $: if($github.branch === \"developer\") {\r\n        window.showStackContext({title:\"Warning\", text:\"Developer channel may not be stable and contains bugs.\", type:\"error\"});\r\n\r\n    }\r\n\r\n</script>\r\n\r\n\r\n<style lang=\"scss\">section {\n  margin: 0;\n  padding: 0; }\n\n.side-panel, .main-panel {\n  height: calc(100vh - 7em); }\n\n.box {\n  background-color: #6a50ad8a; }\n\n.main-panel {\n  margin: 0 5em; }\n\n.left .title {\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  padding: 0.5em;\n  text-align: center;\n  font-size: larger;\n  cursor: pointer;\n  margin-bottom: 1em;\n  border-radius: 20px; }\n\n.clicked {\n  border-left: 2px solid #fafafa;\n  border: solid 1px; }\n\n* :global(option) {\n  color: black; }\n\n.container {\n  padding: 2em;\n  display: grid; }\n\n.container .left {\n  place-content: center; }\n\n.right.title {\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  border-bottom: solid;\n  margin-bottom: 2em;\n  padding-bottom: 0.2em;\n  width: fit-content; }</style>\r\n<PreModal bind:preModal />\r\n<CustomDialog id=\"pythonpath_Check\" bind:dialog={pythonpathCheck} on:response={handlepythonPathCheck} title={\"Python path is not valid\"} content={\"Change it in Settings --> Configuration\"} label1=\"Okay\" label2=\"Cancel\" />\r\n\r\n<Changelog  />\r\n\r\n<section class=\"section animated fadeIn\" id=\"Settings\" style=\"display:none\">\r\n\r\n    <div class=\"columns\">\r\n        <div class=\"column side-panel is-2-widescreen is-3-desktop is-4-tablet box adjust-right\">\r\n\r\n            <div class=\"container left\">\r\n                <div class=\"title nav hvr-glow\" class:clicked={selected===\"Configuration\"} on:click={navigate}>Configuration</div>\r\n                <div class=\"title nav hvr-glow\" class:clicked={selected===\"Update\"} on:click={navigate}>Update</div>\r\n                <div class=\"title nav hvr-glow\" class:clicked={selected===\"Terminal\"} on:click={navigate}>Terminal</div>\r\n                <div class=\"title nav hvr-glow\" class:clicked={selected===\"About\"} on:click={navigate}>About</div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"column main-panel box\">\r\n\r\n            <div class=\"container right\" id=\"Settings_right_column\">\r\n\r\n                <div class=\"content animated fadeIn\" class:hide={selected!==\"Configuration\"}>\r\n                    <h1 class=\"title\">Configuration</h1>\r\n                    <div class=\"subtitle\">{$pyVersion}</div>\r\n\r\n                    <button class=\"button is-link\" on:click=\"{()=>$developerMode = !$developerMode}\">Developer mode: {$developerMode} </button>\r\n                    {#if $developerMode}\r\n                         <!-- content here -->\r\n                        <Textfield style=\"margin-bottom:1em;\" bind:value={$pythonpath} label=\"Python path\" />\r\n                        <Textfield style=\"margin-bottom:1em;\" bind:value={$pythonscript} label=\"Python script path\" />\r\n                        <button class=\"button is-link\" on:click={resetPyConfig}>Reset</button>\r\n                        <button class=\"button is-link\" on:click={updatePyConfig}>Save</button>\r\n                    {/if}\r\n                </div>\r\n\r\n                <div class=\"content animated fadeIn\" class:hide={selected!==\"Update\"}>\r\n                    <h1 class=\"title\">Update</h1>\r\n\r\n                    <div class=\"subtitle\">Current Version {window.currentVersion}</div>\r\n                    <div class=\"content\">\r\n                        <Textfield style=\"width:7em; margin-right:2em;\" bind:value={$github.username} label=\"Github username\" />\r\n                        <Textfield style=\"width:7em; margin-right:2em;\" bind:value={$github.repo} label=\"Github Repo\" />\r\n                        <CustomSelect bind:picked={$github.branch} label=\"Github branch\" options={[\"master\", \"developer\"]}/>\r\n                    </div>\r\n\r\n                    <div class=\"content\">\r\n                        <button class=\"button is-link\" id=\"updateCheckBtn\" on:click=\"{updateCheck}\" on:update={update}>Check update</button>\r\n                        <button class=\"button is-link\" id=\"updateBtn\" on:click={update}>Update</button>\r\n                        \r\n                        <button class=\"button is-warning\" on:click=\"{()=>{$activateChangelog = true}}\">What's New</button>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"content\">\r\n                        <Textfield style=\"width:30%; margin-right:2em;\" bind:value={$backupName} label=\"Github username\" />\r\n                        <button class=\"button is-link\" on:click={backup}>Backup</button>\r\n                        <button class=\"button is-link\" on:click={restore}>Restore</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"content animated fadeIn\" class:hide={selected!==\"Terminal\"}>\r\n                    <h1 class=\"title\">Terminal</h1>\r\n                    <Terminal bind:commandToRun bind:commandArgsToRun id=\"Terminal-settings\"/>\r\n                </div>\r\n                \r\n                <div class=\"content animated fadeIn\" class:hide={selected!==\"About\"}>\r\n                    <h1 class=\"title\">About</h1>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</section>",
    "\r\n<script>\r\n    import {dataTable_avg, dataTable, expfittedLinesCollectedData, avgfittedLineCount} from '../functions/svelteWritables';\r\n    import DataTable, {Head, Body, Row, Cell} from '@smui/data-table';\r\n    import {Icon} from '@smui/icon-button';\r\n    import CustomCheckbox from '../../../components/CustomCheckbox.svelte';\r\n    export let keepTable=true;\r\n\r\n    const dataTableHead = [\"Filename\", \"Frequency (cm-1)\", \"Amplitude\", \"FWHM\", \"Sigma\"]\r\n\r\n    let show_dataTable_only_weighted_averaged = false, show_dataTable_only_averaged = false\r\n    $: dataTable_weighted_avg = $dataTable_avg.filter(file=> file.name == \"weighted_mean\")\r\n    $: console.log(\"dataTable\", $dataTable)\r\n    $: console.log(\"dataTable_avg\", $dataTable_avg)\r\n\r\n    $: console.log(\"dataTable_weighted_avg\", dataTable_weighted_avg)\r\n\r\n    function clearTable() {\r\n        $dataTable=$dataTable_avg=[]; \r\n        $avgfittedLineCount=0; \r\n        $expfittedLinesCollectedData=[];\r\n        window.createToast(\"Table cleared\", \"warning\")\r\n    }\r\n</script>\r\n\r\n\r\n<style>\r\n.dataTable { display: flex; justify-content: center; }\r\n.notification {width: 100%; border: 1px solid;}\r\n\r\n</style>\r\n\r\n<div class=\"content\">\r\n    <div class=\"title notification is-link\">Frequency table</div>\r\n    <CustomCheckbox bind:selected={show_dataTable_only_averaged} label=\"Only Averaged\" />\r\n\r\n    <CustomCheckbox bind:selected={show_dataTable_only_weighted_averaged} label=\"Only weighted Averaged\" />\r\n    <CustomCheckbox bind:selected={keepTable} label=\"Keep table\" />\r\n\r\n    <button class=\"button is-danger is-pulled-right\" on:click=\"{clearTable}\">Clear Table</button>\r\n</div>\r\n\r\n <div class=\"dataTable\" >\r\n    <DataTable table$aria-label=\"felix-tableAriaLabel\" table$id=\"felixTable\" id=\"felixTableContainer\" class=\"tableContainer\">\r\n\r\n        <Head >\r\n            <Row>\r\n                <Cell style=\"width: 2em;\"></Cell>\r\n                {#each dataTableHead as item}\r\n                    <Cell>{item}</Cell>\r\n                {/each}\r\n                <Cell style=\"width: 2em;\"></Cell>\r\n            </Row>\r\n        </Head>\r\n        <Body>\r\n            {#if show_dataTable_only_weighted_averaged}\r\n                {#each dataTable_weighted_avg as table, index (table.id)}\r\n                    <Row>\r\n                        <Cell style=\"width: 2em;\">{index}</Cell>\r\n                        <Cell>Line #{index}</Cell>\r\n                        <Cell>{table.freq}</Cell>\r\n                        <Cell>{table.amp}</Cell>\r\n                        <Cell>{table.fwhm}</Cell>\r\n                        <Cell>{table.sig}</Cell>\r\n                        <Cell style=\"background: #f14668; cursor: pointer;\">\r\n                            <Icon id=\"{table.id}\" class=\"material-icons\" \r\n                                on:click=\"{(e)=> {dataTable_weighted_avg = window._.filter(dataTable_weighted_avg, (tb)=>tb.id != e.target.id)}}\">close</Icon>\r\n                        </Cell>\r\n                    </Row>\r\n                {/each}\r\n            {:else if show_dataTable_only_averaged && !show_dataTable_only_weighted_averaged}\r\n                {#each $dataTable_avg as table, index (table.id)}\r\n                    <Row>\r\n                        <Cell style=\"width: 2em;\">{index}</Cell>\r\n                        <Cell>{table.name}</Cell>\r\n                        <Cell>{table.freq}</Cell>\r\n                        <Cell>{table.amp}</Cell>\r\n                        <Cell>{table.fwhm}</Cell>\r\n                        <Cell>{table.sig}</Cell>\r\n                        <Cell style=\"background: #f14668; cursor: pointer; width: 2em;\">\r\n                            <Icon id=\"{table.id}\" class=\"material-icons\" \r\n                                on:click=\"{(e)=> {$dataTable_avg = window._.filter($dataTable_avg, (tb)=>tb.id != e.target.id)}}\">close</Icon>\r\n                        </Cell>\r\n                    </Row>\r\n                {/each}\r\n            {:else}\r\n\r\n                {#each $dataTable as table, index (table.id)}\r\n                    <Row style=\"background-color: {table.color};\" class={table.className}>\r\n                        <Cell style=\"width: 2em;\">{index}</Cell>\r\n                        <Cell>{table.name}</Cell>\r\n                        <Cell>{table.freq}</Cell>\r\n                        <Cell>{table.amp}</Cell>\r\n                        <Cell>{table.fwhm}</Cell>\r\n                        <Cell>{table.sig}</Cell>\r\n                        <Cell style=\"background: #f14668; cursor: pointer;\">\r\n                            <Icon id=\"{table.id}\" class=\"material-icons\" \r\n                                on:click=\"{(e)=> {$dataTable = window._.filter($dataTable, (tb)=>tb.id != e.target.id)}}\">close</Icon>\r\n                        </Cell>\r\n                    </Row>\r\n                {/each}\r\n            {/if}\r\n        </Body>\r\n\r\n    </DataTable>\r\n</div>",
    "\r\n\r\n<script>\r\n    import {felixopoLocation} from '../functions/svelteWritables';\r\n    import CustomCheckList from '../../../components/CustomCheckList.svelte';\r\n    import Textfield from '@smui/textfield';\r\n    import CustomCheckbox from '../../../components/CustomCheckbox.svelte';\r\n    import { createEventDispatcher } from 'svelte';\r\n    import { fade } from 'svelte/transition';\r\n\r\n    export let felixPlotWidgets, theoryLocation;\r\n    const dispatch = createEventDispatcher();\r\n\r\n    let felixPlotCheckboxes = [];\r\n    \r\n    let reload = false\r\n\r\n    function refreshFunction() {\r\n\r\n\r\n        let datlocation = path.resolve($felixopoLocation, \"../EXPORT\")\r\n        let datfiles = fs.existsSync(datlocation) ? fs.readdirSync(datlocation).filter(f=>f.endsWith(\".dat\")).map(f=>f={name:f, id:getID()}) : [{name:\"\", id:getID()}]\r\n        let calcfiles = fs.existsSync(theoryLocation) ? fs.readdirSync(theoryLocation).map(f=>f={name:f, id:getID()}) : [{name:\"\", id:getID()}]\r\n\r\n        felixPlotCheckboxes = [\r\n                {label:\"DAT file\", options:datfiles, selected:[], style:\"width:100%;\", id:getID()},\r\n                {label:\"Fundamentals\", options:calcfiles, selected:[], style:\"width:25%; margin-left:1em;\", id:getID()},\r\n                {label:\"Overtones\", options:calcfiles, selected:[], style:\"width:25%; margin-left:1em;\", id:getID()},\r\n                {label:\"Combinations\", options:calcfiles, selected:[], style:\"width:25%; margin-left:1em;\", id:getID()},\r\n            ]\r\n\r\n        reload != reload\r\n\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n.felix_tkplot_filelist_header {\r\n    border: solid 1px white;\r\n    width: 10em;\r\n    padding: 0.2em;\r\n    display: flex;\r\n    justify-content: center;\r\n    border-radius: 20px;\r\n\r\n    margin: auto;\r\n\r\n}\r\n.felix_tkplot_filelist_div {\r\n    margin-bottom:1em;\r\n}\r\n\r\n\r\n.felix_plotting_div {\r\n\r\n    border: solid 1px white;\r\n    border-radius: 20px;\r\n    \r\n    padding: 1em;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    justify-content: center;\r\n\r\n    margin: 1em 0;\r\n}\r\n\r\n</style>\r\n\r\n<div >\r\n\r\n    <div style=\"display:flex; flex-wrap:wrap;\" use:refreshFunction>\r\n        <button class=\"button is-link\" on:click={refreshFunction}>Reload</button>\r\n\r\n        {#key reload}\r\n\r\n            {#each felixPlotCheckboxes as {label, options, selected, style, id}(id)}\r\n\r\n                <div style=\"flex-grow:1; {style}\" class=\"felix_tkplot_filelist_div\" transition:fade>\r\n                    <div class=\"subtitle felix_tkplot_filelist_header\">{label}</div>\r\n\r\n                    <CustomCheckList style=\"background: #836ac05c; border-radius: 20px; margin:1em 0;  height:20em; overflow:auto;\" bind:fileChecked={selected} bind:items={options} />\r\n\r\n                </div>\r\n            {/each}\r\n        {/key}\r\n\r\n    </div>\r\n\r\n    <div class=\"felix_plotting_div\">\r\n\r\n        <h1 class=\"subtitle\">Text Widgets</h1>\r\n        <div class=\"widgets\">\r\n\r\n            {#each felixPlotWidgets.text as {label, value, id}(id)}\r\n\r\n                <Textfield style=\"width:12em; margin-bottom:1em;\" variant=\"outlined\" type=\"text\" bind:value {label}/>\r\n\r\n            {/each}\r\n\r\n        </div>\r\n        <button class=\"button is-link\" on:click=\"{()=>{dispatch(\"addWidget\", {type:\"text\"})}}\">Add widget</button>\r\n\r\n    </div>\r\n\r\n    <div class=\"felix_plotting_div\">\r\n\r\n        <h1 class=\"subtitle\">Number Widgets</h1>\r\n        <div class=\"widgets\">\r\n            {#each felixPlotWidgets.number as {label, value, step, id}(id)}\r\n                <Textfield style=\"width:12em; margin-bottom:1em;\" type=\"number\" {step} bind:value {label}/>\r\n\r\n            {/each}\r\n        </div>\r\n        <button class=\"button is-link\" on:click=\"{()=>{dispatch(\"addWidget\", {type:\"number\"})}}\">Add widget</button>\r\n\r\n    </div>\r\n\r\n    <div class=\"felix_plotting_div\">\r\n    \r\n        <h1 class=\"subtitle\">Boolean Widgets</h1>\r\n        <div class=\"widgets\">\r\n            {#each felixPlotWidgets.boolean as {label, value, id}(id)}\r\n                <CustomCheckbox style=\"width:12em; margin-bottom:1em;\" bind:selected={value} {label} />\r\n            {/each}\r\n        </div>\r\n        <button class=\"button is-link\" on:click=\"{()=>{dispatch(\"addWidget\", {type:\"boolean\"})}}\">Add widget</button>\r\n    </div>\r\n\r\n\r\n    \r\n</div>",
    "\r\n<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n    import {browse} from \"../../components/Layout.svelte\";\r\n    import Textfield from '@smui/textfield';\r\n    import {fade} from \"svelte/transition\";\r\n    import SeparateWindow from '../../components/SeparateWindow.svelte';\r\n\r\n    import CustomCheckbox from \"../../components/CustomCheckbox.svelte\";\r\n    import CustomSelect from \"../../components/CustomSelect.svelte\";\r\n    import EditCoefficients from './EditCoefficients.svelte';\r\n\r\n\r\n    export let active=false;\r\n    const dispatch = createEventDispatcher();\r\n    const mainParameters = [\r\n    \r\n        {label:\"molecule\", value:\"CD\", id:window.getID()},\r\n\r\n        \r\n        {label:\"tagging partner\", value:\"He\", id:window.getID()},\r\n        \r\n        {label:\"freq\", value:\"453_521_850_000\", id:window.getID()},\r\n        {label:\"trap_area\", value:\"5e-5\", id:window.getID()},\r\n        // {label:\"Energy\", value:\"0, 15.127861, 45.373851\", id:window.getID()},\r\n\r\n    ]\r\n\r\n    const simulationParameters = [\r\n\r\n        {label:\"totalIonCounts\", value:1000, id:window.getID()},\r\n        \r\n        {label:\"Simulation time(ms)\", value:600, id:window.getID()},\r\n        {label:\"Total steps\", value:1000, id:window.getID()},\r\n        {label:\"excitedTo\", value:1, id:window.getID()},\r\n        {label:\"excitedFrom\", value:0, id:window.getID()},\r\n    ]\r\n\r\n    const dopplerLineshape = [\r\n\r\n        {label:\"IonMass(amu)\", value:14, id:window.getID(), type:\"number\", step:1},\r\n        \r\n        {label:\"IonTemperature(K)\", value:12, id:window.getID(), type:\"number\", step:0.5},\r\n    ]\r\n\r\n    const powerBroadening = [\r\n\r\n        {label:\"cp\", value:\"4.9e7\", id:window.getID()},\r\n        {label:\"dipoleMoment(D)\", value:0, id:window.getID()},\r\n\r\n        {label:\"power(W)\", value:\"2e-5\", id:window.getID()},\r\n    ]\r\n\r\n    let trapTemp = 5.7\r\n    const rateCoefficients = [\r\n\r\n        {label:\"totalAttachmentLevels\", value:2, id:window.getID()},\r\n        {label:\"branching-ratio(kCID)\", value:0.5, id:window.getID()},\r\n        {label:\"a(k31)\", value:0.5, id:window.getID()},\r\n        {label:\"He density(cm3)\", value:\"2e14\", id:window.getID()},\r\n        {label:\"k3\", value:\"9.6e-31, 2.9e-30\", id:window.getID()},\r\n        \r\n        {label:\"kCID\", value:\"6.7e-16, 1.9e-15\", id:window.getID()},\r\n    \r\n    ]\r\n    \r\n    \r\n    let electronSpin=false, zeemanSplit= false;\r\n    let collisionalRateType = \"excitation\"\r\n    $: deexcitation = collisionalRateType===\"deexcitation\";\r\n\r\n    \r\n\r\n    let py, running = false;\r\n\r\n\r\n    const pyEventHandle = (e) => {\r\n\r\n        statusReport = \"\"\r\n        const events = e.detail\r\n        py = events.py\r\n    }\r\n\r\n    let statusReport = \"\";\r\n    let showreport = false\r\n    const pyEventDataReceivedHandle = (e) => {\r\n        let dataReceived = e.detail.dataReceived\r\n        statusReport += `${dataReceived}\\n`\r\n    }\r\n    const pyEventClosedHandle = (e) => {\r\n        running=false;\r\n\r\n        window.createToast(\"Terminated\", \"danger\")\r\n        statusReport += \"\\n######## TERMINATED ########\"\r\n    }\r\n\r\n    const simulation = (e) => {\r\n\r\n        const collisional_rates = {}\r\n        collisionalCoefficient.forEach(f=>collisional_rates[f.label] = f.value)\r\n        \r\n\r\n        const main_parameters = {}\r\n        mainParameters.forEach(f=>main_parameters[f.label]=f.value)\r\n\r\n        const simulation_parameters = {}\r\n        simulationParameters.forEach(f=>simulation_parameters[f.label]=f.value)\r\n\r\n        const lineshape_conditions = {}\r\n        dopplerLineshape.forEach(f=>lineshape_conditions[f.label]=f.value)\r\n\r\n        const power_broadening = {}\r\n        powerBroadening.forEach(f=>power_broadening[f.label]=f.value)\r\n\r\n        const einstein_coefficient = {}\r\n        einsteinCoefficient.forEach(f=>einstein_coefficient[f.label]=f.value)\r\n\r\n        const rate_coefficients = {}\r\n        rateCoefficients.forEach(f=>rate_coefficients[f.label]=f.value)\r\n\r\n        const energy_levels = {}\r\n        energyLevels.forEach(f=>energy_levels[f.label]=f.value)\r\n        \r\n        const conditions = { trapTemp, variable, variableRange, numberOfLevels, includeCollision, includeAttachmentRate, includeSpontaneousEmission, writefile, filename, currentLocation,  deexcitation, collisional_rates, main_parameters, simulation_parameters, einstein_coefficient, energy_levels, energyUnit, power_broadening, lineshape_conditions, rate_coefficients, electronSpin, zeemanSplit }\r\n        dispatch('submit', { e, conditions })\r\n        running=true\r\n\r\n    }\r\n\r\n    let currentLocation = db.get(\"thz_modal_location\") || db.get(\"thz_location\") || \"\";\r\n    let filename = `ROSAA_modal_${mainParameters[0].value}_${mainParameters[1].value}`;\r\n    $: if(currentLocation&&fs.existsSync(currentLocation)) {db.set(\"thz_modal_location\", currentLocation)}\r\n\r\n    async function browse_folder() {\r\n        const result = await browse({dir:true})\r\n        if (!result.canceled) { currentLocation = result.filePaths[0]; }\r\n    }\r\n\r\n    let writefile = true, includeCollision = true, includeSpontaneousEmission = true, includeAttachmentRate = true;\r\n    let variable = \"time\", variableRange = \"1e12, 1e16, 10\";\r\n\r\n    const variablesList = [\"time\", \"He density(cm3)\", \"Power(W)\"]\r\n    let editCollisionalCoefficients = false, editEinsteinCoefficients= false, collisionalCoefficient=[], einsteinCoefficient=[];\r\n\r\n\r\n    async function getRateLabelsEinstein(e){\r\n        try {\r\n            const args = [JSON.stringify({numberOfLevels, electronSpin, zeemanSplit})]\r\n            const pyfile = \"get_rate_labels_einstein.py\"\r\n            \r\n            const dataFromPython = await computePy_func({e, pyfile, args})\r\n            const {transition_labels, transition_labels_J0, transition_labels_J1} = dataFromPython\r\n            \r\n            einsteinCoefficient = []\r\n            \r\n\r\n            transition_labels.forEach(level=>{\r\n\r\n                let labels;\r\n            \r\n                if (electronSpin && zeemanSplit) {\r\n                    labels = level.map(f=>f={label:f, value:0, id:window.getID()})\r\n                    einsteinCoefficient = [...einsteinCoefficient, ...labels]\r\n                } else {\r\n                    labels = {label:level, value:0, id:window.getID()}\r\n                    einsteinCoefficient = [...einsteinCoefficient, labels]\r\n\r\n                }\r\n            })\r\n        } catch (error) { console.error(error) }\r\n    }\r\n\r\n    async function getRateLabelsCollision(e){\r\n        try {\r\n\r\n            const args = [JSON.stringify({numberOfLevels, electronSpin, zeemanSplit})]\r\n            const pyfile = \"get_rate_labels_collision.py\"\r\n            const dataFromPython = await computePy_func({e, pyfile, args})\r\n            const {transition_labels} = dataFromPython\r\n            collisionalCoefficient = transition_labels.map(label=>{return {label, value:0, id:window.getID()}})\r\n\r\n            collisionalRateType = \"excitation\"\r\n        } catch (error) { console.error(error) }\r\n\r\n    }\r\n\r\n    function changeCollisionalRateType() {\r\n        collisionalCoefficient = collisionalCoefficient.map(level=>{\r\n            const level_arr = level.label.split(\" --> \")\r\n            const label = `${level_arr[1]} --> ${level_arr[0]}`\r\n            return {label, value:level.value, id:level.id}\r\n        })\r\n    }\r\n    let editEnergy=false, energyLevels=[], energyUnit=\"cm-1\";\r\n\r\n    let numberOfLevels = 3;\r\n    let energy_level_info = []\r\n    function getEnergyLabels(){\r\n\r\n        const value=0\r\n        \r\n        energy_level_info = _.fill(Array(numberOfLevels)).map((N, i)=>i).map((N, i)=>{\r\n            if (electronSpin) {\r\n                const splitLevels = [-0.5, 0.5]\r\n                N = []\r\n                splitLevels.forEach(s=>{\r\n                    const current_J = i+s\r\n                    if (current_J>0) {\r\n                        if (zeemanSplit) {\r\n                            let mJ = []\r\n                            for (let current_mJ=current_J; current_mJ >= -current_J; current_mJ--) {\r\n                                mJ = [...mJ, {label:`${i}_${current_J}__${current_mJ}`, value, id:window.getID()}]\r\n                            } \r\n                            N = [...N, mJ]\r\n                        } else {N = [...N, {label:`${i}_${current_J}`, value, id:window.getID()}]}\r\n                    }\r\n\r\n                })\r\n\r\n                return N\r\n\r\n            } else {return {label:i, value, id:window.getID()}}\r\n        })\r\n\r\n        energyLevels = _.flattenDeep(energy_level_info)\r\n    \r\n    }\r\n    getEnergyLabels();\r\n\r\n\r\n    async function readEinsteinCoefficientFromFile(){\r\n        let filename = await browse({dir:false, multiple:false})\r\n\r\n        if (filename.filePaths.length==0) return;        \r\n        filename = filename.filePaths[0]\r\n        const fileContents = fs.readFileSync(filename, \"utf-8\").split(\"\\n\")\r\n        \r\n\r\n        let ground, excited;\r\n        einsteinCoefficient = []\r\n        fileContents.forEach(line=>{\r\n            if (line.length>1){\r\n                \r\n                if (line.includes(\"#\")){\r\n                    line = line.split(\"#\")[1].split(\"\\t\").map(f=>f.trim());\r\n                    [ground, excited] = [line[0], line[1]]\r\n\r\n                } \r\n                else {\r\n                    line = line.split(\"\\t\").map(f=>f.trim())\r\n                    const separator = electronSpin&&zeemanSplit ? \"__\" : \"_\"\r\n                    const label = `${excited}${separator}${line[1]} --> ${ground}${separator}${line[0]}`\r\n                    const [energy, value] = [line[2], line[3]]\r\n                    einsteinCoefficient = [...einsteinCoefficient, {label, value, id:window.getID()}]\r\n\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    async function readEnergyFromFile(){\r\n        let filename = await browse({dir:false, multiple:false})\r\n        if (filename.filePaths.length==0) return;\r\n\r\n        filename = filename.filePaths[0]\r\n        const fileContents = fs.readFileSync(filename, \"utf-8\").split(\"\\n\")\r\n\r\n        energyLevels = []\r\n        let preLabel;\r\n        fileContents.forEach(line=>{\r\n            if (line.length>1){\r\n                \r\n                \r\n                if (line.includes(\"#\")){preLabel = line.split(\"#\")[1].trim()} \r\n                else {\r\n                    line = line.split(\"\\t\").map(f=>f.trim())\r\n                    const separator = electronSpin&&zeemanSplit ? \"__\" : \"_\"\r\n                    const label = preLabel+separator+line[0]\r\n                    const value = line[1]\r\n                    energyLevels = [...energyLevels, {label, value, id:window.getID()}]\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n</script>\r\n\r\n<style lang=\"scss\">.locationColumn {\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 1em;\n  grid-template-columns: 1fr 4fr 2fr; }\n  .locationColumn .button {\n    margin: 0;\n    align-self: center; }\n\nhr {\n  background-color: #fafafa; }\n\n.writefileCheck {\n  display: grid;\n  grid-auto-flow: column;\n  border: solid 1px white;\n  border-radius: 20px; }\n\n.variableColumn {\n  display: grid; }\n  .variableColumn .subtitle {\n    margin: 0; }\n  .variableColumn .variableColumn__dropdown {\n    display: grid;\n    grid-auto-flow: column;\n    grid-template-columns: auto 1fr;\n    grid-column-gap: 1em; }\n\n.main_container__div {\n  display: grid;\n  grid-row-gap: 1em;\n  padding: 1em; }\n  .main_container__div .subtitle {\n    margin: 0; }\n\n:global(.content__div label) {\n  flex-basis: 30%; }\n\n.sub_container__div {\n  display: grid;\n  grid-row-gap: 1em; }\n  .sub_container__div .subtitle {\n    place-self: center; }\n  .sub_container__div .content__div {\n    max-height: 30rem;\n    overflow-y: auto;\n    display: flex;\n    flex-wrap: wrap;\n    justify-self: center; }\n  .sub_container__div .control__div {\n    display: grid;\n    grid-auto-flow: column;\n    justify-self: center;\n    gap: 0.5em; }\n\n.status_report__div {\n  white-space: pre-wrap;\n  -webkit-user-select: text;\n  padding: 1em; }\n\n.center {\n  margin: auto;\n  width: max-content; }</style>\r\n\r\n<EditCoefficients title=\"Collisional rate constants\" bind:active={editCollisionalCoefficients} bind:coefficients={collisionalCoefficient} />\r\n<EditCoefficients title=\"Einstein Co-efficients\" bind:active={editEinsteinCoefficients} bind:coefficients={einsteinCoefficient} />\r\n\r\n\r\n<EditCoefficients title=\"Energy levels\" bind:active={editEnergy} bind:coefficients={energyLevels} />\r\n\r\n{#if active}\r\n    <SeparateWindow id=\"ROSAA__modal\" title=\"ROSAA modal\" bind:active >\r\n\r\n        <svelte:fragment slot=\"header_content__slot\" >\r\n\r\n            <div class=\"locationColumn\" >\r\n                <button class=\"button is-link\" id=\"thz_modal_filebrowser_btn\" on:click={browse_folder}>Browse</button>\r\n\r\n                <Textfield bind:value={currentLocation} label=\"Current location\" />\r\n                <Textfield bind:value={filename} label=\"filename\" />\r\n            </div>\r\n\r\n            <div class=\"writefileCheck\">\r\n                <CustomCheckbox bind:selected={writefile} label=\"writefile\" />\r\n                <CustomCheckbox bind:selected={includeCollision} label=\"includeCollision\" />\r\n                <CustomCheckbox bind:selected={includeAttachmentRate} label=\"includeAttachmentRate\" />\r\n                <CustomCheckbox bind:selected={includeSpontaneousEmission} label=\"includeSpontaneousEmission\" />\r\n                <CustomCheckbox bind:selected={electronSpin} label=\"Electron Spin\" />\r\n                <CustomCheckbox bind:selected={zeemanSplit} label=\"Zeeman\" />\r\n            </div>\r\n\r\n            <div class=\"variableColumn\">\r\n                <div class=\"subtitle\">Simulate signal(%) as a function of {variable}</div>\r\n                <div class=\"variableColumn__dropdown\">\r\n                    <CustomSelect options={variablesList} bind:picked={variable} />\r\n                    {#if variable !== \"time\"}\r\n                        <Textfield bind:value={variableRange} label=\"Range (min, max, totalsteps)\" />\r\n                    {/if}\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </svelte:fragment>\r\n\r\n        <svelte:fragment slot=\"main_content__slot\">\r\n            {#if showreport}\r\n                <div class=\"content status_report__div\" ><hr>{statusReport || \"Status report\"}<hr></div>\r\n            {:else}\r\n\r\n            <div class=\"main_container__div\" >\r\n            \r\n                <div class=\"sub_container__div box\">\r\n                    <div class=\"subtitle\">Main Parameters</div>\r\n                    <div class=\"content__div \">\r\n                        {#each mainParameters as {label, value, id}(id)}\r\n                            <Textfield bind:value {label}/>\r\n                        {/each}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"sub_container__div box\" >\r\n                    <div class=\"subtitle\">Energy levels</div>\r\n                    <div class=\"control__div \">\r\n                        <Textfield bind:value={numberOfLevels} label=\"numberOfLevels (J levels)\" input$step={1} input$min={0} input$type={\"number\"} />\r\n                        <CustomSelect options={[\"MHz\", \"cm-1\"]} bind:picked={energyUnit} />\r\n                        <button class=\"button is-link\" on:click={() => editEnergy=true}>Edit Energy</button>\r\n\r\n                        <button class=\"button is-link center\" on:click={getEnergyLabels}>Get labels</button>\r\n                        <button class=\"button is-link center\" on:click={readEnergyFromFile}>Read from file</button>\r\n                    </div>\r\n\r\n                    <div class=\"content__div \">\r\n                        {#each energyLevels as {label, value, id}(id)}\r\n                            <Textfield bind:value {label} />\r\n                        {/each}\r\n                    </div>\r\n                </div>\r\n\r\n                {#if includeSpontaneousEmission}\r\n                    <div class=\"sub_container__div box\">\r\n                        <div class=\"subtitle\">Einstein Co-efficients</div>\r\n\r\n                        <div class=\"control__div \">\r\n                            <button class=\"button is-link center\" on:click={() => editEinsteinCoefficients=true}>Edit constats</button>\r\n                            <button class=\"button is-link center\" on:click={getRateLabelsEinstein}>Get labels</button>\r\n\r\n                            <button class=\"button is-link center\" on:click={readEinsteinCoefficientFromFile}>Read from file</button>\r\n\r\n                        </div>\r\n                        {#if einsteinCoefficient.length>0}\r\n\r\n                            <div class=\"content__div \">\r\n                                {#each einsteinCoefficient as {label, value, id}(id)}\r\n                                    <Textfield bind:value {label}/>\r\n                                {/each}\r\n                            </div>\r\n                        {/if}\r\n                    </div>\r\n\r\n                {/if}\r\n\r\n                {#if includeCollision}\r\n                    <div class=\"sub_container__div box\">\r\n                        <div class=\"subtitle\">Collisional rate constants</div>\r\n                        <div class=\"control__div \">\r\n                            <CustomSelect options={[\"deexcitation\", \"excitation\"]} bind:picked={collisionalRateType} on:change={changeCollisionalRateType}/>\r\n                            <button class=\"button is-link\" on:click={() => editCollisionalCoefficients=true}>Edit constats</button>\r\n                            <button class=\"button is-link center\" on:click={getRateLabelsCollision}>Get labels</button>\r\n                        </div>\r\n\r\n                        {#if collisionalCoefficient.length>0}\r\n                            <div class=\"content__div \">\r\n                                {#each collisionalCoefficient as {label, value, id}(id)}\r\n                                    <Textfield bind:value {label}/>\r\n                                {/each}\r\n                            </div>\r\n                        {/if}\r\n                    </div>\r\n                {/if}\r\n                \r\n                <div class=\"sub_container__div box\">\r\n                    <div class=\"subtitle\">Simulation parameters</div>\r\n                    <div class=\"content__div \">\r\n                        {#each simulationParameters as {label, value, id}(id)}\r\n                            <Textfield bind:value {label}/>\r\n                        {/each}\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"sub_container__div box\">\r\n                    <div class=\"subtitle\">Doppler lineshape</div>\r\n                    <div class=\"content__div \">\r\n                        <Textfield bind:value={trapTemp} label=\"trapTemp(K)\"/>\r\n                        {#each dopplerLineshape as {label, value, id, type, step}(id)}\r\n                            <Textfield bind:value {label} input$type={type} input$step={step}/>\r\n                        {/each}\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                <div class=\"sub_container__div box\">\r\n                    <div class=\"subtitle\">Lorrentz lineshape</div>\r\n                    <div class=\"content__div \">\r\n                        {#each powerBroadening as {label, value, id}(id)}\r\n                            <Textfield bind:value {label}/>\r\n                        {/each}\r\n                    </div>\r\n                </div>\r\n\r\n                {#if includeAttachmentRate}\r\n                    \r\n                    <div class=\"sub_container__div box\">\r\n\r\n                        <div class=\"subtitle\">Rare-gas attachment (K3) and dissociation (kCID) constants</div>\r\n                        <div class=\"content__div\">\r\n                            {#each rateCoefficients as {label, value, id}(id)}\r\n\r\n                                <Textfield bind:value {label} />\r\n                            {/each}\r\n                        </div>\r\n\r\n                    </div>\r\n                {/if}\r\n            </div>\r\n\r\n            {/if}\r\n        </svelte:fragment>\r\n\r\n        <svelte:fragment slot=\"footer_content__slot\">\r\n\r\n            {#if running}\r\n                <button transition:fade class=\"button is-danger\" on:click=\"{()=>{py ? py.kill() : console.log('pyEvent is not available')}}\" >Stop</button>\r\n            {/if}    \r\n        \r\n            <button  class=\"button is-link\" on:click=\"{(e)=>{showreport = !showreport}}\" >{showreport ? \"Go Back\" : \"Status report\"}</button>\r\n\r\n            <button  class=\"button is-link\" class:is-loading={running} on:click=\"{simulation}\" on:pyEvent={pyEventHandle} on:pyEventClosed=\"{pyEventClosedHandle}\" on:pyEventData={pyEventDataReceivedHandle}>Submit</button>\r\n        </svelte:fragment>\r\n\r\n    </SeparateWindow>\r\n\r\n\r\n{/if}",
    "\r\n<script>\r\n    import {onMount} from \"svelte\";\r\n    export let id=\"report\", reportEditor;\r\n    \r\n    onMount(()=>{\r\n        reportEditor = new Quill(`#${id}-editor-container`, {\r\n        \r\n            modules: {\r\n                formula: true,\r\n                syntax: true,\r\n                toolbar: `#${id}-toolbar-container`\r\n            \r\n            },\r\n\r\n            // placeholder: 'Compose an epic...',\r\n        \r\n            theme: 'snow'\r\n        \r\n        });\r\n    })\r\n\r\n</script>\r\n\r\n<style global>\r\n\r\n:global(.editor-container) :global(*) { color: black; }\r\n\r\n:global(.text-container) {height: 30rem; width: 100%;}\r\n:global(.ql-tooltip.ql-editing.ql-flip) {\r\n    left: -7.5px;\r\n    top: 20.5px;\r\n}\r\n\r\n:global(.ql-snow) :global(.ql-editor) :global(pre.ql-syntax) {\r\n    background-color: #4a4a4ae6;\r\n\r\n    color: #fafafa;\r\n\r\n}\r\n\r\n:global(.hljs-symbol), :global(.hljs-attribute) {color: #fafafa;}\r\n\r\n\r\n:global(.toolbar-container) {width: 100%;}\r\n</style>\r\n\r\n\r\n\r\n<div id=\"{id}-standalone-container\" class=\"align editor-container\" style=\"background-color: #fafafa; width: 75%;\">\r\n  <div id=\"{id}-toolbar-container\" class=\"toolbar-container\">\r\n    <span class=\"ql-formats\">\r\n      <select class=\"ql-font\"></select>\r\n      <select class=\"ql-size\"></select>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <button class=\"ql-bold\"></button>\r\n      <button class=\"ql-italic\"></button>\r\n      <button class=\"ql-underline\"></button>\r\n      <button class=\"ql-strike\"></button>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <select class=\"ql-color\"></select>\r\n      <select class=\"ql-background\"></select>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <button class=\"ql-script\" value=\"sub\"></button>\r\n      <button class=\"ql-script\" value=\"super\"></button>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <button class=\"ql-header\" value=\"1\"></button>\r\n      <button class=\"ql-header\" value=\"2\"></button>\r\n      <button class=\"ql-blockquote\"></button>\r\n      <button class=\"ql-code-block\"></button>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <button class=\"ql-list\" value=\"ordered\"></button>\r\n      <button class=\"ql-list\" value=\"bullet\"></button>\r\n      <button class=\"ql-indent\" value=\"-1\"></button>\r\n      <button class=\"ql-indent\" value=\"+1\"></button>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <button class=\"ql-direction\" value=\"rtl\"></button>\r\n      <select class=\"ql-align\"></select>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <button class=\"ql-link\"></button>\r\n      <button class=\"ql-image\"></button>\r\n      <button class=\"ql-video\"></button>\r\n      <button class=\"ql-formula\"></button>\r\n    </span>\r\n    <span class=\"ql-formats\">\r\n      <button class=\"ql-clean\"></button>\r\n      \r\n    </span>\r\n  </div>\r\n  <div id=\"{id}-editor-container\" class=\"text-container\"></div>\r\n\r\n</div>",
    "\r\n<script>\r\n    import IconButton, {Icon} from '@smui/icon-button';\r\n\r\n    import { slide } from 'svelte/transition';\r\n    import FormField from '@smui/form-field';\r\n    import Switch from '@smui/switch';\r\n\r\n    import Textfield from '@smui/textfield';\r\n    import {tick} from \"svelte\";\r\n    import {onMount, afterUpdate} from \"svelte\"\r\n    import CustomIconSwitch from './CustomIconSwitch.svelte';\r\n\r\n    import VirtualCheckList from './VirtualCheckList.svelte';\r\n    import { createEventDispatcher } from 'svelte';\r\n    import PreModal from \"./PreModal.svelte\";\r\n    \r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    export let fileChecked = [],  currentLocation = \"\", filetype = \"*.*\", fullfileslist = [];\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n    let preModal = {};\r\n    let fullfiles = []\r\n\r\n    // $: fullfileslist\r\n    function dispatch_chdir_event() { dispatch('chdir', { action: \"chdir\", filetype, currentLocation }) }\r\n\r\n    let original_location = currentLocation\r\n    let otherfolders = [], selectAll=false, showfiles = true, original_files = [];\r\n    $: locationStatus = fs.existsSync(currentLocation)\r\n\r\n    $: parentFolder = locationStatus ? path.basename(currentLocation) : \"Undefined\"\r\n\r\n    let searchKey = \"\";\r\n    \r\n    const searchfile = () => {\r\n\r\n        console.log(searchKey)\r\n        if (!searchKey) {fullfiles = original_files}\r\n        else {fullfiles = original_files.filter(file=>file.name.includes(searchKey))}\r\n\r\n    }\r\n\r\n    let files_loaded = false\r\n    \r\n    function getfiles(toast=false, keepfiles=false) {\r\n    \r\n        if (!locationStatus) {return window.createToast(\"Location undefined\", \"danger\")}\r\n        original_files = otherfolders = fullfiles = []\r\n\r\n        if(!keepfiles){fileChecked = []}\r\n        \r\n        selectAll = files_loaded = false\r\n        \r\n        try {\r\n            console.log(\"Current location: \", currentLocation)\r\n            \r\n            let folderfile = fs.readdirSync(currentLocation)\r\n\r\n            original_files = fullfiles = folderfile.filter(file=>file.endsWith(filetype)&&fs.lstatSync(path.join(currentLocation, file)).isFile()).map(file=>file={name:file, id:getID()}).sort((a,b)=>a.name<b.name?1:-1)\r\n\r\n            fullfileslist = fullfiles.map(file=>file=file.name)\r\n\r\n            otherfolders = folderfile.filter(file=>fs.lstatSync(path.join(currentLocation, file)).isDirectory()).map(file=>file={name:file, id:getID()}).sort((a,b)=>a.name>b.name?1:-1)\r\n            \r\n            original_location = currentLocation\r\n            \r\n            files_loaded = true\r\n            console.log(\"Folder updated\", otherfolders);\r\n            dispatch_chdir_event()\r\n\r\n            if (filetype.length > 2) { db.set(`${filetype}_location`, currentLocation) }\r\n            if (toast) { window.createToast(\"Files updated\"); }\r\n\r\n        } catch (err) {\r\n            \r\n            console.log(err)\r\n            preModal.modalContent = err.stack;\r\n            preModal.open = true;\r\n            return \r\n        \r\n        }\r\n    }\r\n\r\n    let sortFile = false\r\n    $: sortFile ? fullfiles = fullfiles.sort((a,b)=>a.name>b.name?1:-1) : fullfiles = fullfiles.sort((a,b)=>a.name<b.name?1:-1)\r\n\r\n    const changeDirectory = (goto) => { currentLocation = path.resolve(currentLocation, goto); getfiles() }\r\n\r\n    onMount(()=> {if(locationStatus) {getfiles(); console.log(\"onMount Updating location for \", filetype)}} )\r\n    afterUpdate(() => {\r\n        \r\n        if (original_location !== currentLocation && locationStatus) {\r\n\r\n            getfiles(true); console.log(\"Updating location for \", filetype)\r\n        }\r\n\r\n    });\r\n\r\n    async function selectRange(event) {\r\n\r\n        await tick();\r\n        if (event.shiftKey && fileChecked.length) {\r\n            const _from = window._.indexOf(fullfileslist, fileChecked[0])\r\n            const _to = window._.indexOf(fullfileslist, fileChecked.slice(fileChecked.length-1)[0])\r\n            if (_from < _to) {fileChecked = fullfileslist.slice(_from, _to+1)}\r\n            else {fileChecked = fullfileslist.slice(_to, _from+1)}\r\n        }\r\n\r\n\t}\r\n\r\n</script>\r\n\r\n<style>\r\n.folderfile-list {max-height: calc(100vh - 20em); overflow-y: auto;}\r\n.align {display: flex; align-items: center;}\r\n.center {justify-content: center;}\r\n.browseIcons {cursor: pointer;}\r\n</style>\r\n\r\n<PreModal bind:preModal/>\r\n\r\n<div class=\"align center browseIcons\">\r\n    <Icon class=\"material-icons\" on:click=\"{()=>changeDirectory(\"..\")}\">arrow_back</Icon>\r\n    <Icon class=\"material-icons\" on:click=\"{()=>{getfiles(true, true)}}\">refresh</Icon>\r\n    <CustomIconSwitch bind:toggler={sortFile} icons={[\"trending_up\", \"trending_down\"]}/>\r\n\r\n</div>\r\n\r\n<Textfield on:keyup={searchfile} style=\"margin-bottom:1em;\" bind:value={searchKey} label=\"Seach\" />\r\n<div class=\"align center\">\r\n    <FormField>\r\n    \r\n        <Switch bind:checked={selectAll} on:change=\"{()=>selectAll ? fileChecked = fullfiles.map(file=>file=file.name) : fileChecked = []}\"/>\r\n        <span slot=\"label\">Select All</span>\r\n    </FormField>\r\n</div>\r\n\r\n\r\n<div class=\"folderfile-list\" id=\"{filetype}_filebrowser\">\r\n    <div class=\"align folderlist\" >\r\n        <IconButton  toggle bind:pressed={showfiles}>\r\n            <Icon class=\"material-icons\" on>keyboard_arrow_down</Icon>\r\n            <Icon class=\"material-icons\" >keyboard_arrow_right</Icon>\r\n        </IconButton>\r\n        <div class=\"mdc-typography--subtitle1\">{parentFolder}</div>\r\n    </div>\r\n\r\n    {#if files_loaded && locationStatus}\r\n        {#if showfiles && fullfiles.length }\r\n            <div on:click={selectRange}>\r\n                <VirtualCheckList bind:fileChecked bind:items={fullfiles} on:click=\"{()=>selectAll=false}\" on:select=\"{(e)=>console.log(e)}\"/>\r\n            </div>\r\n        {:else if fullfiles.length <= 0}\r\n            <div class=\"mdc-typography--subtitle1 align center\">No {filetype} here!</div>        \r\n        {/if}\r\n        \r\n        <div class=\"otherFolderlist\" style=\"cursor:pointer\">\r\n            {#each otherfolders as folder (folder.id)}\r\n                <div class=\"align\" on:click=\"{()=>changeDirectory(folder.name)}\" transition:slide|local>\r\n                    <Icon class=\"material-icons\">keyboard_arrow_right</Icon>\r\n                    <div class=\"mdc-typography--subtitle1\">{folder.name}</div>\r\n                </div>\r\n            {/each}\r\n        </div>\r\n\r\n    {:else if !locationStatus}\r\n        <div class=\"mdc-typography--subtitle1 align center\">Location doesn't exist: Browse files again</div>\r\n    {:else}\r\n        <div class=\"mdc-typography--subtitle1 align center\">...loading</div>\r\n    {/if}\r\n\r\n</div>",
    "\r\n<style>\r\n.navbar { background: #38236b; }\r\n</style>\r\n\r\n<nav class=\"navbar is-fixed-bottom animated fadeInUp\" id=\"footer\" style=\"display:{status}\">\r\n  <div class=\"navbar-menu\">\r\n\r\n    <div class=\"navbar-start\">\r\n      <div class=\"navbar-item\">\r\n        <p>Developed at Dr.Br&uuml;nken's group FELion@FELIX</p>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"navbar-end\">\r\n\r\n      <div class=\"navbar-item\">\r\n\r\n\r\n        <p>2021 &copy; AN Marimuthu<p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>",
    "\r\n<script>\r\n    import Modal from \"./Modal.svelte\";\r\n    import { fade } from 'svelte/transition';\r\n    import { afterUpdate } from 'svelte';\r\n    import Textfield from '@smui/textfield';\r\n    import CustomSelect from './CustomSelect.svelte';\r\n\r\n    export let currentLocation, fullfileslist;\r\n\r\n    export let active=false;\r\n    // console.log(filename, location)\r\n\r\n    const settingsVariable = {\r\n\r\n        b0 : [\"m03_ao09_bl0\", \"m03_ao09_high\", \"m03_ao09_width\"],\r\n        bq0 : \"m03_ao01_bq0\", bq5: \"m03_ao03_bq5\", q1float: \"m03_ao15_qd1_float\", q2float:\"m04_ao09_qd2_float\", res:\"m03_ao13_reso\",\r\n        bqLenses: [\"m03_ao08_bq1\", \"m03_ao07_bq2\", \"m03_ao06_bq3\", \"m03_ao05_bq4\"],\r\n\r\n        benderLenses: [\"m04_ao01_b_in\", \"m04_ao00_b_outer\", \"m04_ao02_b_inner\"],\r\n        se: [\"m04_ao03_se_trap_in\", \"m04_ao03_se_delay\", \"m04_ao03_se_high\", \"m04_ao03_se_width\"],\r\n        sa: [\"m04_ao04_sa_trap_out\", \"m04_ao04_sa_delay\", \"m04_ao04_sa_high\", \"m04_ao04_sa_width\"],\r\n        trapfloat: \"m04_ao05_trap_float\", bl4: \"m04_ao07_bl4\", bl5:\"m04_ao08_bl5\"\r\n    }\r\n\r\n    const style = \"width:7em; height:3.5em; margin-right:0.5em\"\r\n    let fileContents = \"\"\r\n    \r\n    let variableValues = {}\r\n    let settingsLoaded = false;\r\n    afterUpdate(()=>{\r\n        const fullFilename = path.join(currentLocation, selected_file)\r\n        console.log(fullFilename)\r\n        settingsLoaded = false;\r\n\r\n        if(fs.existsSync(fullFilename) && selected_file){\r\n            \r\n            fileContents = fs.readFileSync(fullFilename).toString()\r\n\r\n            for (const line of fileContents.split(\"\\n\")) {\r\n\r\n                if(line.trim().length > 0 && line.startsWith(\"# Sect01 Ion Source\")) {\r\n\r\n                    let tempLine = line.split(\" \")\r\n                    variableValues[tempLine[7]] = parseFloat(tempLine[9])\r\n                }\r\n            }\r\n\r\n            settingsLoaded = true;\r\n        }    \r\n    })\r\n\r\n\r\n    const labelRowB0 = [\"B0 Low\", \"B0 high\", \"B0 Width\"]\r\n\r\n    const labelRowSE = [\"Trap-in\", \"SE delay\", \"SE high\", \"SE Width\"]\r\n    const labelRowSA = [\"Trap-out\", \"Trap time (ms)\", \"SA high\", \"SA Width\"]\r\n\r\n    const bqlensLabel = [\"bq1\", \"bq2\", \"bq3\", \"bq4\"]\r\n    const benderLabel = [\"Bender in\", \"Bender outer\", \"Bender inner\"]\r\n    let selected_file = \"\";\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n\r\n.row, .col {margin-bottom: 2em;}\r\n.col {display: grid;}\r\n.container {\r\n    display: grid;\r\n    margin: 1em 6em;\r\n    overflow-y: auto;\r\n    max-height: 30vh;\r\n    border: solid 1px;\r\n\r\n    padding: 1em;\r\n    border-radius: 1em;\r\n    justify-content: center;\r\n\r\n}\r\n\r\n</style>\r\n<button class=\"button is-link\" on:click=\"{()=>{active = true}}\">GetLabviewSettings</button>\r\n\r\n{#if active}\r\n\r\n    <Modal title=\"Labview Settings\" bind:active>\r\n\r\n        <div slot=\"content\" transition:fade >\r\n\r\n            <CustomSelect style=\"width:12em; height:3.5em; margin-right:0.5em\" bind:picked={selected_file} label=\"Filename\" options={[\"\", ...fullfileslist]}/>\r\n\r\n\r\n            {#if settingsLoaded}\r\n\r\n                <div class=\"container\">\r\n\r\n                    <div class=\"b0 col\">\r\n                        \r\n                        {#each settingsVariable.b0 as item, index (item)}\r\n                            <Textfield {style} value={variableValues[item]} label={labelRowB0[index]} />\r\n                    \r\n                        {/each}\r\n                    </div>\r\n                    \r\n                    <div class=\"row\">\r\n                        <Textfield {style} value={variableValues[settingsVariable.q1float]} label=\"Quad 1 float\" />\r\n                        <Textfield {style} value={variableValues[settingsVariable.bq0]} label=\"bq0\" />\r\n                    </div>\r\n                    <div class=\"bqLenses col\">\r\n                        {#each settingsVariable.bqLenses as item, index (item)}\r\n                            <Textfield {style} value={variableValues[item]} label={bqlensLabel[index]} />\r\n                        {/each}\r\n                    </div>\r\n                \r\n                    <div class=\"row\"><Textfield {style} value={variableValues[settingsVariable.bq5]} label=\"bq5\" /></div>\r\n                    <div class=\"benderLenses col\">\r\n                        \r\n                        {#each settingsVariable.benderLenses as item, index (item)}\r\n                            <Textfield {style} value={variableValues[item]} label={benderLabel[index]} />\r\n                        {/each}\r\n\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <Textfield {style} value={variableValues[settingsVariable.bl4]} label=\"bl4\" />\r\n                    </div>\r\n                    <div class=\"se row\">\r\n\r\n                        {#each settingsVariable.se as item, index (item)}\r\n                            <Textfield {style} value={variableValues[item]} label={labelRowSE[index]} />\r\n                        {/each}\r\n                    \r\n                    </div>\r\n                    \r\n                    <div class=\"row\"><Textfield {style} value={variableValues[settingsVariable.trapfloat]} label=\"trapfloat\" /></div>\r\n\r\n                    <div class=\"sa row\">\r\n\r\n                        {#each settingsVariable.sa as item, index (item)}\r\n                            <Textfield {style} value={variableValues[item]} label={labelRowSA[index]} />\r\n                        {/each}\r\n\r\n                    </div>\r\n\r\n                    <div class=\"row\" style=\"padding: 1em 0;\">\r\n\r\n                        <Textfield {style} value={variableValues[settingsVariable.bl5]} label=\"bl5\" />\r\n                        <Textfield {style} value={variableValues[settingsVariable.res]} label=\"Resolution\" />\r\n\r\n                        <Textfield {style} value={variableValues[settingsVariable.q2float]} label=\"Quad 2 float\" />\r\n                    </div>\r\n                </div>\r\n            {/if}\r\n        </div>\r\n\r\n    </Modal>\r\n    \r\n{/if}",
    "<script context=\"module\">\r\n    export function browse({filetype=\"\", dir=true, multiple=true}={}) {\r\n        return new Promise((resolve, reject)=>{\r\n            const mainWindow = remote.getCurrentWindow()\r\n            let type;\r\n            dir ? type = \"openDirectory\" : type = \"openFile\"\r\n\r\n            const options = {\r\n                filters: [\r\n                    { name: filetype, extensions: [`*${filetype}`] },\r\n                    { name: 'All Files', extensions: ['*'] }\r\n                ],\r\n\r\n                properties: [type, multiple ? \"multiSelections\" : \"\"],\r\n            }\r\n\r\n\r\n            const version = parseInt(process.versions.electron.split(\".\")[0])\r\n\r\n            \r\n            if (version >= 7) {\r\n                remote.dialog.showOpenDialog(mainWindow, options)\r\n                .then(result => {\r\n                    console.log(result.canceled)\r\n                    console.log(result.filePaths)\r\n                    resolve(result)\r\n\r\n                }).catch(err => {\r\n\r\n                    window.createToast(\"Couldn't open folder\", \"danger\")\r\n                    reject(err) })\r\n            } else {\r\n                let result = {}\r\n                remote.dialog.showOpenDialog(null, options, location => {\r\n                location === undefined ? result = {canceled:true, filePaths:[]}: result = {canceled:false, filePaths:location}\r\n\r\n                console.log(result.canceled)\r\n                console.log(result.filePaths)\r\n                resolve(result)\r\n\r\n            })\r\n            }\r\n\r\n        })\r\n    }\r\n</script>\r\n\r\n\r\n<script>\r\n    \r\n    import { fly, fade } from 'svelte/transition';\r\n    import Textfield from '@smui/textfield';\r\n    import {onMount, afterUpdate} from \"svelte\";\r\n    import FileBrowser from \"./FileBrowser.svelte\"\r\n    import Hamburger1 from \"../components/icon_animations/Hamburger1.svelte\";\r\n    import { createEventDispatcher } from 'svelte';\r\n\r\n    import PreModal from \"./PreModal.svelte\";\r\n\r\n    ////////////////////////////////////////////////////////////////////////////\r\n\r\n    export let id, fileChecked=[], filetype = \"felix\", toggleBrowser = false, preModal = {}, fullfileslist = [];\r\n    export let currentLocation = db.get(`${filetype}_location`) || \"\", graphPlotted=false;\r\n\r\n    const dispatch = createEventDispatcher()\r\n\r\n\r\n    function browse_folder() {\r\n        browse({dir:true}).then(result=>{\r\n\r\n            console.log(result, currentLocation)\r\n\r\n\r\n            if (!result.canceled) { \r\n                currentLocation = result.filePaths[0]\r\n\r\n                db.set(`${filetype}_location`, currentLocation)\r\n                console.log(result, currentLocation)\r\n\r\n             }\r\n        })\r\n    }\r\n\r\n    \r\n    function tour_event() { dispatch('tour', {filetype}) }\r\n\r\n    let ContainerHeight, buttonContainerHeight, mounted=false;\r\n    \r\n    \r\n    onMount(()=>{ toggleBrowser = true; mounted=true;})\r\n\r\n    let graphWindowClosed = true;\r\n    $: graphModal = !graphWindowClosed\r\n\r\n    const plotContainer = document.getElementById(`${filetype}-plotContainer`)\r\n    $: plotContainerStyle = graphModal ? \"padding: 1em;\" : `max-height: calc(100vh - 20em); height:calc(${ContainerHeight}px - ${buttonContainerHeight}px - 11em)`\r\n    \r\n\r\n    function openGraph(){\r\n\r\n        if(!graphWindowClosed) {\r\n            return graphWindow.show()\r\n        }\r\n        graphWindowClosed = false\r\n\r\n        const mount = document.getElementById(`${filetype}-plotContainer`)\r\n\r\n        graphWindow = new WinBox({\r\n            root:document.getElementById(\"pageContainer\"), \r\n            mount, \r\n\r\n            title: `Modal: ${filetype}`,\r\n\r\n            x: \"center\", y: \"center\",\r\n            width: \"70%\", height: \"70%\",\r\n\r\n            background:\"#634e96\",\r\n            top: 50, bottom:50,\r\n            onclose: function(){\r\n                graphWindowClosed = true\r\n                console.log(`${filetype}=> graphWindowClosed: ${graphWindowClosed}`)\r\n                return false\r\n\r\n            } \r\n\r\n        });\r\n\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">.filebrowser, .fileContainer {\n  background-image: url(./assets/css/intro.svg);\n  height: calc(100vh - 7em); }\n\n.plotContainer {\n  overflow-y: auto;\n  padding-bottom: 12em;\n  padding-right: 1em; }\n  .plotContainer div {\n    margin-top: 1em; }\n\n.filebrowser {\n  padding-left: 2em;\n  padding-top: 1em;\n  background-color: #6a50ad59;\n  border-radius: 0; }\n\n.fileContainer {\n  margin: 0 2em;\n  padding-bottom: 5rem;\n  width: auto; }\n  @media (min-width: 770px) {\n    .fileContainer {\n      width: 60%; } }\n\n.buttonContainer {\n  max-height: 20em;\n  overflow-y: auto; }\n\n.box {\n  border-radius: 0; }\n\n.container {\n  height: calc(100vh - 7em); }\n\n.location__bar {\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 1fr 1fr 16fr;\n  grid-column-gap: 1em;\n  place-items: center;\n  margin-bottom: 1em; }\n\n.buttonContainer {\n  display: grid;\n  grid-auto-flow: row;\n  align-items: center; }</style>\r\n\r\n\r\n<PreModal bind:preModal />\r\n\r\n<section {id} style=\"display:none\" class=\"animated fadeIn\">\r\n    <div class=\"columns\">\r\n\r\n        {#if toggleBrowser}\r\n            <div class=\"column is-one-fifth-widescreen is-one-quarter-desktop box filebrowser adjust-right\" transition:fly=\"{{ x: -100, duration: 500 }}\">\r\n                <FileBrowser bind:currentLocation {filetype} bind:fileChecked on:chdir bind:fullfileslist/>\r\n\r\n            </div>\r\n        {/if}\r\n\r\n        <div class=\"column fileContainer\" >\r\n\r\n            <div class=\"container button-plot-container box\" id=\"{filetype}-button-plot-container\" bind:clientHeight={ContainerHeight}>\r\n                <div class=\"location__bar\" >\r\n                    <Hamburger1 bind:active={toggleBrowser}/>\r\n                    <button class=\"button is-link gap\" id=\"{filetype}_filebrowser_btn\" on:click={browse_folder}>Browse</button>\r\n\r\n                    \r\n                    <Textfield bind:value={currentLocation} label=\"Current location\" />\r\n                </div>\r\n\r\n                <div class=\"buttonContainer\" id=\"{filetype}-buttonContainer\" bind:clientHeight={buttonContainerHeight}>\r\n                    {#if toggleBrowser}\r\n                        <slot name=\"buttonContainer\" />\r\n                        {#if graphPlotted}\r\n                            <button class=\"button is-warning animated fadeIn\" style=\"width:12em;\" on:click={openGraph}>Graph:Open separately</button>\r\n                        {/if}\r\n                    {/if}\r\n                 </div>\r\n\r\n                <div class=\"plotContainer\" id=\"{filetype}-plotContainer\" style=\"{plotContainerStyle}\" transition:fade> \r\n\r\n                    <slot name=\"plotContainer\" />\r\n                    {#if graphPlotted}\r\n                        <slot name=\"plotContainer_functions\" />\r\n                        <slot name=\"plotContainer_reports\" />\r\n                    {/if}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n</section>",
    "\r\n<script>\r\n  // import {onMount} from \"svelte\";\r\n  import { createEventDispatcher } from 'svelte';\r\n  export let active =  false, title =  \"Title\", style=\"width:60vw\", bodyBackground = \"#634e96\", bodyStyle=\"max-height: 30em;\", contentID=\"\";\r\n\r\n  const dispatch = createEventDispatcher()\r\n\r\n</script>\r\n\r\n<style>\r\n.modal-card-body {color: black; overflow-y: auto; height: 100%;}\r\n\r\n.delete {background-color: #fafafa;}\r\n.delete:hover {background-color: #f14668;}\r\n</style>\r\n\r\n<svelte:window on:keydown=\"{(e)=> {if(e.keyCode===27) active=false}}\"/>\r\n\r\n<div class=\"modal\" class:is-active={active}>\r\n\r\n  <div class=\"modal-background\"></div>\r\n\r\n\r\n  <div class=\"modal-card animated fadeIn faster\" {style}>\r\n\r\n    <header class=\"modal-card-head\">\r\n      <p class=\"modal-card-title\">{title}</p>\r\n      <span class=\"delete is-pulled-right\" on:click=\"{()=>{active=false; dispatch('closed', {active}) }}\"></span>\r\n\r\n    </header>\r\n\r\n    <section class=\"modal-card-body\" style=\"background: {bodyBackground}; {bodyStyle}\" id=\"{contentID||window.getID()}\"><slot name=\"content\" style=\"white-space: pre-wrap;\"/></section>\r\n\r\n    {#if $$slots.footerbtn}\r\n      <footer class=\"modal-card-foot\">\r\n        <div style=\"margin-left:auto; display:flex;\">\r\n          <slot name=\"footerbtn\" /> \r\n\r\n        </div>\r\n      </footer>\r\n    {/if}\r\n    \r\n  </div>\r\n</div>",
    "<script context=\"module\">\r\n  import {writable} from \"svelte/store\";\r\n  export const activePage = writable(\"\")\r\n\r\n</script>\r\n<script>\r\n\timport Tab, {Label} from '@smui/tab';\r\n\timport TabBar from '@smui/tab-bar';\r\n\t// import Button from '@smui/button';\r\n\timport {onMount} from \"svelte\";\r\n\texport let navItems;\r\n\t\r\n\t\r\n\tlet active = 'Home';\r\n\t$: $activePage = active\r\n\t$: console.log(`Current page: ${$activePage}`)\r\n\r\n\tconst navigate = () =>{navItems.forEach(item=> item == active ? showpage(item) : hidepage(item))}\r\n\tonMount(()=>{showpage(\"navbar\");})\r\n</script>\r\n\r\n<style lang=\"scss\">#navbar {\n  width: 100vw;\n  margin-bottom: 0;\n  padding: 0; }</style>\r\n\r\n\r\n<div class=\"box animated fadeInDown\" id=\"navbar\" style=\"display:none\" on:click={navigate}>\r\n\t<TabBar tabs={navItems} let:tab bind:active>\r\n\t\t<Tab {tab}> <Label>{tab}</Label> </Tab>\r\n\t</TabBar>\r\n</div>\r\n",
    "<script>\r\n  import {browse} from \"./Layout.svelte\";\r\n  import { fade } from 'svelte/transition';\r\n\r\n  export let active = false, style = \"\", footer = true, currentLocation=\"\", title=\"\";\r\n  \r\n  function browse_folder() {\r\n  \r\n    browse({dir:true}).then(result=>{\r\n        if (!result.canceled) { currentLocation = result.filePaths[0]; window.createToast(\"Location updated\") }\r\n    })\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n.quickview {margin: 5em 0;}\r\n\r\nfooter, .quickview {background-color: #594098fa;}\r\n/* p {color: #fafafa;} */\r\n.delete {background-color: #fafafa;}\r\n.delete:hover {background-color: #f14668;}\r\n</style>\r\n\r\n<div class=\"quickview\" class:is-active={active} transition:fade>\r\n\r\n  <header class=\"quickview-header\">\r\n\r\n    <button class=\"button is-link\" on:click={browse_folder}>Browse</button>\r\n    <div class=\"subtitle\" style=\"margin:0;\">{title}</div>\r\n    <span class=\"delete is-pulled-right\" data-dismiss=\"quickview\" on:click=\"{()=>active=false}\"></span>\r\n\r\n  </header>\r\n\r\n  <div class=\"quickview-body\" {style}>\r\n    <div class=\"quickview-block\">\r\n      <slot >Contents</slot>\r\n    </div>\r\n  </div>\r\n\r\n  {#if footer}\r\n    <footer class=\"quickview-footer\">\r\n      <slot name=\"footer\" />\r\n    </footer>\r\n  {/if}\r\n</div>",
    "\r\n<script>\r\n    import Radio from '@smui/radio'\r\n    import FormField from '@smui/form-field'\r\n    import CustomCheckbox from './CustomCheckbox.svelte'\r\n    import Textfield from '@smui/textfield'\r\n    import Select, {Option} from '@smui/select'\r\n\r\n    import {onMount} from \"svelte\";\r\n    import Hamburger1 from \"./icon_animations/Hamburger1.svelte\";\r\n    import PreModal from \"./PreModal.svelte\";\r\n    import Editor from \"./Editor.svelte\";\r\n\r\n    const {BrowserWindow} = remote\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    export let currentLocation = \"\", id=\"report\", includePlotsInReport=[], includeTablesInReports=[]\r\n    let reportTitle = \"\", reportMethod = \"info\", reportMolecule = \"\"\r\n    $: reportFile = path.resolve(currentLocation, `reports/${reportMolecule}_report.html`)\r\n    // const reportExist = fs.existsSync(reportFile)\r\n    const stylesheet1 = path.resolve(__dirname, `assets/reports/report.css`)\r\n    const stylesheet2 = path.resolve(__dirname, `assets/reports/template.css`)\r\n    const reportHTML = document.createElement( 'html' )\r\n\r\n    let preModal = {};\r\n\r\n    $: reportHTMLTemplate = `<!DOCTYPE html>\r\n                                <html lang=\"en\">\r\n                                    <head>\r\n                                        <meta charset='utf8'>\r\n                                        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n                                        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n                                        <title>${reportMolecule} Reports</title>\r\n                                        <link rel=\"stylesheet\" type='text/css' href=\"${stylesheet1}\">\r\n                                        <link rel=\"stylesheet\" type='text/css' href=\"${stylesheet2}\">\r\n                                    </head>\r\n\r\n                                    <body>\r\n                                        <section class=\"section\" id=\"mainSection\"></section>\r\n                                    </body>\r\n                                </html>`\r\n\r\n\r\n    function init_report(){\r\n\r\n        reportHTML.innerHTML = fs.existsSync(reportFile) ? fs.readFileSync(reportFile) : reportHTMLTemplate\r\n        console.log(\"ReportHTML: \", reportHTML)\r\n        reportMainContainer = reportHTML.querySelector(\"#mainSection\")\r\n        \r\n        const reportDir = path.resolve(currentLocation, \"reports\")\r\n\r\n        if (!fs.existsSync(reportDir)) {\r\n            fs.mkdir(reportDir, { recursive: true }, (err) => {\r\n\r\n                if (err) return window.createToast(\"No write access for making report\", \"danger\");\r\n                console.log(\"reports directory created\")\r\n            });\r\n        }\r\n    }\r\n    \r\n    let plotWidth = 750, plotHeight = 500;\r\n    function getImage(imgID) {\r\n\r\n        return new Promise(resolve => {\r\n\r\n            Plotly.toImage(imgID, {format: 'png', width: plotWidth, height: plotHeight}).then(dataURL =>{resolve(dataURL)})\r\n        \r\n        })\r\n    \r\n    }\r\n\r\n\r\n    const exprtToHtml = async (content) => {\r\n        fs.writeFile(reportFile, content || reportHTMLTemplate, function(err) {\r\n\r\n            if(err) {\r\n                window.createToast(\"Report couldn't be added.\", \"danger\")\r\n                return console.log(err);\r\n            }\r\n            window.createToast(\"Report added\", \"success\")\r\n\r\n            console.log(\"Exported to HTML\")\r\n        })\r\n\r\n        reportTitle = \"\"\r\n        \r\n    }\r\n\r\n    const addTablesToReport = () => {\r\n\r\n        const tableDiv = document.createElement(\"div\")\r\n        tableDiv.setAttribute(\"class\", \"content reportTable\")\r\n        \r\n        includeTablesInReports.forEach(tb=>{\r\n\r\n            if(tb.include) {\r\n\r\n                try {\r\n\r\n                    let tableContent = document.getElementById(tb.id).innerHTML\r\n                \r\n                    let tableElement = document.createElement(\"table\")\r\n                    \r\n                    tableElement.setAttribute(\"class\", \"table is-bordered is-hoverable\")\r\n                    tableElement.innerHTML = tableContent\r\n\r\n                    \r\n                    let tableHeading = document.createElement(\"h1\")\r\n                    tableHeading.setAttribute(\"class\", \"title\")\r\n                    \r\n                    tableHeading.textContent = tb.label\r\n                    \r\n                    tableDiv.appendChild(tableHeading)\r\n                    tableDiv.appendChild(tableElement)\r\n                    \r\n                } catch (err) {\r\n                    window.createToast(`${tb.label} is not visible`, \"danger\")\r\n                }\r\n\r\n            }\r\n        \r\n        })\r\n        console.log(\"tableDiv created\", tableDiv)\r\n\r\n        return tableDiv\r\n    }\r\n\r\n\r\n    const addPlotImagesToReport = async () => {\r\n\r\n        const plotDiv = document.createElement(\"div\")\r\n        plotDiv.setAttribute(\"class\", \"content reportPlots\")\r\n\r\n        await asyncForEach(includePlotsInReport, async (plot)=>{\r\n            if (plot.include) {\r\n                console.log(\"Request Image URL for \", plot.id)\r\n\r\n\r\n                let imgURL = await getImage(plot.id)\r\n                console.log(`Received Image URL for ${plot.id}\\n`)\r\n                let imgElement = document.createElement(\"img\")\r\n\r\n                imgElement.setAttribute(\"src\", imgURL)\r\n                plotDiv.appendChild(imgElement)\r\n                console.log(`${plot.id} Included in HTML`)\r\n\r\n            }\r\n        \r\n        })\r\n        console.log(\"plotDiv created\", plotDiv)\r\n        \r\n        return Promise.resolve(plotDiv)\r\n\r\n    }\r\n\r\n    let reportEditor;\r\n    const addReport = async () => {\r\n\r\n        if(!fs.existsSync(reportFile)) {init_report()}\r\n        const tableDiv = addTablesToReport()\r\n        const plotDiv = await addPlotImagesToReport()\r\n\r\n        const reportMainHeading = document.createElement(\"h1\")\r\n\r\n        reportMainHeading.setAttribute(\"class\", `notification is-${reportMethod} reportHeading`)\r\n\r\n        reportMainHeading.textContent = reportTitle\r\n\r\n        const reportComment = document.createElement(\"div\")\r\n        \r\n        reportComment.setAttribute(\"class\", \"reportComments\")\r\n        \r\n        reportComment.innerHTML = reportEditor.root.outerHTML\r\n\r\n        const reportDiv = document.createElement(\"div\")\r\n        reportDiv.setAttribute(\"class\", \"content reportCount\")\r\n\r\n        reportDiv.appendChild(reportMainHeading)\r\n        reportDiv.appendChild(reportComment)\r\n        reportDiv.appendChild(plotDiv)\r\n        reportDiv.appendChild(tableDiv)\r\n\r\n        console.log(\"reportDiv div created\", reportDiv)\r\n\r\n        reportMainContainer.appendChild(reportDiv)\r\n        console.log(\"reportMainContainer div created\", reportMainContainer)\r\n\r\n        console.log(\"Full report\\n\", reportHTML)\r\n        exprtToHtml(reportHTML.innerHTML)\r\n    }\r\n\r\n\r\n    let exportMethod = \"landscape\", pageSize = \"A4\"\r\n\r\n    const showReport = ({export_pdf=false}={}) => {\r\n\r\n        let reportWindow = new BrowserWindow({ width: 1200, minWidth :600, height: 600, parent: remote.getCurrentWindow(), show:!export_pdf})\r\n        reportWindow.on('closed', () => { reportWindow = null; console.log(\"Report window closed\") })\r\n        reportWindow.loadURL(reportFile)\r\n        reportWindow.webContents.on('did-finish-load', ()=>{ \r\n            console.log(\"Report loaded\")\r\n            if(export_pdf) {\r\n\r\n                let landscape;\r\n                exportMethod == \"landscape\" ? landscape = true : landscape = false\r\n                \r\n                const version = parseInt(process.versions.electron.split(\".\")[0])\r\n                if (version >= 7) {\r\n                    reportWindow.webContents.printToPDF({printBackground: true, landscape:landscape, pageSize:pageSize})\r\n                    .then(data => {\r\n                        fs.writeFile(reportFile.replace(\".html\", \".pdf\"), data, (err) => {\r\n                            if (err) {preModal.modalContent = err.stack; preModal.open = true; return}\r\n                            window.createToast('Write PDF successfully.', \"success\")\r\n                        })\r\n                    }).catch(err => { preModal.modalContent = err.stack; preModal.open = true })\r\n\r\n                } else {\r\n                    reportWindow.webContents.printToPDF({printBackground: true, landscape:landscape, pageSize:pageSize}, (err, data) => {\r\n                        if(err) { preModal.modalContent = err.stack; preModal.open = true; return}\r\n                        fs.writeFile(reportFile.replace(\".html\", \".pdf\"), data, (err) => {\r\n                            if (err) {preModal.modalContent = err.stack; preModal.open = true; return}\r\n                            window.createToast('Write PDF successfully.', \"success\")\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    const notificationMethod = [{name:\"info\", color:\"white\"}, {name:\"success\", color:\"#00ff00\"}, {name:\"warning\", color:\"yellow\"}, {name:\"danger\", color:\"red\"}]\r\n    let reportMainContainer;\r\n\r\n    onMount(()=>{ init_report() })\r\n\r\n    let toggle = false;\r\n</script>\r\n\r\n<style>\r\n\r\n.button {margin-right: 1em;}\r\n\r\n\r\n\r\n.report {display: flex; align-items: inherit; flex-direction: column;}\r\n.addToReport > div {justify-content: center; display: flex; flex-wrap: wrap;}\r\n\r\n.align {display: flex; align-items: center;}\r\n.heading {\r\n\r\n    border: 1px solid;\r\n    margin: 1em 0;\r\n    background-color: #634e96;\r\n\r\n\r\n\r\n    border-radius: 5px;\r\n}\r\n\r\n.title {margin: 0; flex-grow: 2;}\r\n.hide {display: none;}\r\n\r\n</style>\r\n<PreModal bind:preModal/>\r\n\r\n<div class=\"content align heading\">\r\n    <div class=\"title notification is-link\">Add to report</div>\r\n    <Hamburger1 bind:active={toggle}/>\r\n\r\n</div>\r\n\r\n<div class:hide={!toggle} class=\"animated fadeIn\">\r\n\r\n\r\n    <div style=\"margin-bottom:1em;\">\r\n        <Textfield style=\"height:3em; width:20em;\" variant=\"outlined\" bind:value={reportMolecule} label=\"Molecule Name\" />\r\n        <button class=\"button is-pulled-right is-warning\" on:click=\"{()=>{ reportMainContainer.innerHTML = \"\"; exprtToHtml(\"\"); window.createToast(\"Report resetted\", \"warning\")}}\">Reset Report</button>\r\n    </div>\r\n\r\n    <div class=\"align report\" {id} >\r\n        <div class=\"\">\r\n            {#each notificationMethod as method}\r\n                <FormField >\r\n                    <Radio bind:group={reportMethod} value={method.name}  />\r\n                    \r\n                    <span slot=\"label\" style=\"color:{method.color}\">{method.name}</span>\r\n                </FormField>\r\n            {/each}\r\n        </div>\r\n\r\n        {#if includeTablesInReports.length>0}\r\n            <div class=\"addToReport \">\r\n                <div class=\"\">\r\n                    {#each includeTablesInReports as {id, include, label}(id)}\r\n                        <CustomCheckbox bind:selected={include} {label}/>\r\n                    {/each}\r\n                </div>\r\n            </div>\r\n        {/if}\r\n        \r\n        \r\n        <div class=\"addToReport \">\r\n\r\n            <div class=\"\">\r\n                {#each includePlotsInReport as {id, include, label}(id)}\r\n                    <CustomCheckbox bind:selected={include} {label}/>\r\n                {/each}\r\n        \r\n        \r\n            </div>\r\n        </div>\r\n\r\n        <Textfield style=\"height:3em; margin-bottom:1em;\" variant=\"outlined\" bind:value={reportTitle} label=\"Title\" />\r\n        <Editor bind:reportEditor {id}/>\r\n        \r\n        \r\n        <div class=\"align\" style=\"margin-top:1em;\">\r\n            <button class=\"button is-link\" on:click={addReport}>Add to Report</button>\r\n            <button class=\"button is-link\" on:click={showReport}>Show Report</button>\r\n        \r\n        </div>\r\n\r\n        <div class=\"align\">\r\n            <Textfield style=\"width:7em;\" variant=\"outlined\" bind:value={plotWidth} label=\"plotWidth\" />\r\n            <Textfield style=\"width:7em;\" variant=\"outlined\" bind:value={plotHeight} label=\"plotHeight\" />\r\n            \r\n            \r\n            <button class=\"button is-link\" on:click=\"{()=>showReport({export_pdf:true})}\">EXPORT to PDF</button>\r\n\r\n            {#each [\"landscape\", \"portrait\"] as method}\r\n            \r\n                <FormField >\r\n            \r\n                    <Radio bind:group={exportMethod} value={method}  />\r\n\r\n                    <span slot=\"label\" style=\"color:{method}\">{method}</span>\r\n            \r\n                </FormField>\r\n            {/each}\r\n\r\n            <Select bind:value={pageSize} label=\"pageSize\" style=\"margin-left:1em;\">\r\n                {#each [\"A3\", \"A4\", \"A5\", \"Legal\", \"Letter\"] as file}\r\n                    <Option value={file} selected={pageSize  === file}>{file}</Option>\r\n                {/each}\r\n            </Select>\r\n        </div>\r\n    \r\n    </div>\r\n\r\n</div>",
    "\r\n<script>\r\n    import {onMount, tick} from \"svelte\"\r\n    export let id, title=\"Title\", active=false;\r\n\r\n    let graphWindowClosed = true;\r\n    let graphWindow = null;\r\n\r\n    // let maxHeight;\r\n    // let buttonHeight=0, headerHeight=0;\r\n\r\n    function openGraph(){\r\n\r\n        if(!graphWindowClosed) {return graphWindow.show()}\r\n\r\n        graphWindowClosed = false\r\n\r\n        graphWindow = new WinBox({\r\n\r\n\r\n            root:document.getElementById(\"pageContainer\"), \r\n            mount: document.getElementById(id), title,\r\n            x: \"center\", y: \"center\",\r\n            width: \"70%\", height: \"70%\",\r\n            background:\"#634e96\",\r\n            top: 50, bottom:50,\r\n            onclose: function(){\r\n                graphWindowClosed = true\r\n                active = false\r\n                console.log(`graphWindowClosed: ${graphWindowClosed}`)\r\n                return false\r\n            },\r\n            // onresize: function(width, height){maxHeight = height-buttonHeight-headerHeight-100},\r\n        });\r\n        \r\n    }\r\n    \r\n\r\n\r\n    onMount(async ()=> {\r\n        await tick(); openGraph()\r\n    })\r\n\r\n\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n.main_content {\r\n    overflow: auto;\r\n}\r\n\r\n.main_content__div {\r\n    display:grid;\r\n    grid-template-rows: 3fr 12fr 1fr;\r\n    max-height: 100%;\r\n    padding: 1em;\r\n}\r\n\r\n.header_content {\r\n\r\n    display:grid;\r\n\r\n    grid-row-gap: 1em;\r\n}\r\n\r\n.footer_content {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n\r\n    grid-auto-columns: max-content;\r\n    \r\n    margin-left: auto;\r\n}\r\n\r\n</style>\r\n\r\n<div {id} class=\"main_content__div\">\r\n\r\n    <div class=\"header_content\"><slot name=\"header_content__slot\" /></div>\r\n    <div class=\"main_content\"><slot name=\"main_content__slot\" /></div>\r\n\r\n    {#if $$slots.footer_content__slot}\r\n\r\n        <div class=\"footer_content\" >\r\n\r\n            <slot name=\"footer_content__slot\"/> \r\n    \r\n        </div>\r\n    {/if}\r\n\r\n</div>",
    "<script>\r\n\r\n    import { fade, scale } from 'svelte/transition';\r\n    import {Icon} from '@smui/icon-button';\r\n    import {tick} from \"svelte\";\r\n    export let head, rows, keys, id=window.getID(), label=\"table\", sortOption = false, closeOption = true, addextraOption = true;\r\n    const keyIDSets = keys.map(key=>{return {key, id:window.getID()}})\r\n\r\n    const sortTable = (type) => { if(sortOption) {rows = _.orderBy(rows, [type], [\"asc\"])} }\r\n\r\n    let emptyRow = {}\r\n    keys.forEach(key=>emptyRow[key] = \"\")\r\n\r\n    const addRow = async () => {\r\n\r\n        const id = window.getID()\r\n\r\n        rows = [...rows, {...emptyRow, id}]\r\n        \r\n        \r\n        await tick()\r\n        const focusTargetID = `${id}-${keys[0]}`\r\n        document.getElementById(focusTargetID).focus()\r\n    }\r\n    // $: console.log(\"Row: \", rows)\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n* :global(th i) {color: black;}\r\n\r\n.tableIcon {\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n    \r\n    color: black;\r\n\r\n}\r\n\r\n\r\ntd {text-align: center!important;}\r\n.tableContainer {\r\n\r\n    overflow-x: auto;\r\n    max-width: calc(100vw - 27em);\r\n}\r\n\r\n</style>\r\n\r\n<div class=\"\">\r\n\r\n    {#if addextraOption}\r\n        <div class=\"icon-holder\" >\r\n            <Icon class=\"material-icons\"  on:click=\"{addRow}\">add</Icon>\r\n\r\n        </div>\r\n\r\n    {/if}\r\n\r\n\r\n    <div class=\"mdc-data-table tableContainer\" >\r\n        <table class=\"mdc-data-table__table\" aria-label={label} {id}>\r\n            <thead>\r\n\r\n                <tr class=\"mdc-data-table__header-row\">\r\n\r\n                    <th class=\"mdc-data-table__header-cell\" style=\"width: 2em;\" role=\"columnheader\" scope=\"col\">#</th>\r\n\r\n\r\n                    {#each head as item, index }\r\n\r\n                        <th style=\"cursor: pointer;\" class=\"mdc-data-table__header-cell\" role=\"columnheader\" scope=\"col\" >\r\n\r\n                            <div class=\"tableIcon\" on:click=\"{()=>sortTable(keys[index])}\">\r\n                                {#if sortOption}\r\n                                    <Icon class=\"material-icons\" >arrow_downward</Icon>\r\n                                {/if}\r\n\r\n                                {item}\r\n                            </div>\r\n                        </th>\r\n\r\n                    {/each}\r\n                    \r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody class=\"mdc-data-table__content\">\r\n                \r\n                {#each rows as row, index (row.id)}\r\n                    <tr class=\"mdc-data-table__row\" style=\"background-color: #fafafa;\" transition:scale> \r\n                        <td class=\"mdc-data-table__cell\" style=\"width: 2em;\" >{index}</td>\r\n\r\n                        {#each keyIDSets as {key, id} (id)}\r\n                            <td class=\"mdc-data-table__cell  mdc-data-table__cell--numeric\" contenteditable=\"true\" bind:innerHTML={row[key]} id=\"{row.id}-{key}\">{row[key]}</td>\r\n\r\n                        {/each}\r\n\r\n                        {#if closeOption}\r\n\r\n                            <td class=\"mdc-data-table__cell\" style=\"background: #f14668; cursor: pointer; width: 2em;\">\r\n                                <Icon id=\"{row.id}\" class=\"material-icons\" on:click=\"{(e)=> {rows = window._.filter(rows, (tb)=>tb.id != e.target.id)}}\">close</Icon>\r\n                            </td>\r\n                        {/if}\r\n\r\n                    </tr>\r\n\r\n                {/each}\r\n\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    \r\n</div>",
    "\r\n<script>\r\n\r\n    import IconButton from '@smui/icon-button';\r\n    import PreModal from \"./PreModal.svelte\";\r\n    import {tick} from \"svelte\";\r\n    import Textfield from '@smui/textfield';\r\n\r\n    import CustomSwitch from './CustomSwitch.svelte';\r\n    ///////////////////////////////////////////////////////////////////////////////\r\n\r\n    const colorSets = {warning: \"#ffdd57\", danger:\"#f14668\", info:\"#2098d1\", normal:\"#fafafa\", success:\"#20f996\"}\r\n\r\n    export let commandToRun = db.get(\"pythonpath\") || \"\", commandArgsToRun = \"-m pip\", commandResults = [{color:colorSets.normal, results:\">> \"}], teminalFontSize=20;\r\n\r\n    export let commandInputDiv = true, runShell = false, id=\"terminal\";\r\n    \r\n    let preModal = {}\r\n    let openShellTerminal = false;\r\n\r\n    const srollTerminalDiv = async () => {\r\n        const terminalDiv = document.getElementById(id)\r\n        await tick()\r\n        const scrollTo = terminalDiv.scrollHeight - terminalDiv.clientHeight\r\n        terminalDiv.scrollTo({top:scrollTo, behavior: 'smooth'})\r\n    }\r\n\r\n    async function terminalShell(){\r\n        runShell = false\r\n        \r\n        await tick()\r\n        \r\n        srollTerminalDiv()\r\n        \r\n        if (!commandToRun) {return window.createToast(\"No command entered\", \"warning\")}\r\n        commandResults = [...commandResults , {color:colorSets.normal, results:`>> ${commandToRun} ${commandArgsToRun.split(\",\").join(\" \")}`}]\r\n        let ls;\r\n\r\n        \r\n        try {\r\n            commandArgsToRun += ` ${packagesName}`\r\n            ls = spawn(commandToRun, commandArgsToRun.split(\" \").map(arg=>arg.trim()), { detached: true, stdio: 'pipe', shell: openShellTerminal });\r\n        } catch (err) {preModal.modalContent = err.stack;  preModal.open = true}\r\n\r\n        ls.stdout.on(\"data\", data => {\r\n            commandResults = [...commandResults, {color:colorSets.info, results:`>> ${data || \"\"}`}]\r\n            srollTerminalDiv()\r\n\r\n        })\r\n        \r\n        ls.stderr.on(\"data\", data => { \r\n            commandResults = [...commandResults, {color:colorSets.danger, results:`>> ${data || \"\"}`}]\r\n\r\n            srollTerminalDiv()\r\n        })\r\n\r\n\r\n        ls.on(\"close\", code => {  \r\n\r\n            commandResults = [...commandResults, {color: code === 1 ? colorSets.danger :  colorSets.success, results:`>> child process exited with code ${code}`}]\r\n            srollTerminalDiv()\r\n\r\n            const outputLog = `${new Date().toLocaleString()}\\n\\n-----------------------------------------\\nRunning terminal commands\\n${commandResults.map(cmd=>cmd.results).join(\"\")}\\n-----------------------------------------\\n`\r\n            \r\n            try { fs.writeFileSync(path.resolve(__dirname, \"output.log\"), outputLog)} \r\n            \r\n            catch (error) { window.createToast(\"Could not save the outputs to file: output.log\", \"warning\")}\r\n\r\n        })\r\n    }\r\n    $: if(runShell) terminalShell()\r\n\r\n    let installPythonPackagesMode = false, packagesName = \"\"\r\n\r\n    const installPythonPackages = () => {\r\n\r\n\r\n        commandToRun = db.get(\"pythonpath\")\r\n        \r\n        commandArgsToRun = \"-m pip install\"\r\n\r\n        installPythonPackagesMode = !installPythonPackagesMode\r\n\r\n    }\r\n\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n.box { background-color: #6a50ad8a; overflow-y: auto; height: calc(100vh - 12em);}\r\n\r\n.terminal {\r\n\r\n    margin-bottom: 1em;\r\n    background-color: #4a4a4ae6;\r\n\r\n    user-select: text;\r\n\r\n}\r\n\r\n.contentBox {\r\n\r\n    max-height: 70vh;\r\n    overflow: auto;\r\n\r\n    padding-bottom: 1em;\r\n    padding: 1em;\r\n    height: calc(100vh - 12em);\r\n\r\n}\r\n</style>\r\n\r\n<PreModal bind:preModal/>\r\n\r\n<div class=\"content contentBox terminalBox\" >\r\n\r\n    {#if commandInputDiv}\r\n\r\n        <div class=\"commandInput\">\r\n        \r\n            <button class=\"button is-link\" on:click={installPythonPackages}>Python package installation</button>\r\n\r\n            <div class=\"run\" style=\"display:flex; align-items:center; margin-bottom:1em;\">\r\n\r\n                {#if installPythonPackagesMode}\r\n\r\n                    <Textfield  bind:value={packagesName} label=\"Enter packages name(s)\"/>\r\n                {:else}\r\n\r\n                    <Textfield  bind:value={commandToRun} label=\"Enter command to run\"/>\r\n                    <Textfield  bind:value={commandArgsToRun} label=\"Enter command-arg\"/>\r\n\r\n\r\n                {/if}\r\n\r\n            </div>\r\n\r\n\r\n            <div class=\"run\" style=\"display:flex; align-items:center; margin-bottom:1em;\">\r\n                <IconButton class=\"material-icons\" on:click={terminalShell}>play_arrow</IconButton>\r\n                <CustomSwitch style=\"margin: 0 1em;\" bind:selected={openShellTerminal} label=\"Shell\"/>\r\n\r\n                <Textfield type=\"number\" step=\"1\" min=\"0\" bind:value={teminalFontSize} variant=\"outlined\" style=\"width:7em\" label=\"Font Size\"/>\r\n\r\n                <IconButton class=\"material-icons is-pulled-right\" style=\"background: #f14668; border-radius: 2em;\" on:click=\"{()=>commandResults=[{color:colorSets.normal, results:`>> cleared`}] }\">clear</IconButton>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    {/if}\r\n\r\n    <div class=\"box terminal\" {id} style=\"height: {commandInputDiv ? 75 : 90}%;\">\r\n\r\n        {#each commandResults as {color, results}}\r\n            <h1 class=\"subtitle\" style=\"color:{color}; font-size:{teminalFontSize}px; white-space: pre-wrap; \">{results}</h1>\r\n\r\n        {/each}\r\n\r\n    </div>\r\n    \r\n</div>",
    "<script>\r\n    export let style=6, active=false;\r\n</script>\r\n\r\n<style> \r\n/* nav-icon-1 */\r\n\r\n.nav-icon-1{\r\nwidth: 30px;\r\nheight: 30px;\r\nposition: relative;\r\ntransition: .1s;\r\nmargin: 10px 10px;\r\ncursor: pointer;\r\ndisplay: inline-block;\r\n}\r\n.nav-icon-1 span{\r\nwidth: 5px;\r\nheight: 5px;\r\nbackground-color: #fff;\r\ndisplay: block;\r\nborder-radius: 50%;\r\nposition: absolute;\r\n\r\n}\r\n.nav-icon-1:hover span{\r\ntransform: scale(1.2);\r\ntransition: 350ms cubic-bezier(.8, .5, .2, 1.4);\r\n}\r\n.nav-icon-1 span:nth-child(1){\r\nleft: 0;\r\ntop: 0;\r\n}\r\n.nav-icon-1 span:nth-child(2){\r\nleft: 12px;\r\ntop: 0;\r\n}\r\n.nav-icon-1 span:nth-child(3){\r\nright: 0;\r\ntop: 0;\r\n}\r\n.nav-icon-1 span:nth-child(4){\r\nleft: 0;\r\ntop: 12px;\r\n}\r\n.nav-icon-1 span:nth-child(5){\r\nposition: absolute;\r\nleft: 12px;\r\ntop: 12px;\r\n}\r\n.nav-icon-1 span:nth-child(6){\r\nright: 0px;\r\ntop: 12px;\r\n}\r\n.nav-icon-1 span:nth-child(7){\r\nleft: 0px;\r\nbottom: 0px;\r\n}\r\n.nav-icon-1 span:nth-child(8){\r\nposition: absolute;\r\nleft: 12px;\r\nbottom: 0px;\r\n}\r\n.nav-icon-1 span:nth-child(9){\r\nright: 0px;\r\nbottom: 0px;\r\n}\r\n.nav-icon-1.open{\r\ntransform: rotate(180deg);\r\ncursor: pointer;\r\ntransition: .2s cubic-bezier(.8, .5, .2, 1.4);\r\n}\r\n.nav-icon-1.open span{\r\nborder-radius: 50%;\r\ntransition-delay: 200ms;\r\ntransition: .5s cubic-bezier(.8, .5, .2, 1.4);\r\n}\r\n.nav-icon-1.open span:nth-child(2) {\r\nleft: 6px;\r\ntop: 6px;\r\n}\r\n.nav-icon-1.open span:nth-child(4) {\r\nleft: 6px;\r\ntop: 18px;\r\n}\r\n.nav-icon-1.open span:nth-child(6) {\r\nright: 6px;\r\ntop: 6px;\r\n}\r\n.nav-icon-1.open span:nth-child(8) {\r\nleft: 18px;\r\nbottom: 6px;\r\n}\r\n/* nav-icon-2 */\r\n.nav-icon-2{\r\nwidth: 35px;\r\nheight: 30px;\r\nmargin: 10px 10px;\r\nposition: relative;\r\ncursor: pointer;\r\ndisplay: inline-block;\r\n}\r\n.nav-icon-2 span{\r\nbackground-color:#FFF;\r\nposition: absolute;\r\nborder-radius: 2px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n}\r\n.nav-icon-2 span:nth-child(1){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\ntop: 0px;\r\nleft: 0px;\r\n}\r\n.nav-icon-2 span:nth-child(2){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\ntop: 13px;\r\nleft: 0px;\r\n}\r\n.nav-icon-2 span:nth-child(3){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\nbottom: 0px;\r\nleft: 0px;\r\n}\r\n.nav-icon-2:not(.open):hover span:nth-child(1){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\ntop: -2px;\r\nleft: 0px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n}\r\n.nav-icon-2:not(.open):hover span:nth-child(2){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\ntop: 13px;\r\nleft: 0px;\r\ntransition: .4s cubic-bezier(.8, .5, .2, 1.4);\r\n}\r\n.nav-icon-2:not(.open):hover span:nth-child(3){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\nbottom: -2px;\r\nleft: 0px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n}\r\n.nav-icon-2.open span:nth-child(1){\r\nleft:3px;\r\ntop: 12px;\r\nwidth: 30px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\ntransform: rotate(90deg);\r\ntransition-delay: 150ms;\r\n}\r\n.nav-icon-2.open span:nth-child(2){\r\nleft:2px;\r\ntop: 20px;\r\nwidth: 20px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\ntransform: rotate(45deg);\r\ntransition-delay: 50ms;\r\n}\r\n.nav-icon-2.open span:nth-child(3){\r\nleft:14px;\r\ntop: 20px;\r\nwidth: 20px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\ntransform: rotate(-45deg);\r\ntransition-delay: 100ms;\r\n}\r\n/* nav-icon-3 */\r\n.nav-icon-3{\r\nwidth: 35px;\r\nheight: 30px;\r\nmargin: 10px 10px;\r\nposition: relative;\r\ncursor: pointer;\r\ndisplay: inline-block;\r\n}\r\n.nav-icon-3 span{\r\nbackground-color:#FFF;\r\nposition: absolute;\r\nborder-radius: 2px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n}\r\n.nav-icon-3 span:nth-child(1){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\ntop: 0px;\r\nleft: 0px;\r\n}\r\n.nav-icon-3 span:nth-child(2){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\ntop: 13px;\r\nleft: 0px;\r\n}\r\n.nav-icon-3 span:nth-child(3){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\nbottom: 0px;\r\nleft: 0px;\r\n}\r\n.nav-icon-3:not(.open):hover span:nth-child(1){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\ntop: -2px;\r\nleft: 0px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n}\r\n.nav-icon-3:not(.open):hover span:nth-child(2){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\ntop: 13px;\r\nleft: 0px;\r\ntransition: .4s cubic-bezier(.8, .5, .2, 1.4);\r\n}\r\n.nav-icon-3:not(.open):hover span:nth-child(3){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\nbottom: -2px;\r\nleft: 0px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n}\r\n.nav-icon-3.open {\r\ntransform: rotate(-90deg);\r\n}\r\n.nav-icon-3.open  span:nth-child(1){\r\nleft:3px;\r\ntop: 12px;\r\nwidth: 30px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\ntransform: rotate(90deg);\r\ntransition-delay: 150ms;\r\n}\r\n.nav-icon-3.open  span:nth-child(2){\r\nleft:2px;\r\ntop: 20px;\r\nwidth: 20px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\ntransform: rotate(45deg);\r\ntransition-delay: 50ms;\r\n}\r\n.nav-icon-3.open  span:nth-child(3){\r\nleft:14px;\r\ntop: 20px;\r\nwidth: 20px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\ntransform: rotate(-45deg);\r\ntransition-delay: 100ms;\r\n}\r\n/* nav-icon-4 */\r\n.nav-icon-4{\r\nwidth: 35px;\r\nheight: 30px;\r\nmargin: 10px 10px;\r\nposition: relative;\r\ncursor: pointer;\r\ndisplay: inline-block;\r\n}\r\n.nav-icon-4 span{\r\nbackground-color:#FFF;\r\nposition: absolute;\r\nborder-radius: 2px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n}\r\n.nav-icon-4 span:nth-child(1){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\ntop: 0px;\r\nleft: 0px;\r\n}\r\n.nav-icon-4 span:nth-child(2){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\ntop: 13px;\r\nleft: 0px;\r\n}\r\n.nav-icon-4 span:nth-child(3){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\nbottom: 0px;\r\nleft: 0px;\r\n}\r\n.nav-icon-4:not(.open):hover span:nth-child(1){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\ntop: -2px;\r\nleft: 0px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n}\r\n.nav-icon-4:not(.open):hover span:nth-child(2){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\ntop: 13px;\r\nleft: 0px;\r\ntransition: .4s cubic-bezier(.8, .5, .2, 1.4);\r\n}\r\n.nav-icon-4:not(.open):hover span:nth-child(3){\r\nwidth: 100%;\r\nheight:  4px;\r\ndisplay: block;\r\nbottom: -2px;\r\nleft: 0px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\n}\r\n.nav-icon-4.open {\r\ntransform: rotate(90deg);\r\n}\r\n.nav-icon-4.open span:nth-child(1){\r\nleft:3px;\r\ntop: 12px;\r\nwidth: 30px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\ntransform: rotate(90deg);\r\ntransition-delay: 150ms;\r\n}\r\n.nav-icon-4.open span:nth-child(2){\r\nleft:2px;\r\ntop: 20px;\r\nwidth: 20px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\ntransform: rotate(45deg);\r\ntransition-delay: 50ms;\r\n}\r\n.nav-icon-4.open span:nth-child(3){\r\nleft:14px;\r\ntop: 20px;\r\nwidth: 20px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\ntransform: rotate(-45deg);\r\ntransition-delay: 100ms;\r\n}\r\n/* nav-icon-5 */\r\n.nav-icon-5{\r\nwidth: 35px;\r\nheight: 30px;\r\nmargin: 10px 10px;\r\nposition: relative;\r\ncursor: pointer;\r\ndisplay: inline-block;\r\n}\r\n.nav-icon-5 span{\r\nbackground-color:#fff;\r\nposition: absolute;\r\nborder-radius: 2px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\nwidth:100%;\r\nheight: 4px;\r\ntransition-duration: 500ms\r\n}\r\n.nav-icon-5 span:nth-child(1){\r\ntop:0px;\r\nleft: 0px;\r\n}\r\n.nav-icon-5 span:nth-child(2){\r\ntop:13px;\r\nleft: 0px;\r\nopacity:1;\r\n}\r\n.nav-icon-5 span:nth-child(3){\r\nbottom:0px;\r\nleft: 0px;\r\n}\r\n.nav-icon-5:not(.open):hover span:nth-child(1){\r\ntransform: rotate(-3deg) scaleY(1.1);\r\n}\r\n.nav-icon-5:not(.open):hover span:nth-child(2){\r\ntransform: rotate(3deg) scaleY(1.1);\r\n}\r\n.nav-icon-5:not(.open):hover span:nth-child(3){\r\ntransform: rotate(-4deg) scaleY(1.1);\r\n}\r\n.nav-icon-5.open span:nth-child(1){\r\ntransform: rotate(45deg);\r\ntop: 13px;\r\n}\r\n.nav-icon-5.open span:nth-child(2){\r\nopacity:0;\r\n}\r\n.nav-icon-5.open span:nth-child(3){\r\ntransform: rotate(-45deg);\r\ntop: 13px;\r\n}\r\n/* nav-icon-6 */\r\n.nav-icon-6{\r\nwidth: 35px;\r\nheight: 30px;\r\nmargin: 10px 10px;\r\nposition: relative;\r\ncursor: pointer;\r\ndisplay: inline-block;\r\n}\r\n.nav-icon-6 span{\r\nbackground-color:#fff;\r\nposition: absolute;\r\nborder-radius: 2px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\nwidth:100%;\r\nheight: 4px;\r\n}\r\n.nav-icon-6 span:nth-child(1){\r\ntop:0px;\r\nleft: 0px;\r\n}\r\n.nav-icon-6 span:nth-child(2){\r\ntop:13px;\r\nleft: 0px;\r\n}\r\n.nav-icon-6 span:nth-child(3){\r\nbottom:0px;\r\nleft: 0px;\r\n}\r\n.nav-icon-6:not(.open):hover span:nth-child(1){\r\ntransform:  scaleY(1.2);\r\nleft: -5px;\r\n}\r\n.nav-icon-6:not(.open):hover span:nth-child(2){\r\ntransform: rotate(5deg) scaleY(1.1);\r\n}\r\n.nav-icon-6:not(.open):hover span:nth-child(3){\r\ntransform:  scaleY(1.2);\r\nleft: 5px;\r\n}\r\n.nav-icon-6.open span:nth-child(1){\r\ntransform: rotate(45deg) scaleX(0.7);\r\ntop: 13PX;\r\nleft: -8px;\r\n}\r\n.nav-icon-6.open span:nth-child(2){\r\ntransform: scale(0);\r\ntransition-duration: 50ms\r\n}\r\n.nav-icon-6.open span:nth-child(3){\r\ntransform: rotate(-45deg) scaleX(0.7);\r\ntop: 13PX;\r\nleft: 7px;\r\n}\r\n/* nav-icon-7 */\r\n.nav-icon-7{\r\nwidth: 35px;\r\nheight: 30px;\r\nmargin: 10px 10px;\r\nposition: relative;\r\ncursor: pointer;\r\ndisplay: inline-block;\r\n}\r\n.nav-icon-7 span{\r\nbackground-color:#FFF;\r\nposition: absolute;\r\nborder-radius: 2px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\nwidth:100%;\r\nheight: 4px;\r\n}\r\n.nav-icon-7 span:nth-child(1){\r\ntop:0px;\r\nleft: 0px;\r\n}\r\n.nav-icon-7 span:nth-child(2){\r\ntop:13px;\r\nleft: 0px;\r\n}\r\n.nav-icon-7 span:nth-child(3){\r\nbottom:0px;\r\nleft: 0px;\r\n}\r\n.nav-icon-7:not(.open):hover span:nth-child(1){\r\ntransform: scaleX(.8);\r\n}\r\n.nav-icon-7:not(.open):hover span:nth-child(2){\r\ntransform: scaleX(.5);\r\n}\r\n.nav-icon-7:not(.open):hover span:nth-child(3){\r\ntransform: scaleX(.8);\r\n}\r\n.nav-icon-7.open span:nth-child(1){\r\ntransform: rotate(90deg);\r\ntop: 13PX;\r\n}\r\n.nav-icon-7.open span:nth-child(2){\r\ntransform: scale(0);\r\ntransition-duration: 50ms\r\n}\r\n.nav-icon-7.open span:nth-child(3){\r\ntop: 13PX;\r\n}\r\n/* nav-icon-8 */\r\n.nav-icon-8{\r\nwidth: 35px;\r\nheight: 30px;\r\nmargin: 10px 10px;\r\nposition: relative;\r\ncursor: pointer;\r\ndisplay: inline-block;\r\n}\r\n.nav-icon-8 span{\r\nbackground-color:#FFF;\r\nposition: absolute;\r\nborder-radius: 2px;\r\ntransition: .3s cubic-bezier(.8, .5, .2, 1.4);\r\nwidth:100%;\r\nheight: 4px;\r\n}\r\n.nav-icon-8 span:nth-child(1){\r\ntop:0px;\r\nleft: 0px;\r\n}\r\n.nav-icon-8 span:nth-child(2){\r\ntop:13px;\r\nleft: 0px;\r\n}\r\n.nav-icon-8 span:nth-child(3){\r\nbottom:0px;\r\nleft: 0px;\r\n}\r\n.nav-icon-8:not(.open):hover span:nth-child(1){\r\ntransform: scaleX(.8);\r\n}\r\n.nav-icon-8:not(.open):hover span:nth-child(2){\r\ntransform: scaleX(.5);\r\n}\r\n.nav-icon-8:not(.open):hover span:nth-child(3){\r\ntransform: scaleX(.8);\r\n}\r\n.nav-icon-8.open span:nth-child(1){\r\ntop: 13px;\r\n}\r\n.nav-icon-8.open span:nth-child(2){\r\ntop:13px;\r\n}\r\n.nav-icon-8.open span:nth-child(3){\r\n    top: 13px;\r\n\r\n}\r\n\r\n</style>\r\n\r\n\r\n<div >\r\n\r\n    {#if style===1}\r\n        <div class=\"icon nav-icon-1\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    {:else if  style===2}\r\n        <div class=\"icon nav-icon-2\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    {:else if  style===3}\r\n        <div class=\"icon nav-icon-3\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    {:else if  style===4}\r\n        <div class=\"icon nav-icon-4\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    {:else if  style===5}\r\n        <div class=\"icon nav-icon-5\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    {:else if  style===6}\r\n        <div class=\"icon nav-icon-6\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </div>\r\n    {:else if  style===7}\r\n        <div class=\"icon nav-icon-7\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n\r\n        </div>\r\n    {:else}\r\n    \r\n        <div class=\"icon nav-icon-8\" class:open={active} on:click=\"{()=>active = !active}\">\r\n            <span></span>\r\n\r\n            <span></span>\r\n            <span></span>\r\n\r\n        </div>\r\n    {/if}\r\n</div>",
    "\r\n<style lang=\"scss\">.parallax > use {\n  animation: move-forever 25s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite; }\n\n.parallax > use:nth-child(1) {\n  animation-delay: -2s;\n  animation-duration: 7s; }\n\n.parallax > use:nth-child(2) {\n  animation-delay: -3s;\n  animation-duration: 10s; }\n\n.parallax > use:nth-child(3) {\n  animation-delay: -4s;\n  animation-duration: 13s; }\n\n.parallax > use:nth-child(4) {\n  animation-delay: -5s;\n  animation-duration: 20s; }\n\n@keyframes move-forever {\n  0% {\n    transform: translate3d(-90px, 0, 0); }\n  100% {\n    transform: translate3d(85px, 0, 0); } }\n\n.home-container {\n  display: grid;\n  height: 100%;\n  grid-template-rows: 5fr 1fr; }\n\n.home-header {\n  display: grid;\n  grid-template-rows: 1fr auto; }\n\n.home-footer {\n  background: #ffffff;\n  display: grid;\n  place-items: center; }\n\n.inner-header {\n  place-self: center;\n  padding: 2em; }\n\n.waves {\n  display: grid; }</style>\r\n\r\n<div class=\"animated fadeIn slower home-container\">\r\n    <div class=\"home-header\">\r\n\r\n        <div class=\"inner-header\">\r\n            <slot name=\"header\" />\r\n        </div>\r\n        \r\n\r\n        <div class=\"waves\">\r\n            <svg class=\"waves\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 24 150 28\" preserveAspectRatio=\"none\" shape-rendering=\"auto\">\r\n\r\n                <defs>\r\n                    <path id=\"gentle-wave\" d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\" />\r\n                </defs>\r\n\r\n                <g class=\"parallax\">\r\n                    <use xlink:href=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"rgba(255,255,255,0.7\" />\r\n                    <use xlink:href=\"#gentle-wave\" x=\"48\" y=\"3\" fill=\"rgba(255,255,255,0.5)\" />\r\n                    <use xlink:href=\"#gentle-wave\" x=\"48\" y=\"5\" fill=\"rgba(255,255,255,0.3)\" />\r\n                \r\n                    <use xlink:href=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\r\n                \r\n                </g>\r\n\r\n            </svg>\r\n\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"home-footer\">\r\n        <slot name=\"footer\" />\r\n    </div>\r\n</div>"
  ],
  "names": [],
  "mappings": "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"
}