# Form implementation generated from reading ui file 'd:\FELion_GUI3\dist\win-unpacked\resources\python_files\felionlib\utils\felionQt\qt_material\dock_theme.ui'
#
# Created by: PyQt6 UI code generator 6.3.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_DockWidget(object):
    def setupUi(self, DockWidget):
        DockWidget.setObjectName("DockWidget")
        DockWidget.resize(231, 391)
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.gridLayout = QtWidgets.QGridLayout(self.dockWidgetContents)
        self.gridLayout.setObjectName("gridLayout")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.pushButton_primaryColor = QtWidgets.QPushButton(self.dockWidgetContents)
        self.pushButton_primaryColor.setObjectName("pushButton_primaryColor")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.ItemRole.FieldRole, self.pushButton_primaryColor)
        self.pushButton_primaryLightColor = QtWidgets.QPushButton(self.dockWidgetContents)
        self.pushButton_primaryLightColor.setObjectName("pushButton_primaryLightColor")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.ItemRole.FieldRole, self.pushButton_primaryLightColor)
        self.pushButton_secondaryColor = QtWidgets.QPushButton(self.dockWidgetContents)
        self.pushButton_secondaryColor.setObjectName("pushButton_secondaryColor")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.ItemRole.FieldRole, self.pushButton_secondaryColor)
        self.pushButton_secondaryLightColor = QtWidgets.QPushButton(self.dockWidgetContents)
        self.pushButton_secondaryLightColor.setObjectName("pushButton_secondaryLightColor")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.ItemRole.FieldRole, self.pushButton_secondaryLightColor)
        self.pushButton_secondaryDarkColor = QtWidgets.QPushButton(self.dockWidgetContents)
        self.pushButton_secondaryDarkColor.setObjectName("pushButton_secondaryDarkColor")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.ItemRole.FieldRole, self.pushButton_secondaryDarkColor)
        self.pushButton_primaryTextColor = QtWidgets.QPushButton(self.dockWidgetContents)
        self.pushButton_primaryTextColor.setObjectName("pushButton_primaryTextColor")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.ItemRole.FieldRole, self.pushButton_primaryTextColor)
        self.pushButton_secondaryTextColor = QtWidgets.QPushButton(self.dockWidgetContents)
        self.pushButton_secondaryTextColor.setObjectName("pushButton_secondaryTextColor")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.ItemRole.FieldRole, self.pushButton_secondaryTextColor)
        self.checkBox_ligh_theme = QtWidgets.QCheckBox(self.dockWidgetContents)
        self.checkBox_ligh_theme.setObjectName("checkBox_ligh_theme")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.ItemRole.FieldRole, self.checkBox_ligh_theme)
        self.gridLayout.addLayout(self.formLayout, 0, 0, 1, 1)
        DockWidget.setWidget(self.dockWidgetContents)

        self.retranslateUi(DockWidget)
        QtCore.QMetaObject.connectSlotsByName(DockWidget)

    def retranslateUi(self, DockWidget):
        _translate = QtCore.QCoreApplication.translate
        DockWidget.setWindowTitle(_translate("DockWidget", "Change Theme"))
        self.pushButton_primaryColor.setText(_translate("DockWidget", "primaryColor"))
        self.pushButton_primaryLightColor.setText(_translate("DockWidget", "primaryLightColor"))
        self.pushButton_secondaryColor.setText(_translate("DockWidget", "secondaryColor"))
        self.pushButton_secondaryLightColor.setText(_translate("DockWidget", "secondaryLightColor"))
        self.pushButton_secondaryDarkColor.setText(_translate("DockWidget", "secondaryDarkColor"))
        self.pushButton_primaryTextColor.setText(_translate("DockWidget", "primaryTextColor"))
        self.pushButton_secondaryTextColor.setText(_translate("DockWidget", "secondaryTextColor"))
        self.checkBox_ligh_theme.setText(_translate("DockWidget", "Invert secondary colors"))
